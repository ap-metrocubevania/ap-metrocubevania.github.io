{"mappings":"A,C,K,I,E,WEAI,EAAY,OAAO,cAAvB,CAaA,AAZe,CAAA,CAAC,EAAQ,KACtB,IAAK,IAAI,KAAQ,EACf,EAAU,EAAQ,EAAM,CACtB,IAAK,CAAG,CAAC,EAAK,CACd,WAAY,CAAA,EACZ,aAAc,CAAA,EACd,IAAK,AAAC,GAAa,CAAG,CAAC,EAAK,CAAG,IAAM,CACvC,EACJ,CAAA,EAGkB,CAAC,EACG,CACpB,UAAW,IAAM,EACjB,YAAa,IAAM,EACnB,mBAAoB,IAAM,EAC1B,oBAAqB,IAAM,EAC3B,eAAgB,IAAM,CACxB,GAGA,IAAI,EAAiB,CACnB,aAAc,EACd,UAAW,EACX,MAAO,GACP,QAAS,GACT,KAAM,EACR,EACI,EAAsB,CACxB,YAAa,EACb,OAAQ,EACR,KAAM,EACN,KAAM,CACR,EACI,EAAqB,CACvB,QAAS,EACT,OAAQ,EACR,IAAK,EACL,SAAU,EACV,IAAK,CACP,EACI,EAAc,CAChB,SAAU,EACV,QAAS,EACT,KAAM,EACN,KAAM,EACN,YAAa,CACf,EACI,EAAY,CACd,UAAW,EACX,OAAQ,EACR,MAAO,CACT,CAEA,OAAM,UAAoB,MAC1B,CAEA,MAAM,UAAsB,MAC1B,YAAa,AACb,CAAA,KAAM,AACN,aAAY,CAAO,CAAE,CAAY,CAAE,CAAK,CAAE,CACxC,KAAK,CAAC,GACN,IAAI,CAAC,YAAY,CAAG,EACpB,IAAI,CAAC,KAAK,CAAG,gBAAgB,EAC/B,CACF,CAEA,MAAM,UAAmB,MACvB,OAAS,EAAE,AAAC,AACZ,aAAY,CAAO,CAAE,CAAM,CAAE,CAC3B,KAAK,CAAC,GACN,IAAI,CAAC,MAAM,CAAG,CAChB,CACF,CAEA,MAAM,UAA6B,MACnC,CAGA,IAAI,EAAuB,CACzB,QAAS,IACT,qBAAsB,CAAA,EACtB,gBAAiB,IACjB,iBAAkB,CAAA,CACpB,EAOA,SAAS,IACP,IAAM,EAAQ,EAAE,CAChB,IAAK,IAAI,EAAI,EAAE,EAAI,GAAI,IACrB,EAAM,IAAI,CAAC,KAAK,KAAK,CAAC,AAAgB,GAAhB,KAAK,MAAM,KAMnC,OAJA,CAAK,CAAC,GAAG,CAAG,EACZ,CAAK,CAAC,GAAG,CAAG,CAAK,CAAC,GAAG,EAAI,GACzB,CAAK,CAAC,GAAG,CAAG,CAAK,CAAC,GAAG,EAAI,EACzB,CAAK,CAAC,EAAE,CAAG,CAAK,CAAC,GAAG,CAAG,CAAK,CAAC,GAAG,CAAG,CAAK,CAAC,GAAG,CAAG,IACxC,EAAM,GAAG,CAAC,AAAC,GAAM,EAAE,QAAQ,CAAC,KAAK,IAAI,CAAC,GAC/C,CAGA,IAAI,EAA2B,CAC7B,SAAU,GACV,KAAM,IACN,KAAM,EAAE,CACR,QArBkB,CAAE,MAAO,EAAG,MAAO,EAAG,MAAO,CAAE,EAsBjD,MAAO,EAAmB,GAAG,CAC7B,SAAU,CAAA,CACZ,CAGA,OAAM,EACJ,CAAA,CAAO,AAAC,AACR,EAAA,CAAK,AAAC,AACN,EAAA,CAAO,AAAC,AACR,EAAA,CAAS,AAAC,AACV,aAAY,CAAM,CAAE,CAAI,CAAE,CAAM,CAAE,CAAQ,CAAE,CAC1C,IAAI,CAAC,CAAA,CAAO,CAAG,EACf,IAAI,CAAC,CAAA,CAAK,CAAG,EACb,IAAI,CAAC,CAAA,CAAO,CAAG,EACf,IAAI,CAAC,CAAA,CAAS,CAAG,CACnB,CACA,UAAW,CACT,OAAO,IAAI,CAAC,IAAI,AAClB,CACA,IAAI,UAAW,CACb,OAAO,IAAI,CAAC,CAAA,CAAS,AACvB,CACA,IAAI,QAAS,CACX,OAAO,IAAI,CAAC,CAAA,CAAO,AACrB,CACA,IAAI,MAAO,CACT,OAAO,IAAI,CAAC,CAAA,CAAO,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAE,IAAI,CAAC,CAAA,CAAK,CAAC,IAAI,CAAE,CAAA,EACzE,CACA,IAAI,IAAK,CACP,OAAO,IAAI,CAAC,CAAA,CAAK,CAAC,IAAI,AACxB,CACA,IAAI,cAAe,CACjB,OAAO,IAAI,CAAC,CAAA,CAAO,CAAC,OAAO,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,IAAI,CAAC,CAAA,CAAK,CAAC,QAAQ,CAAE,CAAA,EACxF,CACA,IAAI,YAAa,CACf,OAAO,IAAI,CAAC,CAAA,CAAK,CAAC,QAAQ,AAC5B,CACA,IAAI,cAAe,CACjB,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,AACzB,CACA,IAAI,MAAO,CACT,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,AAC3B,CACA,IAAI,aAAc,CAChB,MAAO,AAAC,CAAA,IAAI,CAAC,KAAK,CAAG,EAAoB,WAAW,AAAX,IAAiB,EAAoB,WAAW,AAC3F,CACA,IAAI,QAAS,CACX,MAAO,AAAC,CAAA,IAAI,CAAC,KAAK,CAAG,EAAoB,MAAM,AAAN,IAAY,EAAoB,MAAM,AACjF,CACA,IAAI,MAAO,CACT,MAAO,AAAC,CAAA,IAAI,CAAC,KAAK,CAAG,EAAoB,IAAI,AAAJ,IAAU,EAAoB,IAAI,AAC7E,CACA,IAAI,QAAS,CACX,OAAO,IAAI,CAAC,KAAK,GAAK,EAAoB,IAAI,AAChD,CACA,IAAI,OAAQ,CACV,OAAO,IAAI,CAAC,CAAA,CAAK,CAAC,KAAK,AACzB,CACF,CAGA,MAAM,EACJ,IAAK,AACL,CAAA,QAAS,AACT,CAAA,SAAU,AACV,CAAA,aAAc,AACd,CAAA,gBAAiB,AACjB,CAAA,oBAAqB,AACrB,aAAY,CAAI,CAAE,CAAQ,CAAE,CAC1B,IAAI,CAAC,IAAI,CAAG,EACZ,IAAI,CAAC,QAAQ,CAAG,EAAS,QAAQ,CACjC,IAAI,CAAC,SAAS,CAAG,OAAO,MAAM,CAAC,EAAS,eAAe,EACvD,IAAI,CAAC,aAAa,CAAG,OAAO,MAAM,CAAC,EAAS,mBAAmB,EAC/D,IAAI,CAAC,gBAAgB,CAAG,OAAO,MAAM,CAAC,OAAO,WAAW,CAAC,OAAO,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC,EAAG,EAAE,GAAK,CAAC,EAAG,EAAE,IAC9G,IAAI,CAAC,oBAAoB,CAAG,OAAO,MAAM,CAAC,OAAO,WAAW,CAAC,OAAO,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC,CAAC,EAAG,EAAE,GAAK,CAAC,EAAG,EAAE,GACxH,CACA,eAAgB,CACd,MAAO,CACL,SAAU,IAAI,CAAC,QAAQ,CACvB,gBAAiB,CAAE,GAAG,IAAI,CAAC,SAAS,AAAC,EACrC,oBAAqB,CAAE,GAAG,IAAI,CAAC,aAAa,AAAC,CAC/C,CACF,CACF,CAGA,MAAM,EACJ,CAAA,CAAO,AAAC,AACR,EAAA,CAAS,CAAG,IAAI,GAAI,AACpB,EAAA,CAAU,CAAG,IAAI,GAAI,AACrB,EAAA,CAAM,CAAG,IAAI,GAAI,AACjB,aAAY,CAAM,CAAE,CAClB,IAAI,CAAC,CAAA,CAAO,CAAG,EACf,IAAI,CAAC,CAAA,CAAO,CAAC,MAAM,CAAC,EAAE,CAAC,WAAY,AAAC,IAKlC,IAAK,IAAM,KAJX,IAAI,CAAC,CAAA,CAAS,CAAC,KAAK,GACpB,IAAI,CAAC,CAAA,CAAU,CAAC,KAAK,GACrB,IAAI,CAAC,CAAA,CAAM,CAAC,KAAK,GACjB,IAAI,CAAC,CAAA,CAAS,CAAC,GAAG,CAAC,cAAe,IAAI,CAAC,CAAA,CAAmB,IACvC,EAAO,qBAAqB,CAC7C,IAAI,CAAC,CAAA,CAAU,CAAC,GAAG,CAAC,EAAM,EAAO,qBAAqB,CAAC,EAAK,EAC5D,IAAI,CAAC,CAAA,CAAM,CAAC,GAAG,CAAC,EAEpB,EACF,CACA,YAAY,CAAI,CAAE,CAChB,OAAO,IAAI,CAAC,CAAA,CAAS,CAAC,GAAG,CAAC,IAAS,IACrC,CACA,MAAM,aAAa,EAAQ,EAAE,CAAE,EAAS,CAAA,CAAI,CAAE,CACvB,IAAjB,EAAM,MAAM,EACd,CAAA,EAAQ,MAAM,IAAI,CAAC,IAAI,CAAC,CAAA,CAAM,CAAA,EAShC,IAAM,EAAO,CAAE,MAAO,CAAC,CAAE,EACzB,IAAK,IAAM,KARX,EAAQ,EAAM,MAAM,CAAC,AAAC,GACpB,EAAK,IAAI,CAAC,CAAA,CAAM,CAAC,GAAG,CAAC,IAEjB,IAAI,CAAC,CAAA,CAAS,CAAC,GAAG,CAAC,IAAO,WAAa,IAAI,CAAC,CAAA,CAAU,CAAC,GAAG,CAAC,IAKvC,CACxB,IAAM,EAAU,CAAE,IAAK,iBAAkB,MAAO,CAAC,EAAK,AAAC,EACjD,CAAC,EAAS,CAAG,MAAM,IAAI,CAAC,CAAA,CAAO,CAAC,MAAM,CAAC,IAAI,CAAC,GAAS,IAAI,CAAC,cAChE,CAAA,EAAK,KAAK,CAAC,EAAK,CAAG,EAAS,IAAI,CAAC,KAAK,CAAC,EAAK,AAC9C,CAIA,OAHI,GACF,IAAI,CAAC,aAAa,CAAC,GAEd,CACT,CACA,cAAc,CAAW,CAAE,CACzB,IAAK,IAAM,KAAQ,EAAY,KAAK,CAClC,IAAI,CAAC,CAAA,CAAS,CAAC,GAAG,CAAC,EAAM,IAAI,EAAgB,EAAM,EAAY,KAAK,CAAC,EAAK,GAC1E,IAAI,CAAC,CAAA,CAAU,CAAC,GAAG,CAAC,EAAM,EAAY,KAAK,CAAC,EAAK,CAAC,QAAQ,CAE9D,CACA,eAAgB,CACd,MAAO,CACL,MAAO,IAAI,CAAC,CAAA,CAAS,CAAC,OAAO,GAAG,MAAM,CAAC,CAAC,EAAO,CAAC,EAAM,EAAI,IACxD,CAAK,CAAC,EAAK,CAAG,EAAI,aAAa,GACxB,GACN,CAAC,EACN,CACF,CACA,eAAe,CAAI,CAAE,CAAE,CAAE,EAAW,CAAA,CAAI,CAAE,CACxC,IAAM,EAAe,CAAC,aAAa,EAAE,EAAA,CAAI,CACnC,EAAc,IAAI,CAAC,WAAW,CAAC,GACrC,GAAI,CAAC,EACH,OAAO,EAAW,EAAe,KAAA,EAEnC,IAAM,EAAO,EAAY,gBAAgB,CAAC,EAAG,QAC7C,AAAI,GAAY,AAAS,KAAA,IAAT,EACP,EAEF,CACT,CACA,mBAAmB,CAAI,CAAE,CAAE,CAAE,EAAW,CAAA,CAAI,CAAE,CAC5C,IAAM,EAAe,CAAC,iBAAiB,EAAE,EAAA,CAAI,CACvC,EAAc,IAAI,CAAC,WAAW,CAAC,GACrC,GAAI,CAAC,EACH,OAAO,EAAW,EAAe,KAAA,EAEnC,IAAM,EAAO,EAAY,oBAAoB,CAAC,EAAG,QACjD,AAAI,GAAY,AAAS,KAAA,IAAT,EACP,EAEF,CACT,CACA,CAAA,CAAmB,GACjB,OAAO,IAAI,EAAgB,cAAe,CACxC,SAAU,2CACV,gBAAiB,CAAE,QAAS,EAAG,EAC/B,oBAAqB,CAAE,gBAAiB,GAAI,OAAQ,EAAG,CACzD,EACF,CACF,CAGA,MAAM,EACJ,CAAA,CAAO,AAAC,AACR,EAAA,CAAW,CAAG,EAAE,AAAC,AACjB,EAAA,CAAI,AAAC,AACL,EAAA,CAAQ,AAAC,AACT,aAAY,CAAM,CAAE,CAAG,CAAE,CAAQ,CAAE,CACjC,IAAI,CAAC,CAAA,CAAO,CAAG,EACf,IAAI,CAAC,CAAA,CAAI,CAAG,EACZ,IAAI,CAAC,CAAA,CAAQ,CAAG,CAClB,CACA,QAAQ,CAAK,CAAE,CAEb,OADA,IAAI,CAAC,CAAA,CAAW,CAAC,IAAI,CAAC,CAAE,UAAW,UAAW,MAAA,CAAM,GAC7C,IAAI,AACb,CACA,SAAU,CAER,OADA,IAAI,CAAC,CAAA,CAAW,CAAC,IAAI,CAAC,CAAE,UAAW,UAAW,MAAO,IAAK,GACnD,IAAI,AACb,CACA,IAAI,CAAK,CAAE,CAET,OADA,IAAI,CAAC,CAAA,CAAW,CAAC,IAAI,CAAC,CAAE,UAAW,MAAO,MAAA,CAAM,GACzC,IAAI,AACb,CACA,SAAS,CAAK,CAAE,CAEd,OADA,IAAI,CAAC,CAAA,CAAW,CAAC,IAAI,CAAC,CAAE,UAAW,MAAO,MAAA,CAAM,GACzC,IAAI,AACb,CACA,MAAM,CAAK,CAAE,CAEX,OADA,IAAI,CAAC,CAAA,CAAW,CAAC,IAAI,CAAC,CAAE,UAAW,MAAO,MAAA,CAAM,GACzC,IAAI,AACb,CACA,UAAU,CAAK,CAAE,CAEf,OADA,IAAI,CAAC,CAAA,CAAW,CAAC,IAAI,CAAC,CAAE,UAAW,MAAO,MAAA,CAAM,GACzC,IAAI,AACb,CACA,OAAQ,CAEN,OADA,IAAI,CAAC,CAAA,CAAW,CAAC,IAAI,CAAC,CAAE,UAAW,QAAS,MAAO,IAAK,GACjD,IAAI,AACb,CACA,SAAU,CAER,OADA,IAAI,CAAC,CAAA,CAAW,CAAC,IAAI,CAAC,CAAE,UAAW,OAAQ,MAAO,IAAK,GAChD,IAAI,AACb,CACA,IAAI,CAAK,CAAE,CAET,OADA,IAAI,CAAC,CAAA,CAAW,CAAC,IAAI,CAAC,CAAE,UAAW,MAAO,MAAA,CAAM,GACzC,IAAI,AACb,CACA,IAAI,CAAK,CAAE,CAET,OADA,IAAI,CAAC,CAAA,CAAW,CAAC,IAAI,CAAC,CAAE,UAAW,MAAO,MAAA,CAAM,GACzC,IAAI,AACb,CACA,IAAI,CAAK,CAAE,CAET,OADA,IAAI,CAAC,CAAA,CAAW,CAAC,IAAI,CAAC,CAAE,UAAW,MAAO,MAAA,CAAM,GACzC,IAAI,AACb,CACA,GAAG,CAAK,CAAE,CAER,OADA,IAAI,CAAC,CAAA,CAAW,CAAC,IAAI,CAAC,CAAE,UAAW,KAAM,MAAA,CAAM,GACxC,IAAI,AACb,CACA,IAAI,CAAK,CAAE,CAET,OADA,IAAI,CAAC,CAAA,CAAW,CAAC,IAAI,CAAC,CAAE,UAAW,MAAO,MAAA,CAAM,GACzC,IAAI,AACb,CACA,UAAU,CAAK,CAAE,CAEf,OADA,IAAI,CAAC,CAAA,CAAW,CAAC,IAAI,CAAC,CAAE,UAAW,aAAc,MAAA,CAAM,GAChD,IAAI,AACb,CACA,WAAW,CAAK,CAAE,CAEhB,OADA,IAAI,CAAC,CAAA,CAAW,CAAC,IAAI,CAAC,CAAE,UAAW,cAAe,MAAA,CAAM,GACjD,IAAI,AACb,CACA,OAAO,CAAK,CAAE,CAEZ,OADA,IAAI,CAAC,CAAA,CAAW,CAAC,IAAI,CAAC,CAAE,UAAW,SAAU,MAAA,CAAM,GAC5C,IAAI,AACb,CACA,IAAI,CAAK,CAAE,CAET,OADA,IAAI,CAAC,CAAA,CAAW,CAAC,IAAI,CAAC,CAAE,UAAW,MAAO,MAAA,CAAM,GACzC,IAAI,AACb,CACA,OAAO,CAAK,CAAE,CAEZ,OADA,IAAI,CAAC,CAAA,CAAW,CAAC,IAAI,CAAC,CAAE,UAAW,SAAU,MAAA,CAAM,GAC5C,IAAI,AACb,CACA,MAAM,OAAO,EAAa,CAAA,CAAK,CAAE,CAC/B,IAAM,EAAQ,IACR,EAAU,CACd,IAAK,MACL,QAAS,IAAI,CAAC,CAAA,CAAQ,CACtB,IAAK,IAAI,CAAC,CAAA,CAAI,CACd,WAAY,IAAI,CAAC,CAAA,CAAW,CAC5B,WAAY,EACZ,KAAM,CACR,EAEA,GADA,IAAI,CAAC,CAAA,CAAO,CAAC,MAAM,CAAC,IAAI,CAAC,GACrB,CAAC,EACH,OAEF,GAAM,CAAC,EAAS,CAAG,MAAM,IAAI,CAAC,CAAA,CAAO,CAAC,MAAM,CAAC,IAAI,CAAC,WAAY,AAAC,GAAW,EAAO,IAAI,GAAK,GAC1F,OAAO,EAAS,KAAK,AACvB,CACF,CAGA,MAAM,EACJ,CAAA,CAAO,AAAC,AACR,EAAA,CAAQ,CAAG,CAAC,CAAE,AACd,EAAA,CAAY,CAAG,CAAC,CAAE,AAClB,aAAY,CAAM,CAAE,CAClB,IAAI,CAAC,CAAA,CAAO,CAAG,EACf,IAAI,CAAC,CAAA,CAAO,CAAC,MAAM,CAAC,EAAE,CAAC,eAAgB,KACrC,IAAI,CAAC,CAAA,CAAQ,CAAG,CAAC,EACjB,IAAI,CAAC,CAAA,CAAY,CAAG,CAAC,CACvB,GAAG,EAAE,CAAC,WAAY,AAAC,IACjB,IAAI,CAAC,CAAA,CAAQ,CAAC,EAAO,GAAG,CAAC,CAAG,EAAO,KAAK,CACxC,IAAM,EAAY,IAAI,CAAC,CAAA,CAAY,CAAC,EAAO,GAAG,CAAC,CAC3C,GACF,EAAU,OAAO,CAAC,AAAC,GAAa,EAAS,EAAO,GAAG,CAAE,EAAO,KAAK,CAAE,EAAO,cAAc,EAE5F,GAAG,EAAE,CAAC,YAAa,KACjB,GAAI,IAAI,CAAC,CAAA,CAAO,CAAC,OAAO,CAAC,gBAAgB,CAAE,CACzC,IAAM,EAAM,GAAG,IAAI,CAAC,CAAA,CAAO,CAAC,IAAI,UAAsB,WAAW,WAAW,CAC5E,IAAI,CAAC,OAAO,CAAC,2BAA4B,CAAC,GAAG,OAAO,GAAG,MAAM,CAAC,CAAE,CAAC,EAAI,CAAE,CAAA,CAAK,GAAG,MAAM,CAAC,CAAA,EACxF,CACF,EACF,CACA,IAAI,OAAQ,CACV,OAAO,gBAAgB,IAAI,CAAC,CAAA,CAAQ,CACtC,CACA,MAAM,MAAM,CAAK,CAAE,EAAU,CAAA,CAAK,CAAE,CAClC,IAAI,EAAO,AAAiB,UAAjB,OAAO,EAAqB,CAAC,EAAM,CAAG,EACjD,GAAI,EAAS,CACX,IAAM,EAAc,EAAK,MAAM,CAAC,AAAC,GAAQ,AAAuB,KAAA,IAAvB,IAAI,CAAC,CAAA,CAAQ,CAAC,EAAI,CACvD,CAAA,EAAY,MAAM,CAAG,GACvB,IAAI,CAAC,CAAA,CAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAE,IAAK,YAAa,KAAM,CAAY,EAEnE,CACA,IAAI,EAAO,CAAC,EASZ,GAAI,AARJ,CAAA,EAAO,EAAK,MAAM,CAAC,AAAC,IAClB,IAAM,EAAQ,gBAAgB,IAAI,CAAC,CAAA,CAAQ,CAAC,EAAI,EAC1C,EAAS,AAAU,KAAA,IAAV,EAIf,OAHI,GACF,CAAA,CAAI,CAAC,EAAI,CAAG,CADd,EAGO,CAAC,CACV,EAAA,EACS,MAAM,CAAG,EAAG,CACnB,IAAM,EAAW,MAAM,IAAI,CAAC,CAAA,CAAI,CAAC,GACjC,EAAO,CAAE,GAAG,CAAI,CAAE,GAAG,CAAQ,AAAC,CAChC,CAIA,OAHI,GACF,CAAA,IAAI,CAAC,CAAA,CAAQ,CAAG,CAAE,GAAG,IAAI,CAAC,CAAA,CAAQ,CAAE,GAAG,CAAI,AAAC,CAAA,EAEvC,AAAiB,UAAjB,OAAO,EAAqB,CAAI,CAAC,EAAM,CAAG,CACnD,CACA,MAAM,OAAO,CAAI,CAAE,CAAQ,CAAE,CAK3B,OAJA,EAAK,OAAO,CAAC,AAAC,IACZ,IAAI,CAAC,CAAA,CAAY,CAAC,EAAI,GAAK,EAAE,CAC7B,IAAI,CAAC,CAAA,CAAY,CAAC,EAAI,CAAC,IAAI,CAAC,EAC9B,GACO,IAAI,CAAC,KAAK,CAAC,EAAM,CAAA,EAC1B,CACA,QAAQ,CAAG,CAAE,CAAQ,CAAE,CACrB,GAAI,EAAI,UAAU,CAAC,UACjB,MAAM,UAAU,qCAElB,OAAO,IAAI,EAA0B,IAAI,CAAC,CAAA,CAAO,CAAE,EAAK,EAC1D,CACA,MAAM,oBAAoB,CAAI,CAAE,CAC9B,OAAO,MAAM,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,uBAAuB,EAAE,EAAA,CAAM,CAAC,CAAE,CAAA,EAC9D,CACA,MAAM,wBAAwB,CAAI,CAAE,CAClC,OAAO,MAAM,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,2BAA2B,EAAE,EAAA,CAAM,CAAC,CAAE,CAAA,EAClE,CACA,MAAK,CAAA,CAAI,CAAC,CAAI,EACZ,IAAM,EAAQ,IACR,CAAC,EAAS,CAAG,MAAM,IAAI,CAAC,CAAA,CAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAE,IAAK,MAAO,KAAA,EAAM,KAAM,CAAM,GAAG,IAAI,CAAC,YAAa,AAAC,GAAW,EAAO,IAAI,GAAK,GACnI,OAAO,EAAS,IAAI,AACtB,CACF,CAGA,MAAM,EACJ,CAAA,CAAO,CAAG,CAAC,CAAE,AACb,CAAA,iBAAiB,CAAK,CAAE,CAAQ,CAAE,EAAO,CAAA,CAAK,CAAE,CAC9C,IAAI,CAAC,CAAA,CAAO,CAAC,EAAM,GAAK,EAAE,CAC1B,IAAI,CAAC,CAAA,CAAO,CAAC,EAAM,CAAC,IAAI,CAAC,CAAC,EAAU,EAAK,CAC3C,CACA,oBAAoB,CAAK,CAAE,CAAQ,CAAE,CACnC,IAAM,EAAY,IAAI,CAAC,CAAA,CAAO,CAAC,EAAM,CACjC,GAAa,EAAU,MAAM,CAAG,GAClC,CAAA,IAAI,CAAC,CAAA,CAAO,CAAC,EAAM,CAAG,EAAU,MAAM,CAAC,CAAC,CAAC,EAAG,GAAK,IAAO,EAD1D,CAGF,CACA,cAAc,CAAK,CAAE,CAAI,CAAE,CAEzB,IAAK,GAAM,CAAC,EAAU,EAAK,GADT,IAAI,CAAC,CAAA,CAAO,CAAC,EAAM,EAAI,EAAE,CAEzC,KAAY,GACR,GACF,IAAI,CAAC,mBAAmB,CAAC,EAAO,EAGtC,CACF,CAGA,MAAM,EACJ,CAAA,CAAO,CAAG,IAAI,CAAwB,AACtC,CAAA,GAAG,CAAK,CAAE,CAAQ,CAAE,CAElB,OADA,IAAI,CAAC,CAAA,CAAO,CAAC,gBAAgB,CAAC,EAAO,GAC9B,IAAI,AACb,CACA,IAAI,CAAK,CAAE,CAAQ,CAAE,CAEnB,OADA,IAAI,CAAC,CAAA,CAAO,CAAC,mBAAmB,CAAC,EAAO,GACjC,IAAI,AACb,CACA,MAAM,KAAK,CAAK,CAAE,EAAiB,IAAM,CAAA,CAAI,CAAE,CAC7C,OAAO,IAAI,QAAQ,AAAC,IAClB,IAAM,EAAW,CAAC,GAAG,KACf,KAAkB,KACpB,IAAI,CAAC,CAAA,CAAO,CAAC,mBAAmB,CAAC,EAAO,GACxC,EAAQ,GAEZ,EACA,IAAI,CAAC,CAAA,CAAO,CAAC,gBAAgB,CAAC,EAAO,EACvC,EACF,CACA,KAAK,CAAK,CAAE,CAAM,CAAE,CAClB,IAAI,CAAC,CAAA,CAAO,CAAC,aAAa,CAAC,EAAO,EACpC,CACF,CAGA,MAAM,UAAyB,EAC7B,CAAA,CAAO,AAAC,AACR,EAAA,CAAU,CAAG,OAAO,gBAAgB,AAAC,AACrC,aAAY,CAAM,CAAE,CAClB,KAAK,GACL,IAAI,CAAC,CAAA,CAAO,CAAG,EACf,IAAI,CAAC,CAAA,CAAO,CAAC,MAAM,CAAC,EAAE,CAAC,UAAW,AAAC,IACjC,GAAI,EAAO,IAAI,EAAE,SAAS,cAAgB,EAAO,IAAI,CAAC,IAAI,EAAI,EAAO,IAAI,CAAC,MAAM,CAAE,CAChF,IAAM,EAAY,EAAO,IAAI,AACzB,CAAA,EAAU,IAAI,GAAK,IAAI,CAAC,CAAA,CAAU,GAGtC,IAAI,CAAC,CAAA,CAAU,CAAG,EAAU,IAAI,CAChC,IAAI,CAAC,IAAI,CAAC,gBAAiB,CAAC,EAAU,MAAM,CAAE,AAAiB,IAAjB,EAAU,IAAI,CAAS,EAAU,KAAK,CAAC,EACvF,CACF,EACF,CACA,IAAI,SAAU,CACZ,OAAO,IAAI,CAAC,CAAA,CAAO,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,YAC9C,CACA,iBAAkB,CACZ,IAAI,CAAC,CAAA,CAAO,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,cAGzC,IAAI,CAAC,CAAA,CAAO,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,CAAA,CAAO,CAAC,SAAS,CAAC,IAAI,CAAE,YAAY,CACvE,CACA,kBAAmB,CACZ,IAAI,CAAC,CAAA,CAAO,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,cAG1C,IAAI,CAAC,CAAA,CAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAA,CAAO,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,AAAC,GAAQ,AAAQ,cAAR,GACtE,CACA,cAAc,CAAM,CAAE,CAAK,CAAE,CAC3B,GAAI,CAAC,IAAI,CAAC,CAAA,CAAO,CAAC,aAAa,CAC7B,MAAM,IAAI,EAAqB,iEAEjC,GAAI,CAAC,IAAI,CAAC,OAAO,CACf,MAEF,CAAA,IAAI,CAAC,CAAA,CAAU,CAAG,KAAK,IAAI,CAAC,KAAK,GAAG,GAAK,KACzC,IAAM,EAAY,CAChB,OAAA,EACA,MAAA,EACA,KAAM,IAAI,CAAC,CAAA,CAAU,AACvB,EACA,IAAI,CAAC,CAAA,CAAO,CAAC,MAAM,CAAC,CAAE,KAAM,CAAC,YAAY,AAAC,EAAG,EAC/C,CACF,CAGA,MAAM,EACJ,CAAA,CAAO,AAAC,AACR,EAAA,CAAK,AAAC,AACN,EAAA,CAAK,AAAC,AACN,aAAY,CAAM,CAAE,CAAI,CAAE,CACxB,IAAI,CAAC,CAAA,CAAO,CAAG,EACf,IAAI,CAAC,CAAA,CAAK,CAAG,EACb,IAAI,CAAC,CAAA,CAAK,CAAG,IAAI,EAAK,IAAI,CAAC,CAAA,CAAO,CAAE,CAAE,KAAM,EAAK,IAAI,CAAE,SAAU,EAAK,QAAQ,CAAE,OAAQ,EAAK,cAAc,CAAE,MAAO,EAAK,UAAU,AAAC,EAAG,IAAI,CAAC,CAAA,CAAO,CAAC,OAAO,CAAC,UAAU,CAAC,EAAK,cAAc,EAAG,IAAI,CAAC,CAAA,CAAO,CAAC,OAAO,CAAC,UAAU,CAAC,EAAK,gBAAgB,EACpP,CACA,IAAI,MAAO,CACT,OAAO,IAAI,CAAC,CAAA,CAAK,AACnB,CACA,IAAI,OAAQ,CACV,OAAO,IAAI,CAAC,CAAA,CAAK,CAAC,KAAK,AACzB,CACA,IAAI,UAAW,CACb,OAAO,IAAI,CAAC,CAAA,CAAK,CAAC,QAAQ,EAAI,SAChC,CACF,CAGA,MAAM,UAAqB,EACzB,CAAA,CAAO,AAAC,AACR,EAAA,CAAS,CAAG,EAAE,AAAC,AACf,EAAA,CAAM,CAAG,EAAE,AAAC,AACZ,aAAY,CAAM,CAAE,CAClB,KAAK,GACL,IAAI,CAAC,CAAA,CAAO,CAAG,EACf,IAAI,CAAC,CAAA,CAAO,CAAC,MAAM,CAAC,EAAE,CAAC,gBAAiB,AAAC,IACvC,IAAI,EAAQ,EAAO,KAAK,CAClB,EAAQ,EAAO,KAAK,CAAC,MAAM,CAC3B,EAAQ,IAAI,EAAO,KAAK,CAAC,CAC/B,KAAO,EAAM,MAAM,CAAG,GAAG,CACvB,IAAM,EAAc,EAAM,KAAK,EAC/B,CAAA,IAAI,CAAC,CAAA,CAAS,CAAC,IAAQ,CAAG,IAAI,EAAK,IAAI,CAAC,CAAA,CAAO,CAAE,EAAa,IAAI,CAAC,CAAA,CAAO,CAAC,OAAO,CAAC,UAAU,CAAC,EAAY,MAAM,EAAG,IAAI,CAAC,CAAA,CAAO,CAAC,OAAO,CAAC,IAAI,CAC9I,CACA,IAAI,CAAC,IAAI,CAAC,gBAAiB,CAAC,IAAI,CAAC,CAAA,CAAS,CAAC,KAAK,CAAC,EAAO,KAAK,CAAE,EAAO,KAAK,CAAG,GAAQ,EAAO,KAAK,CAAC,CACrG,GAAG,EAAE,CAAC,YAAa,KACjB,IAAI,CAAC,CAAA,CAAM,CAAG,EAAE,CAChB,IAAI,CAAC,CAAA,CAAS,CAAG,EAAE,CACnB,IAAI,CAAC,CAAA,CAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,YAAY,EAAE,IAAI,CAAC,CAAA,CAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA,CAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAA,CAAE,CAAC,CAAE,IAAI,CAAC,CAAA,CAAa,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,AAAC,IACpJ,IAAM,EAAQ,CAAI,CAAC,CAAC,YAAY,EAAE,IAAI,CAAC,CAAA,CAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA,CAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAA,CAAE,CAAC,AACrG,CAAA,IAAI,CAAC,CAAA,CAAM,CAAG,EAAM,GAAG,CAAC,AAAC,GAAS,IAAI,EAAK,IAAI,CAAC,CAAA,CAAO,CAAE,IACzD,IAAI,CAAC,IAAI,CAAC,mBAAoB,CAAC,IAAI,CAAC,CAAA,CAAM,CAAC,CAC7C,GAAG,KAAK,CAAC,AAAC,IACR,MAAM,CACR,EACF,EACF,CACA,IAAI,UAAW,CACb,MAAO,IAAI,IAAI,CAAC,CAAA,CAAS,CAAC,AAC5B,CACA,IAAI,OAAQ,CACV,MAAO,IAAI,IAAI,CAAC,CAAA,CAAM,CAAC,AACzB,CACA,IAAI,OAAQ,CACV,OAAO,IAAI,CAAC,CAAA,CAAS,CAAC,MAAM,AAC9B,CACA,CAAA,CAAa,CAAC,CAAC,CAAE,CAAK,EACpB,IAAK,IAAI,EAAI,EAAE,EAAI,EAAM,MAAM,CAAE,IAC3B,AAAmB,KAAA,IAAnB,IAAI,CAAC,CAAA,CAAM,CAAC,EAAE,EAChB,IAAI,CAAC,CAAA,CAAM,CAAC,EAAE,CAAG,IAAI,EAAK,IAAI,CAAC,CAAA,CAAO,CAAE,CAAK,CAAC,EAAE,EAChD,IAAI,CAAC,IAAI,CAAC,eAAgB,CAAC,IAAI,CAAC,CAAA,CAAM,CAAC,EAAE,CAAC,GACjC,IAAI,CAAC,CAAA,CAAM,CAAC,EAAE,CAAC,KAAK,GAAK,CAAK,CAAC,EAAE,CAAC,KAAK,GAChD,IAAI,CAAC,CAAA,CAAM,CAAC,EAAE,CAAG,IAAI,EAAK,IAAI,CAAC,CAAA,CAAO,CAAE,CAAK,CAAC,EAAE,EAChD,IAAI,CAAC,IAAI,CAAC,YAAa,CAAC,IAAI,CAAC,CAAA,CAAM,CAAC,EAAE,CAAC,EAG7C,CACF,CAGA,MAAM,EACJ,MAAO,AACP,CAAA,IAAK,AACL,aAAY,CAAM,CAAE,CAAI,CAAE,CACxB,IAAI,CAAC,MAAM,CAAG,EACd,IAAI,CAAC,IAAI,CAAG,CACd,CACA,UAAW,CACT,OAAO,IAAI,CAAC,IAAI,AAClB,CACF,CAEA,MAAM,UAAwB,EAC5B,IAAK,AACL,CAAA,KAAO,MAAO,AACd,CAAA,IAAK,AACL,aAAY,CAAM,CAAE,CAAI,CAAE,CAAI,CAAE,CAAQ,CAAE,CACxC,KAAK,CAAC,EAAQ,GACd,IAAM,EAAS,EAAO,OAAO,CAAC,UAAU,CAAC,EAAK,MAAM,CAAE,EAAS,IAAI,CACnE,CAAA,IAAI,CAAC,IAAI,CAAG,EACZ,IAAI,CAAC,IAAI,CAAG,IAAI,EAAK,EAAQ,EAAM,EAAQ,EAC7C,CACA,IAAI,MAAO,CACT,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,AACvB,CACF,CAEA,MAAM,UAA4B,EAChC,CAAA,CAAK,AAAC,AACN,CAAA,IAAK,AACL,CAAA,KAAO,UAAW,AAClB,CAAA,EAAG,AACH,aAAY,CAAM,CAAE,CAAI,CAAE,CACxB,KAAK,CAAC,EAAQ,GACd,IAAM,EAAS,EAAO,OAAO,CAAC,UAAU,CAAC,EAAK,MAAM,EAC9C,EAAM,EAAO,OAAO,CAAC,WAAW,CAAC,EAAO,IAAI,CAClD,CAAA,IAAI,CAAC,IAAI,CAAG,EACR,AAAc,kBAAd,EAAK,IAAI,EACX,IAAI,CAAC,CAAA,CAAK,CAAG,EAAK,IAAI,CACtB,IAAI,CAAC,EAAE,CAAG,EAAI,aAAa,CAAC,EAAK,IAAI,CAAC,GAEtC,IAAI,CAAC,EAAE,CAAG,SAAS,EAAK,IAAI,EAC5B,IAAI,CAAC,CAAA,CAAK,CAAG,EAAO,OAAO,CAAC,kBAAkB,CAAC,EAAO,IAAI,CAAE,IAAI,CAAC,EAAE,CAAE,CAAA,GAEzE,CACA,IAAI,MAAO,CACT,OAAO,IAAI,CAAC,CAAA,CAAK,AACnB,CACF,CAEA,MAAM,UAAyB,EAC7B,IAAK,AACL,CAAA,KAAO,OAAQ,AACf,CAAA,KAAM,AACN,aAAY,CAAM,CAAE,CAAI,CAAE,CACxB,KAAK,CAAC,EAAQ,GACd,IAAI,CAAC,IAAI,CAAG,EACZ,IAAI,CAAC,KAAK,CAAG,EAAK,KAAK,AACzB,CACA,IAAI,MAAO,CACT,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,AACvB,CACF,CAEA,MAAM,UAA2B,EAC/B,IAAK,AACL,CAAA,IAAK,AACL,aAAY,CAAM,CAAE,CAAI,CAAE,CACxB,KAAK,CAAC,EAAQ,GACd,IAAI,CAAC,IAAI,CAAG,EACR,AAAmB,kBAAnB,IAAI,CAAC,IAAI,CAAC,IAAI,CAChB,IAAI,CAAC,IAAI,CAAG,WAEZ,IAAI,CAAC,IAAI,CAAG,MAEhB,CACA,IAAI,MAAO,CACT,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,AACvB,CACF,CAEA,MAAM,UAA0B,EAC9B,IAAK,AACL,CAAA,KAAO,QAAS,AAChB,CAAA,MAAO,AACP,aAAY,CAAM,CAAE,CAAI,CAAE,CAGxB,GAFA,KAAK,CAAC,EAAQ,GACd,IAAI,CAAC,IAAI,CAAG,EACR,AAAc,cAAd,EAAK,IAAI,CACX,IAAI,CAAC,MAAM,CAAG,EAAO,OAAO,CAAC,UAAU,CAAC,SAAS,EAAK,IAAI,OACrD,CACL,IAAM,EAAS,EAAO,OAAO,CAAC,KAAK,CAAC,EAAO,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,AAAC,GAAM,EAAE,IAAI,GAAK,EAAK,IAAI,EAC9F,GAAI,CAAC,EACH,MAAM,AAAI,MAAM,CAAC,+BAA+B,EAAE,EAAK,IAAI,CAAA,CAAE,CAE/D,CAAA,IAAI,CAAC,MAAM,CAAG,CAChB,CACF,CACA,IAAI,MAAO,CACT,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,AAC1B,CACF,CAGA,MAAM,UAAuB,EAC3B,CAAA,CAAO,AAAC,AACR,EAAA,CAAS,CAAG,EAAE,AAAC,AACf,KAAI,KAAM,CACR,MAAO,IAAI,IAAI,CAAC,CAAA,CAAS,CAAC,AAC5B,CACA,YAAY,CAAM,CAAE,CAClB,KAAK,GACL,IAAI,CAAC,CAAA,CAAO,CAAG,EACf,IAAI,CAAC,CAAA,CAAO,CAAC,MAAM,CAAC,EAAE,CAAC,YAAa,IAAI,CAAC,CAAA,CAAY,CAAC,IAAI,CAAC,IAAI,EACjE,CACA,MAAM,IAAI,CAAI,CAAE,CACd,GAAI,CAAC,IAAI,CAAC,CAAA,CAAO,CAAC,aAAa,CAC7B,MAAM,IAAI,EAAqB,0DAGjC,IAAM,EAAU,CAAE,IAAK,MAAO,KAD9B,EAAO,EAAK,IAAI,EACmB,EACnC,IAAI,CAAC,CAAA,CAAO,CAAC,MAAM,CAAC,IAAI,CAAC,GACzB,MAAM,IAAI,CAAC,IAAI,CAAC,OAAQ,AAAC,GAAY,IAAY,EACnD,CACA,CAAA,CAAY,CAAC,CAAM,EACjB,IAAM,EAAQ,EAAE,CAChB,IAAK,IAAM,KAAQ,EAAO,IAAI,CAC5B,OAAQ,EAAK,IAAI,EACf,IAAK,UACL,IAAK,YAAa,KAEZ,EAEF,EADE,AAAoB,cAApB,AAFe,EAEJ,IAAI,CACN,IAAI,CAAC,CAAA,CAAO,CAAC,OAAO,CAAC,UAAU,CAAC,AAH1B,EAGqC,SAAS,CAAE,AAHhD,EAG2D,IAAI,EAErE,IAAI,CAAC,CAAA,CAAO,CAAC,OAAO,CAAC,UAAU,CAAC,AAL1B,EAKqC,SAAS,EAEjE,EAAM,IAAI,CAAC,IAAI,EAAgB,IAAI,CAAC,CAAA,CAAO,CAAE,EAAM,AAPhC,EAO2C,IAAI,CAAE,IACpE,KACF,CACA,IAAK,cACL,IAAK,gBACH,EAAM,IAAI,CAAC,IAAI,EAAoB,IAAI,CAAC,CAAA,CAAO,CAAE,IACjD,KAEF,KAAK,QACH,EAAM,IAAI,CAAC,IAAI,EAAiB,IAAI,CAAC,CAAA,CAAO,CAAE,IAC9C,KAEF,KAAK,YACL,IAAK,cACH,EAAM,IAAI,CAAC,IAAI,EAAkB,IAAI,CAAC,CAAA,CAAO,CAAE,IAC/C,KAEF,SACE,EAAM,IAAI,CAAC,IAAI,EAAmB,IAAI,CAAC,CAAA,CAAO,CAAE,GAGpD,CAEF,IAAM,EAAO,EAAM,GAAG,CAAC,AAAC,GAAS,EAAK,IAAI,EAAE,IAAI,GAKhD,OAJI,IAAI,CAAC,CAAA,CAAO,CAAC,OAAO,CAAC,eAAe,EAAI,IAC1C,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAE,KAAA,EAAM,MAAA,CAAM,GAC5B,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,EAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAG,IAAI,CAAC,CAAA,CAAO,CAAC,OAAO,CAAC,eAAe,GAEnE,EAAO,IAAI,EACjB,IAAK,WAAY,CACf,IAAM,EAAS,IAAI,CAAC,CAAA,CAAO,CAAC,OAAO,CAAC,UAAU,CAAC,EAAO,IAAI,CAAC,MAAM,EAC3D,EAAW,IAAI,CAAC,CAAA,CAAO,CAAC,OAAO,CAAC,UAAU,CAAC,EAAO,SAAS,EAC3D,EAAO,IAAI,EAAK,IAAI,CAAC,CAAA,CAAO,CAAE,EAAO,IAAI,CAAE,EAAQ,GACzD,IAAI,CAAC,IAAI,CAAC,WAAY,CAAC,EAAM,EAAM,EAAM,EACzC,KACF,CACA,IAAK,YAAa,CAChB,IAAM,EAAS,IAAI,CAAC,CAAA,CAAO,CAAC,OAAO,CAAC,UAAU,CAAC,EAAO,IAAI,CAAC,MAAM,CAAE,EAAO,IAAI,EACxE,EAAW,IAAI,CAAC,CAAA,CAAO,CAAC,OAAO,CAAC,UAAU,CAAC,EAAO,SAAS,CAAE,EAAO,IAAI,EACxE,EAAO,IAAI,EAAK,IAAI,CAAC,CAAA,CAAO,CAAE,EAAO,IAAI,CAAE,EAAQ,GACzD,IAAI,CAAC,IAAI,CAAC,cAAe,CAAC,EAAM,EAAM,EAAM,EAC5C,KACF,CACA,IAAK,OAAQ,CACX,IAAM,EAAS,IAAI,CAAC,CAAA,CAAO,CAAC,OAAO,CAAC,UAAU,CAAC,EAAO,IAAI,CAAC,MAAM,EAC3D,EAAW,IAAI,CAAC,CAAA,CAAO,CAAC,OAAO,CAAC,UAAU,CAAC,EAAO,SAAS,EAC3D,EAAO,IAAI,EAAK,IAAI,CAAC,CAAA,CAAO,CAAE,EAAO,IAAI,CAAE,EAAQ,GACzD,IAAI,CAAC,IAAI,CAAC,aAAc,CAAC,EAAM,EAAM,EAAO,KAAK,CAAE,EAAM,EACzD,KACF,CACA,IAAK,OAAQ,CACX,IAAM,EAAS,IAAI,CAAC,CAAA,CAAO,CAAC,OAAO,CAAC,UAAU,CAAC,EAAO,IAAI,CAAE,EAAO,IAAI,EACvE,IAAI,CAAC,IAAI,CAAC,YAAa,CAAC,EAAM,EAAQ,EAAO,IAAI,CAAE,EAAM,EACzD,KACF,CACA,IAAK,OAAQ,CACX,IAAM,EAAS,IAAI,CAAC,CAAA,CAAO,CAAC,OAAO,CAAC,UAAU,CAAC,EAAO,IAAI,CAAE,EAAO,IAAI,EACvE,IAAI,CAAC,IAAI,CAAC,eAAgB,CAAC,EAAM,EAAQ,EAAM,EAC/C,KACF,CACA,IAAK,OAAQ,CACX,IAAM,EAAS,IAAI,CAAC,CAAA,CAAO,CAAC,OAAO,CAAC,UAAU,CAAC,EAAO,IAAI,CAAE,EAAO,IAAI,EACvE,IAAI,CAAC,IAAI,CAAC,OAAQ,CAAC,EAAO,OAAO,CAAE,EAAQ,EAAM,EACjD,KACF,CACA,IAAK,aACH,IAAI,CAAC,IAAI,CAAC,aAAc,CAAC,EAAO,OAAO,CAAE,EAAM,EAC/C,KAEF,KAAK,cAAe,CAClB,IAAM,EAAS,IAAI,CAAC,CAAA,CAAO,CAAC,OAAO,CAAC,UAAU,CAAC,EAAO,IAAI,CAAE,EAAO,IAAI,EACvE,IAAI,CAAC,IAAI,CAAC,cAAe,CAAC,EAAM,EAAQ,EAAO,IAAI,CAAE,EAAM,EAC3D,KACF,CACA,IAAK,WACH,IAAI,CAAC,IAAI,CAAC,WAAY,CAAC,EAAM,EAAM,EACnC,KAEF,KAAK,gBACH,IAAI,CAAC,IAAI,CAAC,cAAe,CAAC,EAAM,EAAM,EACtC,KAEF,KAAK,qBACH,IAAI,CAAC,IAAI,CAAC,eAAgB,CAAC,EAAM,EAAM,EACvC,KAEF,KAAK,OAAQ,CACX,IAAM,EAAS,IAAI,CAAC,CAAA,CAAO,CAAC,OAAO,CAAC,UAAU,CAAC,EAAO,IAAI,CAAE,EAAO,IAAI,EACvE,IAAI,CAAC,IAAI,CAAC,SAAU,CAAC,EAAM,EAAQ,EAAM,EACzC,KACF,CACA,IAAK,UAAW,CACd,IAAM,EAAS,IAAI,CAAC,CAAA,CAAO,CAAC,OAAO,CAAC,UAAU,CAAC,EAAO,IAAI,CAAE,EAAO,IAAI,EACvE,IAAI,CAAC,IAAI,CAAC,WAAY,CAAC,EAAM,EAAQ,EAAM,EAC3C,KACF,CACA,IAAK,UAAW,CACd,IAAM,EAAS,IAAI,CAAC,CAAA,CAAO,CAAC,OAAO,CAAC,UAAU,CAAC,EAAO,IAAI,CAAE,EAAO,IAAI,EACvE,IAAI,CAAC,IAAI,CAAC,YAAa,CAAC,EAAM,EAAQ,EAAM,EAC5C,KACF,CACA,IAAK,YACH,IAAI,CAAC,IAAI,CAAC,YAAa,CAAC,EAAM,EAAO,SAAS,CAAE,EAAM,CAE1D,CACA,IAAI,CAAC,IAAI,CAAC,UAAW,CAAC,EAAM,EAAM,CACpC,CACF,CAGA,MAAM,EACJ,CAAA,CAAO,AAAC,AACR,EAAA,CAAO,AAAC,AACR,aAAY,CAAM,CAAE,CAAM,CAAE,CAC1B,IAAI,CAAC,CAAA,CAAO,CAAG,EACf,IAAI,CAAC,CAAA,CAAO,CAAG,CACjB,CACA,UAAW,CACT,OAAO,IAAI,CAAC,KAAK,AACnB,CACA,IAAI,MAAO,CACT,OAAO,IAAI,CAAC,CAAA,CAAO,CAAC,IAAI,AAC1B,CACA,IAAI,OAAQ,CACV,OAAO,IAAI,CAAC,CAAA,CAAO,CAAC,KAAK,AAC3B,CACA,IAAI,MAAO,QACT,AAAI,AAAc,IAAd,IAAI,CAAC,IAAI,CACJ,cAEF,IAAI,CAAC,CAAA,CAAY,CAAC,IAAI,AAC/B,CACA,IAAI,MAAO,QACT,AAAI,AAAc,IAAd,IAAI,CAAC,IAAI,CACJ,EAAU,SAAS,CAErB,IAAI,CAAC,CAAA,CAAY,CAAC,IAAI,AAC/B,CACA,IAAI,MAAO,CACT,OAAO,IAAI,CAAC,CAAA,CAAO,CAAC,IAAI,AAC1B,CACA,IAAI,MAAO,CACT,OAAO,IAAI,CAAC,CAAA,CAAO,CAAC,IAAI,AAC1B,CACA,IAAI,SAAU,QACZ,AAAI,IAAI,CAAC,IAAI,GAAK,EAAU,KAAK,CACxB,EAAE,CAEJ,IAAI,CAAC,CAAA,CAAO,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,AAAC,GAAW,IAAI,CAAC,CAAA,CAAY,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAO,IAAI,EACtH,CACA,IAAI,QAAS,QACX,AAAI,AAAc,IAAd,IAAI,CAAC,IAAI,CACJ,EAAE,CAEJ,IAAI,CAAC,CAAA,CAAO,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,AAAC,GAAW,AAAgB,IAAhB,EAAO,IAAI,EAAU,IAAI,CAAC,CAAA,CAAO,CAAC,OAAO,CAAC,KAAK,CAAC,EAAO,IAAI,CAAC,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAC/J,CACA,MAAM,aAAc,QAClB,AAAI,IAAI,CAAC,IAAI,GAAK,EAAU,KAAK,CACxB,EAAe,IAAI,CAErB,MAAM,IAAI,CAAC,CAAA,CAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,oBAAoB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAA,CAAE,GAAK,CAC9F,CACA,MAAM,eAAgB,CACpB,OAAO,MAAM,IAAI,CAAC,CAAA,CAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,gBAAgB,EAAE,IAAI,CAAC,IAAI,CAAA,CAAE,CACxE,CACA,MAAM,YAAa,CAEjB,MAAO,AADO,CAAA,MAAM,IAAI,CAAC,CAAA,CAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAA,CAAE,CAAA,EACzE,GAAG,CAAC,AAAC,GAAS,IAAI,EAAK,IAAI,CAAC,CAAA,CAAO,CAAE,GACpD,CACA,IAAI,CAAA,CAAY,GACd,OAAO,IAAI,CAAC,CAAA,CAAO,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,AAC9C,CACF,CAGA,MAAM,UAAuB,EAC3B,CAAA,CAAO,AAAC,AACR,EAAA,CAAQ,CAAG,EAAE,AAAC,AACd,EAAA,CAAM,CAAG,CAAC,CAAE,AACZ,EAAA,CAAK,CAAG,CAAE,AACV,EAAA,CAAK,CAAG,CAAE,AACV,aAAY,CAAM,CAAE,CAClB,KAAK,GACL,IAAI,CAAC,CAAA,CAAO,CAAG,EACf,IAAI,CAAC,CAAA,CAAO,CAAC,MAAM,CAAC,EAAE,CAAC,YAAa,AAAC,IAKnC,IAAK,IAAM,KAJX,IAAI,CAAC,CAAA,CAAM,CAAG,OAAO,MAAM,CAAC,EAAO,SAAS,EAC5C,IAAI,CAAC,CAAA,CAAQ,CAAG,EAAE,CAClB,IAAI,CAAC,CAAA,CAAK,CAAG,EAAO,IAAI,CACxB,IAAI,CAAC,CAAA,CAAK,CAAG,EAAO,IAAI,CACH,EAAO,OAAO,EACjC,IAAI,CAAC,CAAA,CAAQ,CAAC,EAAO,IAAI,CAAC,GAAK,CAAC,CAAE,KAAM,EAAO,IAAI,CAAE,KAAM,EAAG,KAAM,cAAe,MAAO,aAAc,EAAE,CAC1G,IAAI,CAAC,CAAA,CAAQ,CAAC,EAAO,IAAI,CAAC,CAAC,EAAO,IAAI,CAAC,CAAG,CAE9C,GAAG,EAAE,CAAC,aAAc,AAAC,IACnB,GAAK,EAAO,OAAO,CAGnB,CAAA,IAAK,IAAM,KAAU,EAAO,OAAO,CACjC,GAAI,IAAI,CAAC,CAAA,CAAQ,CAAC,EAAO,IAAI,CAAC,CAAC,EAAO,IAAI,CAAC,CAAC,KAAK,GAAK,EAAO,KAAK,CAAE,CAClE,IAAM,EAAW,IAAI,CAAC,CAAA,CAAQ,CAAC,EAAO,IAAI,CAAC,CAAC,EAAO,IAAI,CAAC,CAAC,KAAK,AAC9D,CAAA,IAAI,CAAC,CAAA,CAAQ,CAAC,EAAO,IAAI,CAAC,CAAC,EAAO,IAAI,CAAC,CAAG,EAC1C,IAAI,CAAC,IAAI,CAAC,eAAgB,CAAC,IAAI,EAAO,IAAI,CAAC,CAAA,CAAO,CAAE,GAAS,EAAU,EAAO,KAAK,CAAC,CACtF,CAAA,CAEJ,EACF,CACA,IAAI,MAAO,CACT,GAAI,AAAe,IAAf,IAAI,CAAC,CAAA,CAAK,CACZ,MAAM,AAAI,MAAM,gFAElB,OAAO,IAAI,EAAO,IAAI,CAAC,CAAA,CAAO,CAAE,IAAI,CAAC,CAAA,CAAQ,CAAC,IAAI,CAAC,CAAA,CAAK,CAAC,CAAC,IAAI,CAAC,CAAA,CAAK,CAAC,CACvE,CACA,IAAI,OAAQ,CACV,OAAO,IAAI,CAAC,CAAA,CAAM,AACpB,CACA,IAAI,OAAQ,CACV,IAAM,EAAU,EAAE,CAClB,IAAK,IAAI,EAAO,EAAE,EAAO,IAAI,CAAC,CAAA,CAAQ,CAAC,MAAM,CAAE,IAAQ,CACrD,CAAO,CAAC,EAAK,CAAG,EAAE,CAClB,IAAK,IAAI,EAAS,EAAE,EAAS,IAAI,CAAC,CAAA,CAAQ,CAAC,EAAK,CAAC,MAAM,CAAE,IACvD,CAAO,CAAC,EAAK,CAAC,IAAI,CAAC,IAAI,EAAO,IAAI,CAAC,CAAA,CAAO,CAAE,IAAI,CAAC,CAAA,CAAQ,CAAC,EAAK,CAAC,EAAO,EAE3E,CACA,OAAO,CACT,CACA,WAAW,CAAI,CAAE,CAAI,CAAE,CAKrB,GAJa,KAAA,IAAT,GACF,CAAA,EAAO,IAAI,CAAC,CAAA,CAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,AAAJ,EAEhB,IAAI,CAAC,CAAA,CAAQ,CAAC,EAAK,CAEpC,OAAO,IAAI,EAAO,IAAI,CAAC,CAAA,CAAO,CAAE,IAAI,CAAC,CAAA,CAAQ,CAAC,EAAK,CAAC,EAAK,CAG7D,CACF,CAGA,MAAM,UAAyB,EAC7B,CAAA,CAAO,AAAC,AACR,EAAA,CAAc,CAAG,CAAE,MAAO,GAAI,MAAO,GAAI,MAAO,EAAG,CAAE,AACrD,EAAA,CAAiB,CAAG,CAAE,MAAO,GAAI,MAAO,GAAI,MAAO,EAAG,CAAE,AACxD,EAAA,CAAM,CAAG,EAAE,AAAC,AACZ,EAAA,CAAK,CAAG,EAAE,AAAC,AACX,EAAA,CAAK,CAAG,EAAG,AACX,EAAA,CAAS,CAAG,CAAA,CAAM,AAClB,EAAA,CAAW,CAAG,CAAE,AAChB,EAAA,CAAS,CAAG,CAAE,AACd,EAAA,CAAoB,CAAG,CAAE,AACzB,EAAA,CAAY,CAAG,CAAE,QAAS,EAAG,QAAS,EAAG,UAAW,CAAE,CAAE,AACxD,EAAA,CAAiB,CAAG,EAAE,AAAC,AACvB,EAAA,CAAiB,CAAG,EAAE,AAAC,AACvB,EAAA,CAAK,CAAG,CAAA,CAAM,AACd,KAAI,eAAgB,CAClB,MAAO,CAAE,GAAG,IAAI,CAAC,CAAA,CAAc,AAAC,CAClC,CACA,IAAI,kBAAmB,CACrB,MAAO,CAAE,GAAG,IAAI,CAAC,CAAA,CAAiB,AAAC,CACrC,CACA,IAAI,OAAQ,CACV,MAAO,IAAI,IAAI,CAAC,CAAA,CAAM,CAAC,AACzB,CACA,IAAI,MAAO,CACT,MAAO,IAAI,IAAI,CAAC,CAAA,CAAK,CAAC,AACxB,CACA,IAAI,UAAW,CACb,OAAO,IAAI,CAAC,CAAA,CAAK,AACnB,CACA,IAAI,UAAW,CACb,OAAO,IAAI,CAAC,CAAA,CAAS,AACvB,CACA,IAAI,aAAc,CAChB,MAAO,CAAE,GAAG,IAAI,CAAC,CAAA,CAAY,AAAC,CAChC,CACA,IAAI,YAAa,CACf,OAAO,IAAI,CAAC,CAAA,CAAW,AACzB,CACA,IAAI,UAAW,QACb,AAAI,IAAI,CAAC,kBAAkB,CAAG,EACrB,KAAK,GAAG,CAAC,EAAG,KAAK,KAAK,CAAC,IAAI,CAAC,kBAAkB,CAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAG,MAE9E,CACT,CACA,IAAI,oBAAqB,CACvB,OAAO,IAAI,CAAC,CAAA,CAAS,AACvB,CACA,IAAI,qBAAsB,CACxB,OAAO,IAAI,CAAC,CAAA,CAAoB,AAClC,CACA,IAAI,kBAAmB,CACrB,MAAO,IAAI,IAAI,CAAC,CAAA,CAAiB,CAAC,CAAC,IAAI,EACzC,CACA,IAAI,kBAAmB,CACrB,MAAO,IAAI,IAAI,CAAC,CAAA,CAAiB,CAAC,CAAC,IAAI,EACzC,CACA,IAAI,cAAe,CACjB,MAAO,IAAI,IAAI,CAAC,CAAA,CAAiB,IAAK,IAAI,CAAC,CAAA,CAAiB,CAAC,CAAC,IAAI,EACpE,CACA,IAAI,MAAO,CACT,OAAO,IAAI,CAAC,CAAA,CAAK,AACnB,CACA,YAAY,CAAM,CAAE,CAClB,KAAK,GACL,IAAI,CAAC,CAAA,CAAO,CAAG,EACf,IAAI,CAAC,CAAA,CAAO,CAAC,MAAM,CAAC,EAAE,CAAC,WAAY,AAAC,IAClC,IAAI,CAAC,CAAA,CAAc,CAAG,CACpB,MAAO,EAAO,OAAO,CAAC,KAAK,CAC3B,MAAO,EAAO,OAAO,CAAC,KAAK,CAC3B,MAAO,EAAO,OAAO,CAAC,KAAK,AAC7B,EACA,IAAI,CAAC,CAAA,CAAiB,CAAG,CACvB,MAAO,EAAO,iBAAiB,CAAC,KAAK,CACrC,MAAO,EAAO,iBAAiB,CAAC,KAAK,CACrC,MAAO,EAAO,iBAAiB,CAAC,KAAK,AACvC,EACA,IAAI,CAAC,CAAA,CAAK,CAAG,EAAO,IAAI,CACxB,IAAI,CAAC,CAAA,CAAM,CAAG,EAAO,KAAK,CAC1B,IAAI,CAAC,CAAA,CAAK,CAAG,EAAO,SAAS,CAC7B,IAAI,CAAC,CAAA,CAAS,CAAG,EAAO,QAAQ,CAChC,IAAI,CAAC,CAAA,CAAY,CAAG,EAAO,WAAW,CACtC,IAAI,CAAC,CAAA,CAAS,CAAG,EAAO,SAAS,CACjC,IAAI,CAAC,CAAA,CAAoB,CAAG,EAAO,qBAAqB,AAC1D,GAAG,EAAE,CAAC,YAAa,AAAC,IAClB,IAAI,CAAC,CAAA,CAAiB,CAAG,EAAO,iBAAiB,CACjD,IAAI,CAAC,CAAA,CAAiB,CAAG,EAAO,iBAAiB,CACjD,IAAI,CAAC,IAAI,CAAC,mBAAoB,CAAC,IAAI,CAAC,gBAAgB,CAAC,EACrD,IAAI,CAAC,CAAA,CAAW,CAAG,EAAO,WAAW,CACrC,IAAI,CAAC,IAAI,CAAC,oBAAqB,CAAC,EAAG,EAAO,WAAW,CAAC,CACxD,GAAG,EAAE,CAAC,aAAc,AAAC,IACnB,GAAI,AAAqB,KAAA,IAArB,EAAO,SAAS,CAAgB,CAClC,GAAM,CAAC,EAAI,EAAG,CAAG,CAAC,IAAI,CAAC,QAAQ,CAAE,IAAI,CAAC,kBAAkB,CAAC,AACzD,CAAA,IAAI,CAAC,CAAA,CAAS,CAAG,EAAO,SAAS,CACjC,IAAI,CAAC,IAAI,CAAC,kBAAmB,CAAC,EAAI,IAAI,CAAC,QAAQ,CAAE,EAAI,IAAI,CAAC,kBAAkB,CAAC,CAC/E,CACA,GAAI,AAAuB,KAAA,IAAvB,EAAO,WAAW,CAAgB,CACpC,IAAM,EAAM,IAAI,CAAC,CAAA,CAAW,AAC5B,CAAA,IAAI,CAAC,CAAA,CAAW,CAAG,EAAO,WAAW,CACrC,IAAI,CAAC,IAAI,CAAC,oBAAqB,CAAC,EAAK,IAAI,CAAC,UAAU,CAAC,CACvD,CACA,GAAI,AAAiC,KAAA,IAAjC,EAAO,qBAAqB,CAAgB,CAC9C,IAAM,EAAM,IAAI,CAAC,CAAA,CAAoB,AACrC,CAAA,IAAI,CAAC,CAAA,CAAoB,CAAG,EAAO,qBAAqB,CACxD,IAAI,CAAC,IAAI,CAAC,6BAA8B,CAAC,EAAK,IAAI,CAAC,mBAAmB,CAAC,CACzE,CAKA,GAJwB,KAAA,IAApB,EAAO,QAAQ,GACjB,IAAI,CAAC,CAAA,CAAS,CAAG,EAAO,QAAQ,CAChC,IAAI,CAAC,IAAI,CAAC,kBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,GAE1C,AAAuB,KAAA,IAAvB,EAAO,WAAW,CAAgB,CACpC,IAAM,EAAM,IAAI,CAAC,CAAA,CAAY,AAC7B,CAAA,IAAI,CAAC,CAAA,CAAY,CAAG,EAAO,WAAW,CACtC,IAAI,CAAC,IAAI,CAAC,qBAAsB,CAAC,EAAK,IAAI,CAAC,WAAW,CAAC,CACzD,CACiC,KAAA,IAA7B,EAAO,iBAAiB,GAC1B,IAAI,CAAC,CAAA,CAAiB,CAAG,IAAI,IAAI,CAAC,CAAA,CAAiB,IAAK,EAAO,iBAAiB,CAAC,CACjF,IAAI,CAAC,CAAA,CAAiB,CAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,AAAC,GAAa,CAAC,EAAO,iBAAiB,EAAE,SAAS,IACxG,IAAI,CAAC,IAAI,CAAC,mBAAoB,CAAC,EAAO,iBAAiB,CAAC,EAE5D,EACF,CACF,CAGA,MAAM,UAAsB,EAC1B,CAAA,CAAO,CAAG,IAAK,AACf,EAAA,CAAU,CAAG,CAAA,CAAM,AACnB,cAAc,CACZ,KAAK,EACP,CACA,IAAI,WAAY,CACd,OAAO,IAAI,CAAC,CAAA,CAAU,AACxB,CACA,IAAI,KAAM,CACR,OAAO,IAAI,CAAC,CAAA,CAAO,EAAE,KAAO,EAC9B,CACA,KAAK,GAAG,CAAQ,CAAE,CAChB,GAAI,IAAI,CAAC,CAAA,CAAO,CAGd,OAFA,IAAI,CAAC,CAAA,CAAO,CAAC,IAAI,CAAC,KAAK,SAAS,CAAC,IACjC,IAAI,CAAC,IAAI,CAAC,cAAe,CAAC,EAAS,EAC5B,IAAI,AAEb,OAAM,IAAI,EAAY,mEACxB,CACA,MAAM,QAAQ,CAAG,CAAE,CAEjB,GADA,IAAI,CAAC,UAAU,GACX,AAAe,UAAf,OAAO,EAAkB,CAE3B,GAAI,CAAC,AADW,uCACH,IAAI,CAAC,GAChB,GAAI,CACF,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,MAAM,EAAE,EAAA,CAAK,EAClD,CAAE,KAAM,CACN,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,KAAK,EAAE,EAAA,CAAK,EACjD,CAEF,EAAM,IAAI,IAAI,EAChB,CAEA,GADA,EAAI,IAAI,CAAG,EAAI,IAAI,EAAI,QACnB,AAAiB,SAAjB,EAAI,QAAQ,EAAe,AAAiB,QAAjB,EAAI,QAAQ,CACzC,MAAM,AAAI,UAAU,kFAEtB,GAAI,CACF,OAAO,IAAI,QAAQ,CAAC,EAAS,KAC3B,IAAM,EAAuB,IAAI,CAAC,CAAA,CAAc,GAChD,GAAI,AAAyB,OAAzB,EACF,MAAM,IAAI,EAAY,kEAExB,CAAA,IAAI,CAAC,CAAA,CAAO,CAAG,IAAI,EAAqB,GACxC,IAAI,CAAC,CAAA,CAAO,CAAC,SAAS,CAAG,IAAI,CAAC,CAAA,CAAa,CAAC,IAAI,CAAC,IAAI,EACrD,IAAI,CAAC,CAAA,CAAO,CAAC,OAAO,CAAG,KACrB,IAAI,CAAC,UAAU,GACf,EAAO,IAAI,EAAY,4CACzB,EACA,IAAI,CAAC,CAAA,CAAO,CAAC,OAAO,CAAG,KACrB,IAAI,CAAC,UAAU,GACf,EAAO,IAAI,EAAY,4CACzB,EACA,IAAI,CAAC,CAAA,CAAO,CAAC,MAAM,CAAG,KACpB,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,CAAC,CAAC,EAAO,IAElC,GADA,IAAI,CAAC,CAAA,CAAU,CAAG,CAAA,EACd,IAAI,CAAC,CAAA,CAAO,CAAE,CAChB,IAAI,CAAC,CAAA,CAAO,CAAC,OAAO,CAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAChD,IAAI,CAAC,CAAA,CAAO,CAAC,OAAO,CAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAChD,EAAQ,GACR,MACF,CACA,IAAI,CAAC,UAAU,GACf,EAAO,IAAI,EAAY,4CACzB,GAAG,KAAK,CAAC,AAAC,IACR,MAAM,CACR,EACF,CACF,EACF,CAAE,MAAO,EAAO,CAEd,MADA,IAAI,CAAC,UAAU,GACT,CACR,CACF,CACA,YAAa,CACN,IAAI,CAAC,SAAS,GAGnB,IAAI,CAAC,CAAA,CAAU,CAAG,CAAA,EAClB,IAAI,CAAC,CAAA,CAAO,EAAE,QACd,IAAI,CAAC,CAAA,CAAO,CAAG,KACf,IAAI,CAAC,IAAI,CAAC,eAAgB,EAAE,EAC9B,CACA,CAAA,CAAa,CAAC,CAAK,EAEjB,IAAK,IAAM,KADM,KAAK,KAAK,CAAC,EAAM,IAAI,EACP,CAC7B,OAAQ,EAAO,GAAG,EAChB,IAAK,oBACH,IAAI,CAAC,IAAI,CAAC,oBAAqB,CAAC,EAAO,EACvC,KACF,KAAK,UACH,IAAI,CAAC,IAAI,CAAC,UAAW,CAAC,EAAQ,EAAO,IAAI,CAAC,EAC1C,KACF,KAAK,YACH,IAAI,CAAC,IAAI,CAAC,YAAa,CAAC,EAAO,EAC/B,KACF,KAAK,cACH,IAAI,CAAC,IAAI,CAAC,cAAe,CAAC,EAAO,EACjC,KACF,KAAK,gBACH,IAAI,CAAC,IAAI,CAAC,gBAAiB,CAAC,EAAO,EACnC,KACF,KAAK,eACH,IAAI,CAAC,IAAI,CAAC,eAAgB,CAAC,EAAO,EAClC,KACF,KAAK,YACH,IAAI,CAAC,IAAI,CAAC,YAAa,CAAC,EAAO,EAC/B,KACF,KAAK,gBACH,IAAI,CAAC,IAAI,CAAC,gBAAiB,CAAC,EAAO,EACnC,KACF,KAAK,YACH,IAAI,CAAC,IAAI,CAAC,YAAa,CAAC,EAAO,EAC/B,KACF,KAAK,WACH,IAAI,CAAC,IAAI,CAAC,WAAY,CAAC,EAAO,EAC9B,KACF,KAAK,aACH,IAAI,CAAC,IAAI,CAAC,aAAc,CAAC,EAAO,EAChC,KACF,KAAK,WACH,IAAI,CAAC,IAAI,CAAC,WAAY,CAAC,EAAO,CAElC,CACA,IAAI,CAAC,IAAI,CAAC,iBAAkB,CAAC,EAAO,CACtC,CACF,CACA,CAAA,CAAc,GACZ,IAAI,EAAuB,KAY3B,MAXI,AAAkB,aAAlB,OAAO,OACT,EAAuB,OAAO,SAAS,EAAI,OAAO,YAAY,CACrD,AAAkB,KAAA,IAAX,EAChB,EAAuB,EAAO,SAAS,EAAI,EAAO,YAAY,CACrD,AAAgB,aAAhB,OAAO,KAChB,EAAuB,KAAK,SAAS,EAAI,KAAK,YAAY,CACjD,AAAqB,aAArB,OAAO,UAChB,EAAuB,UACU,aAAxB,OAAO,cAChB,CAAA,EAAuB,YADlB,EAGA,CACT,CACF,CAGA,MAAM,EACJ,CAAA,CAAc,CAAG,CAAA,CAAM,AACvB,EAAA,CAAU,CAAG,CAAyB,AACtC,EAAA,CAAK,CAAG,EAAG,AACX,EAAA,CAAK,CAAG,EAAG,AACX,CAAA,OAAS,IAAI,CAAc,AAC3B,CAAA,QAAU,IAAI,EAAmB,IAAI,CAAE,AACvC,CAAA,QAAU,IAAI,EAAmB,IAAI,CAAE,AACvC,CAAA,KAAO,IAAI,EAAiB,IAAI,CAAE,AAClC,CAAA,QAAU,IAAI,EAAe,IAAI,CAAE,AACnC,CAAA,MAAQ,IAAI,EAAa,IAAI,CAAE,AAC/B,CAAA,SAAW,IAAI,EAAe,IAAI,CAAE,AACpC,CAAA,UAAY,IAAI,EAAiB,IAAI,CAAE,AACvC,CAAA,OAAQ,AACR,KAAI,eAAgB,CAClB,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,EAAI,IAAI,CAAC,CAAA,CAAc,AACrD,CACA,IAAI,MAAO,CACT,OAAO,IAAI,CAAC,CAAA,CAAK,AACnB,CACA,IAAI,MAAO,CACT,OAAO,IAAI,CAAC,CAAA,CAAK,AACnB,CACA,IAAI,WAAY,CACd,MAAO,CAAE,GAAG,IAAI,CAAC,CAAA,CAAU,AAAC,CAC9B,CACA,YAAY,CAAO,CAAE,CACf,EACF,IAAI,CAAC,OAAO,CAAG,CAAE,GAAG,CAAoB,CAAE,GAAG,CAAO,AAAC,EAErD,IAAI,CAAC,OAAO,CAAG,CAAE,GAAG,CAAoB,AAAC,EAE3C,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,eAAgB,KAC7B,IAAI,CAAC,CAAA,CAAc,CAAG,CAAA,CACxB,GAAG,EAAE,CAAC,cAAe,AAAC,IACpB,IAAK,IAAM,KAAU,EACA,kBAAf,EAAO,GAAG,GACZ,IAAI,CAAC,CAAA,CAAU,CAAC,IAAI,CAAG,EAAO,IAAI,CAClC,IAAI,CAAC,CAAA,CAAU,CAAC,KAAK,CAAG,EAAO,cAAc,CAGnD,EACF,CACA,MAAM,MAAM,CAAG,CAAE,CAAI,CAAE,EAAO,EAAE,CAAE,CAAO,CAAE,CACzC,GAAI,AAAS,KAAT,EACF,MAAM,IAAI,EAAc,sCAAuC,OAAQ,GAErE,EACF,IAAI,CAAC,CAAA,CAAU,CAAG,CAAE,GAAG,CAAwB,CAAE,GAAG,CAAO,AAAC,EAE5D,IAAI,CAAC,CAAA,CAAU,CAAG,CAAE,GAAG,CAAwB,AAAC,EAElD,IAAM,EAAO,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,EACnC,GAAS,EAAK,GAAG,CAAC,aAAgB,EAAK,GAAG,CAAC,YAAe,EAAK,GAAG,CAAC,aACtE,EAAK,GAAG,CAAC,YAEX,IAAI,CAAC,CAAA,CAAU,CAAC,IAAI,CAAG,MAAM,IAAI,CAAC,GAClC,IAAM,EAAU,CACd,IAAK,UACL,KAAA,EACA,KAAA,EACA,SAAU,IAAI,CAAC,SAAS,CAAC,QAAQ,CACjC,UAAW,IAAI,CAAC,SAAS,CAAC,QAAQ,CAClC,eAAgB,IAAI,CAAC,SAAS,CAAC,KAAK,CACpC,KAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CACzB,KAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CACzB,QAAS,CAAE,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAE,MAAO,SAAU,CACzD,EAKA,OAJA,MAAM,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GACtB,IAAI,CAAC,OAAO,CAAC,oBAAoB,EACnC,MAAM,IAAI,CAAC,OAAO,CAAC,YAAY,GAE1B,IAAI,QAAQ,CAAC,EAAS,KAC3B,IAAM,EAAU,WAAW,IAAM,EAAO,IAAI,EAAY,sCAAuC,IAAI,CAAC,OAAO,CAAC,OAAO,EAC7G,EAAmB,AAAC,IACxB,IAAI,CAAC,CAAA,CAAc,CAAG,CAAA,EACtB,IAAI,CAAC,CAAA,CAAK,CAAG,EAAO,SAAS,CAAC,EAAO,IAAI,CAAC,CAAC,IAAI,CAC/C,IAAI,CAAC,CAAA,CAAK,CAAG,EAAO,SAAS,CAAC,EAAO,IAAI,CAAC,CAAC,IAAI,CAC/C,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,YAAa,GAAkB,GAAG,CAAC,oBAAqB,GACxE,aAAa,GACb,EAAQ,EAAO,SAAS,CAC1B,EACM,EAAiB,AAAC,IACtB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,YAAa,GAAkB,GAAG,CAAC,oBAAqB,GACxE,aAAa,GACb,EAAO,IAAI,EAAW,CAAC,kDAAkD,EAAE,EAAO,MAAM,EAAE,KAAK,MAAA,CAAO,CAAE,EAAO,MAAM,EAAI,EAAE,EAC7H,EACA,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,YAAa,EAAiB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,oBAAqB,EAAe,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EACnH,EACF,CACA,aAAa,CAAM,CAAE,CACnB,GAAI,CAAC,IAAI,CAAC,aAAa,CACrB,MAAM,IAAI,EAAqB,+DAEjC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAE,IAAK,eAAgB,OAAA,CAAO,EACjD,CACA,MAAO,CACL,IAAI,CAAC,YAAY,CAAC,EAAe,IAAI,CACvC,CACA,WAAW,CAAI,CAAE,CACf,GAAI,CAAC,IAAI,CAAC,aAAa,CACrB,MAAM,IAAI,EAAqB,6DAEjC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAE,IAAK,gBAAiB,KAAA,EAAM,eAAgB,IAAI,CAAC,SAAS,CAAC,KAAK,AAAC,EACtF,CACA,oBAAoB,CAAK,CAAE,CACzB,GAAI,CAAC,IAAI,CAAC,aAAa,CACrB,MAAM,IAAI,EAAqB,6DAEjC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAE,IAAK,gBAAiB,KAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAE,eAAgB,CAAM,EAC5F,CACA,MAAM,GAAG,CAAS,CAAE,CAClB,GAAI,CAAC,IAAI,CAAC,aAAa,CACrB,MAAM,IAAI,EAAqB,iEAEjC,EAAY,EAAU,MAAM,CAAC,AAAC,GAAa,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAC/E,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAE,IAAK,iBAAkB,UAAA,CAAU,EACtD,CACA,MAAM,MAAM,CAAS,CAAE,EAAa,CAAC,CAAE,CACrC,GAAI,CAAC,IAAI,CAAC,aAAa,CACrB,MAAM,IAAI,EAAqB,iEAEjC,EAAY,EAAU,MAAM,CAAC,AAAC,GAAa,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAC3E,GAAM,CAAC,EAAS,CAAG,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAE,IAAK,iBAAkB,eAAgB,EAAY,UAAA,CAAU,GAAG,IAAI,CAAC,eAAgB,AAAC,GACzH,EAAO,SAAS,CAAC,GAAG,CAAC,AAAC,GAAa,EAAS,QAAQ,EAAE,QAAQ,GAAG,IAAI,CAAC,OAAS,EAAU,QAAQ,GAAG,IAAI,CAAC,MAElH,OAAO,EAAS,SAAS,CAAC,GAAG,CAAC,AAAC,GAAS,IAAI,EAAK,IAAI,CAAE,EAAM,IAAI,CAAC,OAAO,CAAC,IAAI,CAAE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAK,MAAM,GACrH,CACA,OAAO,CAAO,CAAE,CAAI,CAAE,CACpB,GAAI,CAAC,IAAI,CAAC,aAAa,CACrB,MAAM,IAAI,EAAqB,8DAEjC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CACf,IAAK,SACL,KAAA,EACA,MAAO,EAAQ,KAAK,EAAI,EAAE,CAC1B,MAAO,EAAQ,KAAK,EAAI,EAAE,CAC1B,KAAM,EAAQ,IAAI,EAAI,EAAE,AAC1B,EACF,CACF,CD14CA,IAAM,EAAiB,IAAI,CAE3B,CAAA,OAAO,MAAM,CAAG,EAChB,IAAM,EAAgB,SAAS,aAAa,CAAC,uBAIvC,EAAO,YACP,EAAsC,CACxC,aAAgB,CAAC,EAAG,EAAE,CACtB,cAAe,CAAC,EAAG,EAAE,CACrB,KAAQ,CAAC,EAAG,EAAE,CACd,IAAO,CAAC,EAAG,GAAG,CACd,iBAAkB,CAAC,EAAG,EAAE,CACxB,qBAAsB,CAAC,EAAG,EAAE,CAC5B,aAAc,CAAC,EAAG,EAAE,CACpB,aAAc,CAAC,EAAG,EAAE,CACpB,YAAa,CAAC,EAAG,GAAG,CACpB,QAAW,CAAC,EAAG,GAAG,CAClB,oBAAqB,CAAC,GAAI,EAAE,CAC5B,kBAAmB,CAAC,GAAI,EAAE,CAC1B,aAAc,CAAC,GAAI,EAAE,CACrB,kBAAmB,CAAC,GAAI,GAAG,AAC/B,EAEM,EAAuC,CACzC,aAAgB,CAAC,EAAG,EAAE,CACtB,cAAe,CAAC,EAAG,EAAE,CACrB,KAAQ,CAAC,EAAG,EAAE,CACd,IAAO,CAAC,EAAG,EAAE,CACb,iBAAkB,CAAC,EAAG,EAAE,CACxB,qBAAsB,CAAC,EAAG,EAAE,CAC5B,aAAc,CAAC,EAAG,EAAE,CACpB,aAAc,CAAC,EAAG,EAAE,CACpB,YAAa,CAAC,EAAG,EAAE,AACvB,EAGI,EAA8B,EAAE,CAShC,EAAuB,CAAC,EAExB,EAAqB,EAOrB,EAAmB,CAAC,EAEpB,EAA4B,EAEhC,SAAS,EAAc,CAAe,EAClC,IAAI,EAAgB,GAEpB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAQ,MAAM,CAAE,IAChC,CAAI,CAAC,EAAM,CAAG,CAAO,CAAC,EAAE,CAAC,UAAU,CAAC,GACpC,GAER,CAGA,EAAO,QAAQ,CAAC,EAAE,CAAC,YAAa,MAAO,EAAc,EAAgB,EAAgB,KACjF,QAAQ,GAAG,CAAC,wBAAyB,GACrC,EAAa,EAAO,IAAI,CAExB,OAAO,OAAO,CAD6B,EAAO,OAAO,CAAC,KAAK,EACzC,OAAO,CAAC,CAAC,CAAC,EAAK,EAA4B,IAC7D,IAAM,EAAqB,SAAS,GAC9B,EAAqB,EAAO,OAAO,CAAC,UAAU,CAAC,EACrD,CAAA,CAAO,CAAC,EAAW,CAAG,CAClB,KAAM,EACN,KAAM,EAAK,IAAI,CACf,KAAM,EAAK,IAAI,CACf,MAAO,EAAW,KAAK,AAC3B,CACJ,GAKA,IAAI,EAAsB,CACA,CAAA,IAAtB,AAHJ,CAAA,EAAU,MAAM,EAAO,aAAa,GAAG,IAAI,CAAC,AAAA,GAAO,EAAnD,EAGY,SAAS,GACjB,GAAe,EACf,EAAO,MAAM,CAAC,IAAI,CAAC,CACf,IAAK,gBACL,eAAgB,AAAA,EAAmB,GAAG,CACtC,KAAM,CAAC,YAAY,AACvB,GACA,EAAoB,EAAQ,iBAAiB,EAE7C,EAAQ,SAAS,EACjB,CAAA,GAAe,CAAA,EAEf,EAAQ,eAAe,EACvB,CAAA,GAAe,CAAA,EAEf,EAAQ,WAAW,EACnB,CAAA,GAAe,EADnB,EAGA,CAAI,CAAC,GAAG,CAAG,EAEX,EAAO,MAAM,CAAC,IAAI,CAAC,CAAE,IAAK,MAAO,EACrC,GAGA,EAAO,KAAK,CAAC,EAAE,CAAC,gBAAiB,MAAM,EAAe,KAGlD,GAFA,QAAQ,GAAG,CAAC,mBAAoB,GAE5B,AAAkB,IAAlB,EACA,IAAK,IAAI,EAAY,GAAI,EAAI,GAAI,IAC7B,CAAI,CAAC,EAAE,CAAG,EAQlB,IAAK,IAAI,EAAY,EAAG,EAAI,EAAM,MAAM,CAAE,IAAK,CAC3C,IAAI,EAAa,CAAK,CAAC,EAAE,CASzB,IAAK,IAAM,KARI,aAAX,EAAK,EAAE,GACH,EAAK,MAAM,CAAC,IAAI,EAAI,EACpB,EAAc,8BAEd,EAAc,CAAC,2BAA2B,EAAE,AAAsB,KAAtB,EAAK,MAAM,CAAC,KAAK,CAAU,EAAK,MAAM,CAAC,KAAK,CAAG,EAAK,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,WAAW,KAIjH,EACf,GAAI,AArGQ,YAqGE,CAAU,CAAC,EAAK,CAAC,EAAE,GAAK,EAAK,EAAE,CAAE,CAC3C,IAAM,EAAO,KAAK,KAAK,CAAC,CAAU,CAAC,EAAK,CAAC,EAAE,CAAG,GAAK,GAC7C,EAAW,GAAM,CAAA,CAAU,CAAC,EAAK,CAAC,EAAE,CAAG,CAAA,CACzC,CAAA,CAAI,CAAC,EAAK,CAAG,EACb,QAAQ,GAAG,CAAC,CAAA,EAAG,EAAK,0BAA0B,CAAC,GAE/C,CAAI,CAAC,EAAK,EAAI,EACV,EAAK,MAAM,CAAC,IAAI,GAAK,EACrB,EAAc,CAAC,MAAM,EAAE,EAAA,CAAM,CAAC,WAAW,IAEzC,EAAc,CAAC,IAAI,EAAE,EAAK,MAAM,EAAE,AAAsB,KAAtB,EAAK,MAAM,CAAC,KAAK,CAAU,EAAK,MAAM,CAAC,KAAK,CAAG,EAAK,MAAM,CAAC,IAAI,CAAA,CAAE,CAAC,WAAW,IAG3H,CAER,CACJ,GAEA,EAAO,MAAM,CAAC,EAAE,CAAC,UAAW,CAAC,EAAuB,KAEhD,GADA,QAAQ,GAAG,CAAC,WAAY,GACpB,EAAO,IAAI,CAAC,QAAQ,CAAC,cAAgB,AAAsB,IAAtB,EAAQ,SAAS,EAItD,GAHA,CAAI,CAAC,GAAG,CAAG,AAAW,EAAX,CAAI,CAAC,GAAG,CACnB,GAAqB,EAEjB,EAAO,IAAI,CAAC,MAAM,EAAI,EAAO,IAAI,CAAC,MAAM,GAAK,EAAY,CACzD,IAAM,EAAS,EAAO,IAAI,CAAC,MAAM,CAC3B,EAAS,OAAO,MAAM,CAAC,GACxB,MAAM,CAAC,AAAA,GAAK,EAAE,IAAI,EAAI,EAAO,CAAC,EAAE,CACrC,EAAc,CAAC,eAAe,EAAE,AAAiB,KAAjB,EAAO,KAAK,CAAU,EAAO,KAAK,CAAG,EAAO,IAAI,CAAA,CAAE,CAAC,WAAW,GAClG,MACI,EAAc,eAG1B,GAGA,EAAO,MAAM,CAAC,EAAE,CAAC,eAAgB,AAAC,IAC9B,QAAQ,GAAG,CAAC,kBAAmB,GAC/B,EAAO,SAAS,CAAC,OAAO,CAAC,AAAA,IACrB,GAAI,EAAS,MAAM,GAAK,EAAY,CAChC,IAAM,EAAW,IAAI,EACjB,EAAQ,EAAU,EAAO,OAAO,CAAC,IAAI,CAAE,EAAO,OAAO,CAAC,UAAU,CAAC,EAAS,MAAM,GAClF,IAAI,CACN,EAAc,CAAC,KAAK,EAAE,EAAS,IAAI,EAAE,CAAO,CAAC,EAAS,MAAM,CAAC,CAAC,KAAK,CAAG,CAAO,CAAC,EAAS,MAAM,CAAC,CAAC,KAAK,CAAG,CAAO,CAAC,EAAS,MAAM,CAAC,CAAC,IAAI,CAAA,CAAE,CAAC,WAAW,GACtJ,CACJ,EACJ,GAGA,EAAK,gBAAgB,CAAC,SAAU,MAAO,IACnC,EAAM,cAAc,GACpB,IAAM,EAAW,SAAS,aAAa,CAAmB,aAAa,KAAK,CACtE,EAAO,SAAS,aAAa,CAAmB,SAAS,KAAK,CAC9D,EAAW,SAAS,aAAa,CAAmB,aAAa,KAAK,CACtE,EAAO,SAAS,aAAa,CAAmB,cAAc,KAAK,CAEzE,QAAQ,GAAG,CAAC,GACZ,QAAQ,GAAG,CAAC,GACZ,QAAQ,GAAG,CAAC,GAEZ,IAAM,EAAgB,SAAS,aAAa,CAAC,mBACvC,EAAY,SAAS,aAAa,CAAC,qBACnC,EAAS,SAAS,aAAa,CAAC,kBAChC,EAAa,SAAS,aAAa,CAAC,sBAE1C,EAAc,SAAS,CAAC,MAAM,CAAC,UAC/B,EAAU,SAAS,CAAC,GAAG,CAAC,UACxB,EAAO,SAAS,CAAC,GAAG,CAAC,UACrB,EAAW,SAAS,CAAC,MAAM,CAAC,UAE5B,MAAM,EAAO,KAAK,CACd,EAAS,UAAU,CAAC,MAChB,CAAA,EAAG,EAAS,CAAC,EAAE,EAAA,CAAM,CACrB,CAAC,MAAM,EAAE,EAAS,CAAC,EAAE,EAAA,CAAM,CAC/B,EAAM,iBAAkB,CACpB,SAAA,EACA,MAAO,AAAA,EAAmB,GAAG,CAC7B,QAAS,CACL,MAAO,EACP,MAAO,EACP,MAAO,CACX,CACJ,GACF,IAAI,CAAC,KACH,QAAQ,GAAG,CAAC,2BACZ,EAAW,SAAS,CAAC,GAAG,CAAC,UACzB,EAAU,SAAS,CAAC,MAAM,CAAC,UAE3B,IAAM,EAAS,SAAS,aAAa,CAAC,sBAChC,EAAY,SAAS,aAAa,CAAC,eACzC,EAAO,gBAAgB,CAAC,QAAS,KAC7B,EAAU,SAAS,CAAC,MAAM,CAAC,SAAU,CAAC,EAAU,SAAS,CAAC,QAAQ,CAAC,UACvE,GACA,EAAU,SAAS,CAAC,GAAG,CAAC,UACxB,EAAO,SAAS,CAAC,MAAM,CAAC,SAC5B,GAAG,KAAK,CAAC,AAAA,IACL,QAAQ,KAAK,CAAC,qBAAsB,GACpC,EAAW,SAAS,CAAC,GAAG,CAAC,UACzB,EAAO,SAAS,CAAC,MAAM,CAAC,SAC5B,EACJ,GAKA,EAAK,SAAS,CAAC,eAAgB,CAAU,EACrC,GAAI,AAAsB,IAAtB,EAAQ,SAAS,EAAU,AAAC,CAAA,AAAW,EAAX,CAAI,CAAC,GAAG,AAAG,GAAO,EAAG,CACjD,QAAQ,GAAG,CAAC,SACZ,CAAI,CAAC,GAAG,CAAG,CAAI,CAAC,GAAG,CAAG,EACtB,GAAqB,EACrB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAG,IACnB,QAAQ,GAAG,CAAC,QAEU,CAAA,IAAtB,IACA,EAAoB,EAAQ,iBAAiB,CAC7C,EAAO,MAAM,CAAC,IAAI,CAAC,CAAE,IAAK,SAAU,KAAM,CAAC,YAAY,CAAE,KAAM,CAAC,OAAU,CAAU,CAAC,GACjF,EAAQ,iBAAiB,CAAG,GAC5B,EAAc,kBAG1B,CACA,IAAK,IAAI,KAAO,EACP,CAAA,CAAI,CAAC,KAAK,KAAK,CAAC,CAAS,CAAC,EAAI,CAAC,EAAE,CAAG,GAAG,CAAG,GAAM,CAAA,CAAS,CAAC,EAAI,CAAC,EAAE,CAAG,CAAA,CAAA,GAAQ,IACzE,AAAQ,YAAR,EACA,EAAO,IAAI,IAEX,QAAQ,GAAG,CAAC,CAAC,sBAAsB,EAAE,AAnO7B,YAmOuC,CAAS,CAAC,EAAI,CAAC,EAAE,CAAA,CAAE,EAClE,EAAO,KAAK,CAAC,AApOL,YAoOe,CAAS,CAAC,EAAI,CAAC,EAAE,EACnC,EAAkB,QAAQ,CAAC,AArOxB,YAqOkC,CAAS,CAAC,EAAI,CAAC,EAAE,GACvD,MAAM,EAAO,KAAK,CAAC,CAAC,AAtOhB,YAsO0B,CAAS,CAAC,EAAI,CAAC,EAAE,CAAC,CAAE,GAEtD,EAAkB,IAAI,CAAC,AAxOf,YAwOyB,CAAS,CAAC,EAAI,CAAC,EAAE,GAIlE,E,C","sources":["<anon>","client.ts","node_modules/archipelago.js/dist/index.js"],"sourcesContent":["(() => {\n\n      var $parcel$global = globalThis;\n    var $485214a05f39272f$var$__defProp = Object.defineProperty;\nvar $485214a05f39272f$var$__export = (target, all)=>{\n    for(var name in all)$485214a05f39272f$var$__defProp(target, name, {\n        get: all[name],\n        enumerable: true,\n        configurable: true,\n        set: (newValue)=>all[name] = ()=>newValue\n    });\n};\n// src/api/index.ts\nvar $485214a05f39272f$export$2c4e825dc9120f87 = {};\n$485214a05f39272f$var$__export($485214a05f39272f$export$2c4e825dc9120f87, {\n    slotTypes: ()=>$485214a05f39272f$export$f1b7dd9a86d77942,\n    permissions: ()=>$485214a05f39272f$export$430c45605c9594b5,\n    itemsHandlingFlags: ()=>$485214a05f39272f$export$a726a48d5c185bc2,\n    itemClassifications: ()=>$485214a05f39272f$export$91ef0454ae4e0e41,\n    clientStatuses: ()=>$485214a05f39272f$export$9e353c7f2c9c21cf\n});\n// src/api/constants.ts\nvar $485214a05f39272f$export$9e353c7f2c9c21cf = {\n    disconnected: 0,\n    connected: 5,\n    ready: 10,\n    playing: 20,\n    goal: 30\n};\nvar $485214a05f39272f$export$91ef0454ae4e0e41 = {\n    progression: 1,\n    useful: 2,\n    trap: 4,\n    none: 0\n};\nvar $485214a05f39272f$export$a726a48d5c185bc2 = {\n    minimal: 0,\n    others: 1,\n    own: 2,\n    starting: 4,\n    all: 7\n};\nvar $485214a05f39272f$export$430c45605c9594b5 = {\n    disabled: 0,\n    enabled: 1,\n    goal: 2,\n    auto: 6,\n    autoEnabled: 7\n};\nvar $485214a05f39272f$export$f1b7dd9a86d77942 = {\n    spectator: 0,\n    player: 1,\n    group: 2\n};\n// src/errors.ts\nclass $485214a05f39272f$export$501b6aacf912d8b4 extends Error {\n}\nclass $485214a05f39272f$export$46daa3843b07109f extends Error {\n    argumentName;\n    value;\n    constructor(message, argumentName, value){\n        super(message);\n        this.argumentName = argumentName;\n        this.value = structuredClone(value);\n    }\n}\nclass $485214a05f39272f$export$5e64a9683d127ef6 extends Error {\n    errors = [];\n    constructor(message, errors){\n        super(message);\n        this.errors = errors;\n    }\n}\nclass $485214a05f39272f$export$c7e58b539e03d4b2 extends Error {\n}\n// src/interfaces/ClientOptions.ts\nvar $485214a05f39272f$export$2829036b0afabc33 = {\n    timeout: 1e4,\n    autoFetchDataPackage: true,\n    maximumMessages: 1000,\n    debugLogVersions: true\n};\n// src/constants.ts\nvar $485214a05f39272f$export$f1cf635aadda9a1d = {\n    major: 0,\n    minor: 5,\n    build: 1\n};\nvar $485214a05f39272f$export$4753667161c2624e = \"2.0.3\";\n// src/utils.ts\nfunction $485214a05f39272f$var$uuid() {\n    const uuid2 = [];\n    for(let i = 0; i < 36; i++)uuid2.push(Math.floor(Math.random() * 16));\n    uuid2[14] = 4;\n    uuid2[19] = uuid2[19] &= -5;\n    uuid2[19] = uuid2[19] |= 8;\n    uuid2[8] = uuid2[13] = uuid2[18] = uuid2[23] = \"-\";\n    return uuid2.map((d)=>d.toString(16)).join(\"\");\n}\n// src/interfaces/ConnectionOptions.ts\nvar $485214a05f39272f$export$a86d4a91d90ac80a = {\n    password: \"\",\n    uuid: $485214a05f39272f$var$uuid(),\n    tags: [],\n    version: $485214a05f39272f$export$f1cf635aadda9a1d,\n    items: $485214a05f39272f$export$a726a48d5c185bc2.all,\n    slotData: true\n};\n// src/classes/Item.ts\nclass $485214a05f39272f$export$6d08773d2e66f8f2 {\n    #client;\n    #item;\n    #sender;\n    #receiver;\n    constructor(client, item, sender, receiver){\n        this.#client = client;\n        this.#item = item;\n        this.#sender = sender;\n        this.#receiver = receiver;\n    }\n    toString() {\n        return this.name;\n    }\n    get receiver() {\n        return this.#receiver;\n    }\n    get sender() {\n        return this.#sender;\n    }\n    get name() {\n        return this.#client.package.lookupItemName(this.game, this.#item.item, true);\n    }\n    get id() {\n        return this.#item.item;\n    }\n    get locationName() {\n        return this.#client.package.lookupLocationName(this.sender.game, this.#item.location, true);\n    }\n    get locationId() {\n        return this.#item.location;\n    }\n    get locationGame() {\n        return this.sender.game;\n    }\n    get game() {\n        return this.receiver.game;\n    }\n    get progression() {\n        return (this.flags & $485214a05f39272f$export$91ef0454ae4e0e41.progression) === $485214a05f39272f$export$91ef0454ae4e0e41.progression;\n    }\n    get useful() {\n        return (this.flags & $485214a05f39272f$export$91ef0454ae4e0e41.useful) === $485214a05f39272f$export$91ef0454ae4e0e41.useful;\n    }\n    get trap() {\n        return (this.flags & $485214a05f39272f$export$91ef0454ae4e0e41.trap) === $485214a05f39272f$export$91ef0454ae4e0e41.trap;\n    }\n    get filler() {\n        return this.flags === $485214a05f39272f$export$91ef0454ae4e0e41.none;\n    }\n    get flags() {\n        return this.#item.flags;\n    }\n}\n// src/classes/PackageMetadata.ts\nclass $485214a05f39272f$export$7048d7ffb55b2728 {\n    game;\n    checksum;\n    itemTable;\n    locationTable;\n    reverseItemTable;\n    reverseLocationTable;\n    constructor(game, _package){\n        this.game = game;\n        this.checksum = _package.checksum;\n        this.itemTable = Object.freeze(_package.item_name_to_id);\n        this.locationTable = Object.freeze(_package.location_name_to_id);\n        this.reverseItemTable = Object.freeze(Object.fromEntries(Object.entries(this.itemTable).map(([k, v])=>[\n                v,\n                k\n            ])));\n        this.reverseLocationTable = Object.freeze(Object.fromEntries(Object.entries(this.locationTable).map(([k, v])=>[\n                v,\n                k\n            ])));\n    }\n    exportPackage() {\n        return {\n            checksum: this.checksum,\n            item_name_to_id: {\n                ...this.itemTable\n            },\n            location_name_to_id: {\n                ...this.locationTable\n            }\n        };\n    }\n}\n// src/classes/managers/DataPackageManager.ts\nclass $485214a05f39272f$export$ff8e86dda688a0db {\n    #client;\n    #packages = new Map;\n    #checksums = new Map;\n    #games = new Set;\n    constructor(client){\n        this.#client = client;\n        this.#client.socket.on(\"roomInfo\", (packet)=>{\n            this.#packages.clear();\n            this.#checksums.clear();\n            this.#games.clear();\n            this.#packages.set(\"Archipelago\", this.#preloadArchipelago());\n            for(const game in packet.datapackage_checksums){\n                this.#checksums.set(game, packet.datapackage_checksums[game]);\n                this.#games.add(game);\n            }\n        });\n    }\n    findPackage(game) {\n        return this.#packages.get(game) ?? null;\n    }\n    async fetchPackage(games = [], update = true) {\n        if (games.length === 0) games = Array.from(this.#games);\n        games = games.filter((game)=>{\n            if (!this.#games.has(game)) return false;\n            if (this.#packages.get(game)?.checksum !== this.#checksums.get(game)) return true;\n            return false;\n        });\n        const data = {\n            games: {}\n        };\n        for (const game of games){\n            const request = {\n                cmd: \"GetDataPackage\",\n                games: [\n                    game\n                ]\n            };\n            const [response] = await this.#client.socket.send(request).wait(\"dataPackage\");\n            data.games[game] = response.data.games[game];\n        }\n        if (update) this.importPackage(data);\n        return data;\n    }\n    importPackage(dataPackage) {\n        for(const game in dataPackage.games){\n            this.#packages.set(game, new $485214a05f39272f$export$7048d7ffb55b2728(game, dataPackage.games[game]));\n            this.#checksums.set(game, dataPackage.games[game].checksum);\n        }\n    }\n    exportPackage() {\n        return {\n            games: this.#packages.entries().reduce((games, [game, pkg])=>{\n                games[game] = pkg.exportPackage();\n                return games;\n            }, {})\n        };\n    }\n    lookupItemName(game, id, fallback = true) {\n        const fallbackName = `Unknown Item ${id}`;\n        const gamePackage = this.findPackage(game);\n        if (!gamePackage) return fallback ? fallbackName : undefined;\n        const name = gamePackage.reverseItemTable[id];\n        if (fallback && name === undefined) return fallbackName;\n        return name;\n    }\n    lookupLocationName(game, id, fallback = true) {\n        const fallbackName = `Unknown Location ${id}`;\n        const gamePackage = this.findPackage(game);\n        if (!gamePackage) return fallback ? fallbackName : undefined;\n        const name = gamePackage.reverseLocationTable[id];\n        if (fallback && name === undefined) return fallbackName;\n        return name;\n    }\n    #preloadArchipelago() {\n        return new $485214a05f39272f$export$7048d7ffb55b2728(\"Archipelago\", {\n            checksum: \"ac9141e9ad0318df2fa27da5f20c50a842afeecb\",\n            item_name_to_id: {\n                Nothing: -1\n            },\n            location_name_to_id: {\n                \"Cheat Console\": -1,\n                Server: -2\n            }\n        });\n    }\n}\n// src/classes/IntermediateDataOperation.ts\nclass $485214a05f39272f$export$38053fa6a29fe3b9 {\n    #client;\n    #operations = [];\n    #key;\n    #default;\n    constructor(client, key, _default){\n        this.#client = client;\n        this.#key = key;\n        this.#default = _default;\n    }\n    replace(value) {\n        this.#operations.push({\n            operation: \"replace\",\n            value: value\n        });\n        return this;\n    }\n    default() {\n        this.#operations.push({\n            operation: \"default\",\n            value: null\n        });\n        return this;\n    }\n    add(value) {\n        this.#operations.push({\n            operation: \"add\",\n            value: value\n        });\n        return this;\n    }\n    multiply(value) {\n        this.#operations.push({\n            operation: \"mul\",\n            value: value\n        });\n        return this;\n    }\n    power(value) {\n        this.#operations.push({\n            operation: \"pow\",\n            value: value\n        });\n        return this;\n    }\n    remainder(value) {\n        this.#operations.push({\n            operation: \"mod\",\n            value: value\n        });\n        return this;\n    }\n    floor() {\n        this.#operations.push({\n            operation: \"floor\",\n            value: null\n        });\n        return this;\n    }\n    ceiling() {\n        this.#operations.push({\n            operation: \"ceil\",\n            value: null\n        });\n        return this;\n    }\n    max(value) {\n        this.#operations.push({\n            operation: \"max\",\n            value: value\n        });\n        return this;\n    }\n    min(value) {\n        this.#operations.push({\n            operation: \"min\",\n            value: value\n        });\n        return this;\n    }\n    and(value) {\n        this.#operations.push({\n            operation: \"and\",\n            value: value\n        });\n        return this;\n    }\n    or(value) {\n        this.#operations.push({\n            operation: \"or\",\n            value: value\n        });\n        return this;\n    }\n    xor(value) {\n        this.#operations.push({\n            operation: \"xor\",\n            value: value\n        });\n        return this;\n    }\n    leftShift(value) {\n        this.#operations.push({\n            operation: \"left_shift\",\n            value: value\n        });\n        return this;\n    }\n    rightShift(value) {\n        this.#operations.push({\n            operation: \"right_shift\",\n            value: value\n        });\n        return this;\n    }\n    remove(value) {\n        this.#operations.push({\n            operation: \"remove\",\n            value: value\n        });\n        return this;\n    }\n    pop(value) {\n        this.#operations.push({\n            operation: \"pop\",\n            value: value\n        });\n        return this;\n    }\n    update(value) {\n        this.#operations.push({\n            operation: \"update\",\n            value: value\n        });\n        return this;\n    }\n    async commit(awaitReply = false) {\n        const _uuid = $485214a05f39272f$var$uuid();\n        const request = {\n            cmd: \"Set\",\n            default: this.#default,\n            key: this.#key,\n            operations: this.#operations,\n            want_reply: awaitReply,\n            uuid: _uuid\n        };\n        this.#client.socket.send(request);\n        if (!awaitReply) return;\n        const [response] = await this.#client.socket.wait(\"setReply\", (packet)=>packet.uuid === _uuid);\n        return response.value;\n    }\n}\n// src/classes/managers/DataStorageManager.ts\nclass $485214a05f39272f$export$c816588507b7fc70 {\n    #client;\n    #storage = {};\n    #subscribers = {};\n    constructor(client){\n        this.#client = client;\n        this.#client.socket.on(\"disconnected\", ()=>{\n            this.#storage = {};\n            this.#subscribers = {};\n        }).on(\"setReply\", (packet)=>{\n            this.#storage[packet.key] = packet.value;\n            const callbacks = this.#subscribers[packet.key];\n            if (callbacks) callbacks.forEach((callback)=>callback(packet.key, packet.value, packet.original_value));\n        }).on(\"connected\", ()=>{\n            if (this.#client.options.debugLogVersions) {\n                const key = `${this.#client.game}:${$485214a05f39272f$export$4753667161c2624e}:${navigator?.userAgent}`;\n                this.prepare(\"archipelago.js__runtimes\", {}).default().update({\n                    [key]: true\n                }).commit(false);\n            }\n        });\n    }\n    get store() {\n        return structuredClone(this.#storage);\n    }\n    async fetch(input, monitor = false) {\n        let keys = typeof input === \"string\" ? [\n            input\n        ] : input;\n        if (monitor) {\n            const monitorKeys = keys.filter((key)=>this.#storage[key] === undefined);\n            if (monitorKeys.length > 0) this.#client.socket.send({\n                cmd: \"SetNotify\",\n                keys: monitorKeys\n            });\n        }\n        let data = {};\n        keys = keys.filter((key)=>{\n            const value = structuredClone(this.#storage[key]);\n            const exists = value !== undefined;\n            if (exists) data[key] = value;\n            return !exists;\n        });\n        if (keys.length > 0) {\n            const response = await this.#get(keys);\n            data = {\n                ...data,\n                ...response\n            };\n        }\n        if (monitor) this.#storage = {\n            ...this.#storage,\n            ...data\n        };\n        return typeof input === \"string\" ? data[input] : data;\n    }\n    async notify(keys, callback) {\n        keys.forEach((key)=>{\n            this.#subscribers[key] ??= [];\n            this.#subscribers[key].push(callback);\n        });\n        return this.fetch(keys, true);\n    }\n    prepare(key, _default) {\n        if (key.startsWith(\"_read_\")) throw TypeError(\"Cannot manipulate read only keys.\");\n        return new $485214a05f39272f$export$38053fa6a29fe3b9(this.#client, key, _default);\n    }\n    async fetchItemNameGroups(game) {\n        return await this.fetch([\n            `_read_item_name_groups_${game}`\n        ], true);\n    }\n    async fetchLocationNameGroups(game) {\n        return await this.fetch([\n            `_read_location_name_groups_${game}`\n        ], true);\n    }\n    async #get(keys) {\n        const _uuid = $485214a05f39272f$var$uuid();\n        const [response] = await this.#client.socket.send({\n            cmd: \"Get\",\n            keys: keys,\n            uuid: _uuid\n        }).wait(\"retrieved\", (packet)=>packet.uuid === _uuid);\n        return response.keys;\n    }\n}\n// src/classes/ArchipelagoEventEmitter.ts\nclass $485214a05f39272f$var$ArchipelagoEventEmitter {\n    #events = {};\n    addEventListener(event, callback, once = false) {\n        this.#events[event] ??= [];\n        this.#events[event].push([\n            callback,\n            once\n        ]);\n    }\n    removeEventListener(event, callback) {\n        const callbacks = this.#events[event];\n        if (callbacks && callbacks.length > 0) this.#events[event] = callbacks.filter(([cb])=>cb !== callback);\n    }\n    dispatchEvent(event, data) {\n        const callbacks = this.#events[event] ?? [];\n        for (const [callback, once] of callbacks){\n            callback(...data);\n            if (once) this.removeEventListener(event, callback);\n        }\n    }\n}\n// src/classes/managers/EventBasedManager.ts\nclass $485214a05f39272f$export$34388b49bc564ad4 {\n    #events = new $485214a05f39272f$var$ArchipelagoEventEmitter;\n    on(event, listener) {\n        this.#events.addEventListener(event, listener);\n        return this;\n    }\n    off(event, listener) {\n        this.#events.removeEventListener(event, listener);\n        return this;\n    }\n    async wait(event, clearPredicate = ()=>true) {\n        return new Promise((resolve)=>{\n            const listener = (...args)=>{\n                if (clearPredicate(...args)) {\n                    this.#events.removeEventListener(event, listener);\n                    resolve(args);\n                }\n            };\n            this.#events.addEventListener(event, listener);\n        });\n    }\n    emit(event, detail) {\n        this.#events.dispatchEvent(event, detail);\n    }\n}\n// src/classes/managers/DeathLinkManager.ts\nclass $485214a05f39272f$export$3f6f20ee00545853 extends $485214a05f39272f$export$34388b49bc564ad4 {\n    #client;\n    #lastDeath = Number.MIN_SAFE_INTEGER;\n    constructor(client){\n        super();\n        this.#client = client;\n        this.#client.socket.on(\"bounced\", (packet)=>{\n            if (packet.tags?.includes(\"DeathLink\") && packet.data.time && packet.data.source) {\n                const deathLink = packet.data;\n                if (deathLink.time === this.#lastDeath) return;\n                this.#lastDeath = deathLink.time;\n                this.emit(\"deathReceived\", [\n                    deathLink.source,\n                    deathLink.time * 1000,\n                    deathLink.cause\n                ]);\n            }\n        });\n    }\n    get enabled() {\n        return this.#client.arguments.tags.includes(\"DeathLink\");\n    }\n    enableDeathLink() {\n        if (this.#client.arguments.tags.includes(\"DeathLink\")) return;\n        this.#client.updateTags([\n            ...this.#client.arguments.tags,\n            \"DeathLink\"\n        ]);\n    }\n    disableDeathLink() {\n        if (!this.#client.arguments.tags.includes(\"DeathLink\")) return;\n        this.#client.updateTags(this.#client.arguments.tags.filter((tag)=>tag !== \"DeathLink\"));\n    }\n    sendDeathLink(source, cause) {\n        if (!this.#client.authenticated) throw new $485214a05f39272f$export$c7e58b539e03d4b2(\"Cannot send death links before connecting and authenticating.\");\n        if (!this.enabled) return;\n        this.#lastDeath = Math.ceil(Date.now() / 1000);\n        const deathLink = {\n            source: source,\n            cause: cause,\n            time: this.#lastDeath\n        };\n        this.#client.bounce({\n            tags: [\n                \"DeathLink\"\n            ]\n        }, deathLink);\n    }\n}\n// src/classes/Hint.ts\nclass $485214a05f39272f$export$8d13340382210b65 {\n    #client;\n    #hint;\n    #item;\n    constructor(client, hint){\n        this.#client = client;\n        this.#hint = hint;\n        this.#item = new $485214a05f39272f$export$6d08773d2e66f8f2(this.#client, {\n            item: hint.item,\n            location: hint.location,\n            player: hint.finding_player,\n            flags: hint.item_flags\n        }, this.#client.players.findPlayer(hint.finding_player), this.#client.players.findPlayer(hint.receiving_player));\n    }\n    get item() {\n        return this.#item;\n    }\n    get found() {\n        return this.#hint.found;\n    }\n    get entrance() {\n        return this.#hint.entrance || \"Vanilla\";\n    }\n}\n// src/classes/managers/ItemsManager.ts\nclass $485214a05f39272f$export$d686f2307acf8ad5 extends $485214a05f39272f$export$34388b49bc564ad4 {\n    #client;\n    #received = [];\n    #hints = [];\n    constructor(client){\n        super();\n        this.#client = client;\n        this.#client.socket.on(\"receivedItems\", (packet)=>{\n            let index = packet.index;\n            const count = packet.items.length;\n            const items = [\n                ...packet.items\n            ];\n            while(items.length > 0){\n                const networkItem = items.shift();\n                this.#received[index++] = new $485214a05f39272f$export$6d08773d2e66f8f2(this.#client, networkItem, this.#client.players.findPlayer(networkItem.player), this.#client.players.self);\n            }\n            this.emit(\"itemsReceived\", [\n                this.#received.slice(packet.index, packet.index + count),\n                packet.index\n            ]);\n        }).on(\"connected\", ()=>{\n            this.#hints = [];\n            this.#received = [];\n            this.#client.storage.notify([\n                `_read_hints_${this.#client.players.self.team}_${this.#client.players.self.slot}`\n            ], this.#receivedHint.bind(this)).then((data)=>{\n                const hints = data[`_read_hints_${this.#client.players.self.team}_${this.#client.players.self.slot}`];\n                this.#hints = hints.map((hint)=>new $485214a05f39272f$export$8d13340382210b65(this.#client, hint));\n                this.emit(\"hintsInitialized\", [\n                    this.#hints\n                ]);\n            }).catch((error)=>{\n                throw error;\n            });\n        });\n    }\n    get received() {\n        return [\n            ...this.#received\n        ];\n    }\n    get hints() {\n        return [\n            ...this.#hints\n        ];\n    }\n    get count() {\n        return this.#received.length;\n    }\n    #receivedHint(_, hints) {\n        for(let i = 0; i < hints.length; i++){\n            if (this.#hints[i] === undefined) {\n                this.#hints[i] = new $485214a05f39272f$export$8d13340382210b65(this.#client, hints[i]);\n                this.emit(\"hintReceived\", [\n                    this.#hints[i]\n                ]);\n            } else if (this.#hints[i].found !== hints[i].found) {\n                this.#hints[i] = new $485214a05f39272f$export$8d13340382210b65(this.#client, hints[i]);\n                this.emit(\"hintFound\", [\n                    this.#hints[i]\n                ]);\n            }\n        }\n    }\n}\n// src/classes/MessageNode.ts\nclass $485214a05f39272f$export$eacd9558ec8eca0 {\n    client;\n    part;\n    constructor(client, part){\n        this.client = client;\n        this.part = part;\n    }\n    toString() {\n        return this.text;\n    }\n}\nclass $485214a05f39272f$export$65034a9c3736e136 extends $485214a05f39272f$export$eacd9558ec8eca0 {\n    part;\n    type = \"item\";\n    item;\n    constructor(client, part, item, receiver){\n        super(client, part);\n        const player = client.players.findPlayer(part.player, receiver.team);\n        this.part = part;\n        this.item = new $485214a05f39272f$export$6d08773d2e66f8f2(client, item, player, receiver);\n    }\n    get text() {\n        return this.item.name;\n    }\n}\nclass $485214a05f39272f$export$c4676bbae52d5c0d extends $485214a05f39272f$export$eacd9558ec8eca0 {\n    #name;\n    part;\n    type = \"location\";\n    id;\n    constructor(client, part){\n        super(client, part);\n        const player = client.players.findPlayer(part.player);\n        const pkg = client.package.findPackage(player.game);\n        this.part = part;\n        if (part.type === \"location_name\") {\n            this.#name = part.text;\n            this.id = pkg.locationTable[part.text];\n        } else {\n            this.id = parseInt(part.text);\n            this.#name = client.package.lookupLocationName(player.game, this.id, true);\n        }\n    }\n    get text() {\n        return this.#name;\n    }\n}\nclass $485214a05f39272f$export$ad3e4831488d3e88 extends $485214a05f39272f$export$eacd9558ec8eca0 {\n    part;\n    type = \"color\";\n    color;\n    constructor(client, part){\n        super(client, part);\n        this.part = part;\n        this.color = part.color;\n    }\n    get text() {\n        return this.part.text;\n    }\n}\nclass $485214a05f39272f$export$e3a1ab2afc9bead2 extends $485214a05f39272f$export$eacd9558ec8eca0 {\n    part;\n    type;\n    constructor(client, part){\n        super(client, part);\n        this.part = part;\n        if (this.part.type === \"entrance_name\") this.type = \"entrance\";\n        else this.type = \"text\";\n    }\n    get text() {\n        return this.part.text;\n    }\n}\nclass $485214a05f39272f$export$a52e59968bfe501d extends $485214a05f39272f$export$eacd9558ec8eca0 {\n    part;\n    type = \"player\";\n    player;\n    constructor(client, part){\n        super(client, part);\n        this.part = part;\n        if (part.type === \"player_id\") this.player = client.players.findPlayer(parseInt(part.text));\n        else {\n            const player = client.players.teams[client.players.self.team].find((p)=>p.name === part.text);\n            if (!player) throw new Error(`Cannot find player under name: ${part.text}`);\n            this.player = player;\n        }\n    }\n    get text() {\n        return this.player.alias;\n    }\n}\n// src/classes/managers/MessageManager.ts\nclass $485214a05f39272f$export$6c01fd78ac7b8c50 extends $485214a05f39272f$export$34388b49bc564ad4 {\n    #client;\n    #messages = [];\n    get log() {\n        return [\n            ...this.#messages\n        ];\n    }\n    constructor(client){\n        super();\n        this.#client = client;\n        this.#client.socket.on(\"printJSON\", this.#onPrintJSON.bind(this));\n    }\n    async say(text) {\n        if (!this.#client.authenticated) throw new $485214a05f39272f$export$c7e58b539e03d4b2(\"Cannot send chat messages without being authenticated.\");\n        text = text.trim();\n        const request = {\n            cmd: \"Say\",\n            text: text\n        };\n        this.#client.socket.send(request);\n        await this.wait(\"chat\", (message)=>message === text);\n    }\n    #onPrintJSON(packet) {\n        const nodes = [];\n        for (const part of packet.data)switch(part.type){\n            case \"item_id\":\n            case \"item_name\":\n                {\n                    const itemPacket = packet;\n                    let receiver;\n                    if (itemPacket.type === \"ItemCheat\") receiver = this.#client.players.findPlayer(itemPacket.receiving, itemPacket.team);\n                    else receiver = this.#client.players.findPlayer(itemPacket.receiving);\n                    nodes.push(new $485214a05f39272f$export$65034a9c3736e136(this.#client, part, itemPacket.item, receiver));\n                    break;\n                }\n            case \"location_id\":\n            case \"location_name\":\n                nodes.push(new $485214a05f39272f$export$c4676bbae52d5c0d(this.#client, part));\n                break;\n            case \"color\":\n                nodes.push(new $485214a05f39272f$export$ad3e4831488d3e88(this.#client, part));\n                break;\n            case \"player_id\":\n            case \"player_name\":\n                nodes.push(new $485214a05f39272f$export$a52e59968bfe501d(this.#client, part));\n                break;\n            default:\n                nodes.push(new $485214a05f39272f$export$e3a1ab2afc9bead2(this.#client, part));\n                break;\n        }\n        const text = nodes.map((node)=>node.text).join();\n        if (this.#client.options.maximumMessages >= 1) {\n            this.log.push({\n                text: text,\n                nodes: nodes\n            });\n            this.log.splice(0, this.log.length - this.#client.options.maximumMessages);\n        }\n        switch(packet.type){\n            case \"ItemSend\":\n                {\n                    const sender = this.#client.players.findPlayer(packet.item.player);\n                    const receiver = this.#client.players.findPlayer(packet.receiving);\n                    const item = new $485214a05f39272f$export$6d08773d2e66f8f2(this.#client, packet.item, sender, receiver);\n                    this.emit(\"itemSent\", [\n                        text,\n                        item,\n                        nodes\n                    ]);\n                    break;\n                }\n            case \"ItemCheat\":\n                {\n                    const sender = this.#client.players.findPlayer(packet.item.player, packet.team);\n                    const receiver = this.#client.players.findPlayer(packet.receiving, packet.team);\n                    const item = new $485214a05f39272f$export$6d08773d2e66f8f2(this.#client, packet.item, sender, receiver);\n                    this.emit(\"itemCheated\", [\n                        text,\n                        item,\n                        nodes\n                    ]);\n                    break;\n                }\n            case \"Hint\":\n                {\n                    const sender = this.#client.players.findPlayer(packet.item.player);\n                    const receiver = this.#client.players.findPlayer(packet.receiving);\n                    const item = new $485214a05f39272f$export$6d08773d2e66f8f2(this.#client, packet.item, sender, receiver);\n                    this.emit(\"itemHinted\", [\n                        text,\n                        item,\n                        packet.found,\n                        nodes\n                    ]);\n                    break;\n                }\n            case \"Join\":\n                {\n                    const player = this.#client.players.findPlayer(packet.slot, packet.team);\n                    this.emit(\"connected\", [\n                        text,\n                        player,\n                        packet.tags,\n                        nodes\n                    ]);\n                    break;\n                }\n            case \"Part\":\n                {\n                    const player = this.#client.players.findPlayer(packet.slot, packet.team);\n                    this.emit(\"disconnected\", [\n                        text,\n                        player,\n                        nodes\n                    ]);\n                    break;\n                }\n            case \"Chat\":\n                {\n                    const player = this.#client.players.findPlayer(packet.slot, packet.team);\n                    this.emit(\"chat\", [\n                        packet.message,\n                        player,\n                        nodes\n                    ]);\n                    break;\n                }\n            case \"ServerChat\":\n                this.emit(\"serverChat\", [\n                    packet.message,\n                    nodes\n                ]);\n                break;\n            case \"TagsChanged\":\n                {\n                    const player = this.#client.players.findPlayer(packet.slot, packet.team);\n                    this.emit(\"tagsUpdated\", [\n                        text,\n                        player,\n                        packet.tags,\n                        nodes\n                    ]);\n                    break;\n                }\n            case \"Tutorial\":\n                this.emit(\"tutorial\", [\n                    text,\n                    nodes\n                ]);\n                break;\n            case \"CommandResult\":\n                this.emit(\"userCommand\", [\n                    text,\n                    nodes\n                ]);\n                break;\n            case \"AdminCommandResult\":\n                this.emit(\"adminCommand\", [\n                    text,\n                    nodes\n                ]);\n                break;\n            case \"Goal\":\n                {\n                    const player = this.#client.players.findPlayer(packet.slot, packet.team);\n                    this.emit(\"goaled\", [\n                        text,\n                        player,\n                        nodes\n                    ]);\n                    break;\n                }\n            case \"Release\":\n                {\n                    const player = this.#client.players.findPlayer(packet.slot, packet.team);\n                    this.emit(\"released\", [\n                        text,\n                        player,\n                        nodes\n                    ]);\n                    break;\n                }\n            case \"Collect\":\n                {\n                    const player = this.#client.players.findPlayer(packet.slot, packet.team);\n                    this.emit(\"collected\", [\n                        text,\n                        player,\n                        nodes\n                    ]);\n                    break;\n                }\n            case \"Countdown\":\n                this.emit(\"countdown\", [\n                    text,\n                    packet.countdown,\n                    nodes\n                ]);\n        }\n        this.emit(\"message\", [\n            text,\n            nodes\n        ]);\n    }\n}\n// src/classes/Player.ts\nclass $485214a05f39272f$export$2616165974278734 {\n    #client;\n    #player;\n    constructor(client, player){\n        this.#client = client;\n        this.#player = player;\n    }\n    toString() {\n        return this.alias;\n    }\n    get name() {\n        return this.#player.name;\n    }\n    get alias() {\n        return this.#player.alias;\n    }\n    get game() {\n        if (this.slot === 0) return \"Archipelago\";\n        return this.#networkSlot.game;\n    }\n    get type() {\n        if (this.slot === 0) return $485214a05f39272f$export$f1b7dd9a86d77942.spectator;\n        return this.#networkSlot.type;\n    }\n    get team() {\n        return this.#player.team;\n    }\n    get slot() {\n        return this.#player.slot;\n    }\n    get members() {\n        if (this.type !== $485214a05f39272f$export$f1b7dd9a86d77942.group) return [];\n        return this.#client.players.teams[this.team].filter((player)=>this.#networkSlot.group_members.includes(player.slot));\n    }\n    get groups() {\n        if (this.slot === 0) return [];\n        return this.#client.players.teams[this.team].filter((player)=>player.slot !== 0 && this.#client.players.slots[player.slot].group_members.includes(this.slot));\n    }\n    async fetchStatus() {\n        if (this.type === $485214a05f39272f$export$f1b7dd9a86d77942.group) return $485214a05f39272f$export$9e353c7f2c9c21cf.goal;\n        return await this.#client.storage.fetch(`_read_client_status_${this.team}_${this.slot}`) ?? 0;\n    }\n    async fetchSlotData() {\n        return await this.#client.storage.fetch(`_read_slot_data_${this.slot}`);\n    }\n    async fetchHints() {\n        const hints = await this.#client.storage.fetch(`_read_hints_${this.team}_${this.slot}`);\n        return hints.map((hint)=>new $485214a05f39272f$export$8d13340382210b65(this.#client, hint));\n    }\n    get #networkSlot() {\n        return this.#client.players.slots[this.slot];\n    }\n}\n// src/classes/managers/PlayersManager.ts\nclass $485214a05f39272f$export$c40649f044cf5bb0 extends $485214a05f39272f$export$34388b49bc564ad4 {\n    #client;\n    #players = [];\n    #slots = {};\n    #slot = 0;\n    #team = 0;\n    constructor(client){\n        super();\n        this.#client = client;\n        this.#client.socket.on(\"connected\", (packet)=>{\n            this.#slots = Object.freeze(packet.slot_info);\n            this.#players = [];\n            this.#slot = packet.slot;\n            this.#team = packet.team;\n            for (const player of packet.players){\n                this.#players[player.team] ??= [\n                    {\n                        team: player.team,\n                        slot: 0,\n                        name: \"Archipelago\",\n                        alias: \"Archipelago\"\n                    }\n                ];\n                this.#players[player.team][player.slot] = player;\n            }\n        }).on(\"roomUpdate\", (packet)=>{\n            if (!packet.players) return;\n            for (const player of packet.players)if (this.#players[player.team][player.slot].alias !== player.alias) {\n                const oldAlias = this.#players[player.team][player.slot].alias;\n                this.#players[player.team][player.slot] = player;\n                this.emit(\"aliasUpdated\", [\n                    new $485214a05f39272f$export$2616165974278734(this.#client, player),\n                    oldAlias,\n                    player.alias\n                ]);\n            }\n        });\n    }\n    get self() {\n        if (this.#slot === 0) throw new Error(\"Cannot lookup own player object when client has never connected to a server.\");\n        return new $485214a05f39272f$export$2616165974278734(this.#client, this.#players[this.#team][this.#slot]);\n    }\n    get slots() {\n        return this.#slots;\n    }\n    get teams() {\n        const players = [];\n        for(let team = 0; team < this.#players.length; team++){\n            players[team] = [];\n            for(let player = 0; player < this.#players[team].length; player++)players[team].push(new $485214a05f39272f$export$2616165974278734(this.#client, this.#players[team][player]));\n        }\n        return players;\n    }\n    findPlayer(slot, team) {\n        if (team === undefined) team = this.#client.players.self.team;\n        const playerTeam = this.#players[team];\n        if (playerTeam) return new $485214a05f39272f$export$2616165974278734(this.#client, this.#players[team][slot]);\n        return;\n    }\n}\n// src/classes/managers/RoomStateManager.ts\nclass $485214a05f39272f$export$b2368da4b04728a4 extends $485214a05f39272f$export$34388b49bc564ad4 {\n    #client;\n    #serverVersion = {\n        major: -1,\n        minor: -1,\n        build: -1\n    };\n    #generatorVersion = {\n        major: -1,\n        minor: -1,\n        build: -1\n    };\n    #games = [];\n    #tags = [];\n    #seed = \"\";\n    #password = false;\n    #hintPoints = 0;\n    #hintCost = 0;\n    #locationCheckPoints = 0;\n    #permissions = {\n        release: 0,\n        collect: 0,\n        remaining: 0\n    };\n    #missingLocations = [];\n    #checkedLocations = [];\n    #race = false;\n    get serverVersion() {\n        return {\n            ...this.#serverVersion\n        };\n    }\n    get generatorVersion() {\n        return {\n            ...this.#generatorVersion\n        };\n    }\n    get games() {\n        return [\n            ...this.#games\n        ];\n    }\n    get tags() {\n        return [\n            ...this.#tags\n        ];\n    }\n    get seedName() {\n        return this.#seed;\n    }\n    get password() {\n        return this.#password;\n    }\n    get permissions() {\n        return {\n            ...this.#permissions\n        };\n    }\n    get hintPoints() {\n        return this.#hintPoints;\n    }\n    get hintCost() {\n        if (this.hintCostPercentage > 0) return Math.max(1, Math.floor(this.hintCostPercentage * this.allLocations.length * 0.01));\n        return 0;\n    }\n    get hintCostPercentage() {\n        return this.#hintCost;\n    }\n    get locationCheckPoints() {\n        return this.#locationCheckPoints;\n    }\n    get missingLocations() {\n        return [\n            ...this.#missingLocations\n        ].sort();\n    }\n    get checkedLocations() {\n        return [\n            ...this.#checkedLocations\n        ].sort();\n    }\n    get allLocations() {\n        return [\n            ...this.#missingLocations,\n            ...this.#checkedLocations\n        ].sort();\n    }\n    get race() {\n        return this.#race;\n    }\n    constructor(client){\n        super();\n        this.#client = client;\n        this.#client.socket.on(\"roomInfo\", (packet)=>{\n            this.#serverVersion = {\n                major: packet.version.major,\n                minor: packet.version.minor,\n                build: packet.version.build\n            };\n            this.#generatorVersion = {\n                major: packet.generator_version.major,\n                minor: packet.generator_version.minor,\n                build: packet.generator_version.build\n            };\n            this.#tags = packet.tags;\n            this.#games = packet.games;\n            this.#seed = packet.seed_name;\n            this.#password = packet.password;\n            this.#permissions = packet.permissions;\n            this.#hintCost = packet.hint_cost;\n            this.#locationCheckPoints = packet.location_check_points;\n        }).on(\"connected\", (packet)=>{\n            this.#missingLocations = packet.missing_locations;\n            this.#checkedLocations = packet.checked_locations;\n            this.emit(\"locationsChecked\", [\n                this.checkedLocations\n            ]);\n            this.#hintPoints = packet.hint_points;\n            this.emit(\"hintPointsUpdated\", [\n                0,\n                packet.hint_points\n            ]);\n        }).on(\"roomUpdate\", (packet)=>{\n            if (packet.hint_cost !== undefined) {\n                const [oc, op] = [\n                    this.hintCost,\n                    this.hintCostPercentage\n                ];\n                this.#hintCost = packet.hint_cost;\n                this.emit(\"hintCostUpdated\", [\n                    oc,\n                    this.hintCost,\n                    op,\n                    this.hintCostPercentage\n                ]);\n            }\n            if (packet.hint_points !== undefined) {\n                const old = this.#hintPoints;\n                this.#hintPoints = packet.hint_points;\n                this.emit(\"hintPointsUpdated\", [\n                    old,\n                    this.hintPoints\n                ]);\n            }\n            if (packet.location_check_points !== undefined) {\n                const old = this.#locationCheckPoints;\n                this.#locationCheckPoints = packet.location_check_points;\n                this.emit(\"locationCheckPointsUpdated\", [\n                    old,\n                    this.locationCheckPoints\n                ]);\n            }\n            if (packet.password !== undefined) {\n                this.#password = packet.password;\n                this.emit(\"passwordUpdated\", [\n                    this.password\n                ]);\n            }\n            if (packet.permissions !== undefined) {\n                const old = this.#permissions;\n                this.#permissions = packet.permissions;\n                this.emit(\"permissionsUpdated\", [\n                    old,\n                    this.permissions\n                ]);\n            }\n            if (packet.checked_locations !== undefined) {\n                this.#checkedLocations = [\n                    ...this.#checkedLocations,\n                    ...packet.checked_locations\n                ];\n                this.#missingLocations = this.missingLocations.filter((location)=>!packet.checked_locations?.includes(location));\n                this.emit(\"locationsChecked\", [\n                    packet.checked_locations\n                ]);\n            }\n        });\n    }\n}\n// src/classes/managers/SocketManager.ts\nclass $485214a05f39272f$export$c91428cbd4f5850d extends $485214a05f39272f$export$34388b49bc564ad4 {\n    #socket = null;\n    #connected = false;\n    constructor(){\n        super();\n    }\n    get connected() {\n        return this.#connected;\n    }\n    get url() {\n        return this.#socket?.url ?? \"\";\n    }\n    send(...packets2) {\n        if (this.#socket) {\n            this.#socket.send(JSON.stringify(packets2));\n            this.emit(\"sentPackets\", [\n                packets2\n            ]);\n            return this;\n        }\n        throw new $485214a05f39272f$export$501b6aacf912d8b4(\"Unable to send packets to the server; not connected to a server.\");\n    }\n    async connect(url) {\n        this.disconnect();\n        if (typeof url === \"string\") {\n            const pattern = /^([a-zA-Z]+:)\\/\\/[A-Za-z0-9_.~\\-:]+/i;\n            if (!pattern.test(url)) try {\n                return await this.connect(new URL(`wss://${url}`));\n            } catch  {\n                return await this.connect(new URL(`ws://${url}`));\n            }\n            url = new URL(url);\n        }\n        url.port = url.port || \"38281\";\n        if (url.protocol !== \"wss:\" && url.protocol !== \"ws:\") throw new TypeError(\"Unexpected protocol. Archipelago only supports the ws:// and wss:// protocols.\");\n        try {\n            return new Promise((resolve, reject)=>{\n                const IsomorphousWebSocket = this.#findWebSocket();\n                if (IsomorphousWebSocket === null) throw new $485214a05f39272f$export$501b6aacf912d8b4(\"Unable to find a suitable WebSocket API in the current runtime.\");\n                this.#socket = new IsomorphousWebSocket(url);\n                this.#socket.onmessage = this.#parseMessage.bind(this);\n                this.#socket.onclose = ()=>{\n                    this.disconnect();\n                    reject(new $485214a05f39272f$export$501b6aacf912d8b4(\"Failed to connect to Archipelago server.\"));\n                };\n                this.#socket.onerror = ()=>{\n                    this.disconnect();\n                    reject(new $485214a05f39272f$export$501b6aacf912d8b4(\"Failed to connect to Archipelago server.\"));\n                };\n                this.#socket.onopen = ()=>{\n                    this.wait(\"roomInfo\").then(([packet])=>{\n                        this.#connected = true;\n                        if (this.#socket) {\n                            this.#socket.onclose = this.disconnect.bind(this);\n                            this.#socket.onerror = this.disconnect.bind(this);\n                            resolve(packet);\n                            return;\n                        }\n                        this.disconnect();\n                        reject(new $485214a05f39272f$export$501b6aacf912d8b4(\"Failed to connect to Archipelago server.\"));\n                    }).catch((error)=>{\n                        throw error;\n                    });\n                };\n            });\n        } catch (error) {\n            this.disconnect();\n            throw error;\n        }\n    }\n    disconnect() {\n        if (!this.connected) return;\n        this.#connected = false;\n        this.#socket?.close();\n        this.#socket = null;\n        this.emit(\"disconnected\", []);\n    }\n    #parseMessage(event) {\n        const packets2 = JSON.parse(event.data);\n        for (const packet of packets2){\n            switch(packet.cmd){\n                case \"ConnectionRefused\":\n                    this.emit(\"connectionRefused\", [\n                        packet\n                    ]);\n                    break;\n                case \"Bounced\":\n                    this.emit(\"bounced\", [\n                        packet,\n                        packet.data\n                    ]);\n                    break;\n                case \"Connected\":\n                    this.emit(\"connected\", [\n                        packet\n                    ]);\n                    break;\n                case \"DataPackage\":\n                    this.emit(\"dataPackage\", [\n                        packet\n                    ]);\n                    break;\n                case \"InvalidPacket\":\n                    this.emit(\"invalidPacket\", [\n                        packet\n                    ]);\n                    break;\n                case \"LocationInfo\":\n                    this.emit(\"locationInfo\", [\n                        packet\n                    ]);\n                    break;\n                case \"PrintJSON\":\n                    this.emit(\"printJSON\", [\n                        packet\n                    ]);\n                    break;\n                case \"ReceivedItems\":\n                    this.emit(\"receivedItems\", [\n                        packet\n                    ]);\n                    break;\n                case \"Retrieved\":\n                    this.emit(\"retrieved\", [\n                        packet\n                    ]);\n                    break;\n                case \"RoomInfo\":\n                    this.emit(\"roomInfo\", [\n                        packet\n                    ]);\n                    break;\n                case \"RoomUpdate\":\n                    this.emit(\"roomUpdate\", [\n                        packet\n                    ]);\n                    break;\n                case \"SetReply\":\n                    this.emit(\"setReply\", [\n                        packet\n                    ]);\n                    break;\n            }\n            this.emit(\"receivedPacket\", [\n                packet\n            ]);\n        }\n    }\n    #findWebSocket() {\n        let IsomorphousWebSocket = null;\n        if (typeof window !== \"undefined\") IsomorphousWebSocket = window.WebSocket || window.MozWebSocket;\n        else if (typeof $parcel$global !== \"undefined\") IsomorphousWebSocket = $parcel$global.WebSocket || $parcel$global.MozWebSocket;\n        else if (typeof self !== \"undefined\") IsomorphousWebSocket = self.WebSocket || self.MozWebSocket;\n        else if (typeof WebSocket !== \"undefined\") IsomorphousWebSocket = WebSocket;\n        else if (typeof MozWebSocket !== \"undefined\") IsomorphousWebSocket = MozWebSocket;\n        return IsomorphousWebSocket;\n    }\n}\n// src/classes/Client.ts\nclass $485214a05f39272f$export$1f2bb630327ac4b6 {\n    #authenticated = false;\n    #arguments = $485214a05f39272f$export$a86d4a91d90ac80a;\n    #name = \"\";\n    #game = \"\";\n    socket = new $485214a05f39272f$export$c91428cbd4f5850d;\n    package = new $485214a05f39272f$export$ff8e86dda688a0db(this);\n    storage = new $485214a05f39272f$export$c816588507b7fc70(this);\n    room = new $485214a05f39272f$export$b2368da4b04728a4(this);\n    players = new $485214a05f39272f$export$c40649f044cf5bb0(this);\n    items = new $485214a05f39272f$export$d686f2307acf8ad5(this);\n    messages = new $485214a05f39272f$export$6c01fd78ac7b8c50(this);\n    deathLink = new $485214a05f39272f$export$3f6f20ee00545853(this);\n    options;\n    get authenticated() {\n        return this.socket.connected && this.#authenticated;\n    }\n    get name() {\n        return this.#name;\n    }\n    get game() {\n        return this.#game;\n    }\n    get arguments() {\n        return {\n            ...this.#arguments\n        };\n    }\n    constructor(options){\n        if (options) this.options = {\n            ...$485214a05f39272f$export$2829036b0afabc33,\n            ...options\n        };\n        else this.options = {\n            ...$485214a05f39272f$export$2829036b0afabc33\n        };\n        this.socket.on(\"disconnected\", ()=>{\n            this.#authenticated = false;\n        }).on(\"sentPackets\", (packets2)=>{\n            for (const packet of packets2)if (packet.cmd === \"ConnectUpdate\") {\n                this.#arguments.tags = packet.tags;\n                this.#arguments.items = packet.items_handling;\n            }\n        });\n    }\n    async login(url, name, game = \"\", options) {\n        if (name === \"\") throw new $485214a05f39272f$export$46daa3843b07109f(\"Provided slot name cannot be blank.\", \"name\", name);\n        if (options) this.#arguments = {\n            ...$485214a05f39272f$export$a86d4a91d90ac80a,\n            ...options\n        };\n        else this.#arguments = {\n            ...$485214a05f39272f$export$a86d4a91d90ac80a\n        };\n        const tags = new Set(this.arguments.tags);\n        if (!game && !tags.has(\"HintGame\") && !tags.has(\"Tracker\") && !tags.has(\"TextOnly\")) tags.add(\"TextOnly\");\n        this.#arguments.tags = Array.from(tags);\n        const request = {\n            cmd: \"Connect\",\n            name: name,\n            game: game,\n            password: this.arguments.password,\n            slot_data: this.arguments.slotData,\n            items_handling: this.arguments.items,\n            uuid: this.arguments.uuid,\n            tags: this.arguments.tags,\n            version: {\n                ...this.arguments.version,\n                class: \"Version\"\n            }\n        };\n        await this.socket.connect(url);\n        if (this.options.autoFetchDataPackage) await this.package.fetchPackage();\n        return new Promise((resolve, reject)=>{\n            const timeout = setTimeout(()=>reject(new $485214a05f39272f$export$501b6aacf912d8b4(\"Server failed to respond in time.\")), this.options.timeout);\n            const connectedHandler = (packet)=>{\n                this.#authenticated = true;\n                this.#game = packet.slot_info[packet.slot].game;\n                this.#name = packet.slot_info[packet.slot].name;\n                this.socket.off(\"connected\", connectedHandler).off(\"connectionRefused\", refusedHandler);\n                clearTimeout(timeout);\n                resolve(packet.slot_data);\n            };\n            const refusedHandler = (packet)=>{\n                this.socket.off(\"connected\", connectedHandler).off(\"connectionRefused\", refusedHandler);\n                clearTimeout(timeout);\n                reject(new $485214a05f39272f$export$5e64a9683d127ef6(`Connection was refused by the server. Reason(s): [${packet.errors?.join(\", \")}`, packet.errors ?? []));\n            };\n            this.socket.on(\"connected\", connectedHandler.bind(this)).on(\"connectionRefused\", refusedHandler.bind(this)).send(request);\n        });\n    }\n    updateStatus(status) {\n        if (!this.authenticated) throw new $485214a05f39272f$export$c7e58b539e03d4b2(\"Cannot update status while not connected and authenticated.\");\n        this.socket.send({\n            cmd: \"StatusUpdate\",\n            status: status\n        });\n    }\n    goal() {\n        this.updateStatus($485214a05f39272f$export$9e353c7f2c9c21cf.goal);\n    }\n    updateTags(tags) {\n        if (!this.authenticated) throw new $485214a05f39272f$export$c7e58b539e03d4b2(\"Cannot update tags while not connected and authenticated.\");\n        this.socket.send({\n            cmd: \"ConnectUpdate\",\n            tags: tags,\n            items_handling: this.arguments.items\n        });\n    }\n    updateItemsHandling(items) {\n        if (!this.authenticated) throw new $485214a05f39272f$export$c7e58b539e03d4b2(\"Cannot update tags while not connected and authenticated.\");\n        this.socket.send({\n            cmd: \"ConnectUpdate\",\n            tags: this.arguments.tags,\n            items_handling: items\n        });\n    }\n    check(...locations) {\n        if (!this.authenticated) throw new $485214a05f39272f$export$c7e58b539e03d4b2(\"Cannot check locations while not connected and authenticated.\");\n        locations = locations.filter((location)=>this.room.missingLocations.includes(location));\n        this.socket.send({\n            cmd: \"LocationChecks\",\n            locations: locations\n        });\n    }\n    async scout(locations, createHint = 0) {\n        if (!this.authenticated) throw new $485214a05f39272f$export$c7e58b539e03d4b2(\"Cannot scout locations while not connected and authenticated.\");\n        locations = locations.filter((location)=>this.room.allLocations.includes(location));\n        const [response] = await this.socket.send({\n            cmd: \"LocationScouts\",\n            create_as_hint: createHint,\n            locations: locations\n        }).wait(\"locationInfo\", (packet)=>{\n            return packet.locations.map((location)=>location.location).toSorted().join(\",\") === locations.toSorted().join(\",\");\n        });\n        return response.locations.map((item)=>new $485214a05f39272f$export$6d08773d2e66f8f2(this, item, this.players.self, this.players.findPlayer(item.player)));\n    }\n    bounce(targets, data) {\n        if (!this.authenticated) throw new $485214a05f39272f$export$c7e58b539e03d4b2(\"Cannot send bounces while not connected and authenticated.\");\n        this.socket.send({\n            cmd: \"Bounce\",\n            data: data,\n            games: targets.games ?? [],\n            slots: targets.slots ?? [],\n            tags: targets.tags ?? []\n        });\n    }\n}\n\n\n// Create a new Archipelago client\nconst $23ee32a046addb8a$var$client = new (0, $485214a05f39272f$export$1f2bb630327ac4b6)();\n// @ts-ignore\nwindow.client = $23ee32a046addb8a$var$client;\nconst $23ee32a046addb8a$var$form = document.querySelector(\"#connection-details\");\n//pico-8 related declarations\n// @ts-ignore\nconst $23ee32a046addb8a$var$gpio = getP8Gpio();\nconst $23ee32a046addb8a$var$loc_flags = {\n    \"Springboards\": [\n        0,\n        1\n    ],\n    \"Double Jump\": [\n        1,\n        4\n    ],\n    \"Dive\": [\n        2,\n        7\n    ],\n    \"Key\": [\n        3,\n        10\n    ],\n    \"Starting Medal\": [\n        4,\n        0\n    ],\n    \"Springboards Medal\": [\n        5,\n        2\n    ],\n    \"Lava Medal\": [\n        6,\n        9\n    ],\n    \"Cage Medal\": [\n        7,\n        5\n    ],\n    \"Ice Medal\": [\n        8,\n        12\n    ],\n    \"victory\": [\n        9,\n        13\n    ],\n    \"Enter Crossprings\": [\n        10,\n        3\n    ],\n    \"Enter Upper Ice\": [\n        11,\n        6\n    ],\n    \"Enter Lava\": [\n        12,\n        8\n    ],\n    \"Enter Lower Ice\": [\n        13,\n        11\n    ]\n};\nconst $23ee32a046addb8a$var$item_flags = {\n    \"springboards\": [\n        0,\n        3\n    ],\n    \"double jump\": [\n        1,\n        0\n    ],\n    \"dive\": [\n        2,\n        1\n    ],\n    \"key\": [\n        3,\n        2\n    ],\n    \"starting medal\": [\n        4,\n        4\n    ],\n    \"springboards medal\": [\n        5,\n        5\n    ],\n    \"lava medal\": [\n        6,\n        6\n    ],\n    \"cage medal\": [\n        7,\n        7\n    ],\n    \"ice medal\": [\n        8,\n        8\n    ]\n};\nconst $23ee32a046addb8a$var$base_id = 19828412012;\nlet $23ee32a046addb8a$var$checked_locations = [];\nlet $23ee32a046addb8a$var$options = {};\nlet $23ee32a046addb8a$var$thisPlayer = 0;\nlet $23ee32a046addb8a$var$players = {};\nlet $23ee32a046addb8a$var$DeathLink_Amnesty = 0;\nfunction $23ee32a046addb8a$var$message_pico8(message) {\n    let index = 37;\n    //let log = \"\";\n    for(let i = 0; i < message.length; i++){\n        $23ee32a046addb8a$var$gpio[index] = message[i].charCodeAt(0);\n        index++;\n    }\n}\n// Set up event listeners\n$23ee32a046addb8a$var$client.messages.on(\"connected\", async (text, player, tags, nodes)=>{\n    console.log(\"Connected to server: \", player);\n    $23ee32a046addb8a$var$thisPlayer = player.slot;\n    const slots = $23ee32a046addb8a$var$client.players.slots;\n    Object.entries(slots).forEach(([key, slot])=>{\n        const slotNumber = parseInt(key);\n        const slotPlayer = $23ee32a046addb8a$var$client.players.findPlayer(slotNumber);\n        $23ee32a046addb8a$var$players[slotNumber] = {\n            slot: slotNumber,\n            name: slot.name,\n            game: slot.game,\n            alias: slotPlayer.alias\n        };\n    });\n    // set up gpio options\n    $23ee32a046addb8a$var$options = await player.fetchSlotData().then((res)=>res);\n    let optionsByte = 1;\n    if ($23ee32a046addb8a$var$options.DeathLink !== 0) {\n        optionsByte += 2;\n        $23ee32a046addb8a$var$client.socket.send({\n            cmd: \"ConnectUpdate\",\n            items_handling: (0, $485214a05f39272f$export$a726a48d5c185bc2).all,\n            tags: [\n                \"DeathLink\"\n            ]\n        });\n        $23ee32a046addb8a$var$DeathLink_Amnesty = $23ee32a046addb8a$var$options.DeathLink_Amnesty;\n    }\n    if ($23ee32a046addb8a$var$options.MedalHunt) optionsByte += 4;\n    if ($23ee32a046addb8a$var$options.ExtraCheckpoint) optionsByte += 8;\n    if ($23ee32a046addb8a$var$options.ExtraChecks) optionsByte += 16;\n    $23ee32a046addb8a$var$gpio[20] = optionsByte;\n    $23ee32a046addb8a$var$client.socket.send({\n        cmd: \"Sync\"\n    });\n});\n// add item handler for gpio layer\n$23ee32a046addb8a$var$client.items.on(\"itemsReceived\", async (items, startingIndex)=>{\n    console.log(\"Received items: \", items);\n    // if this is a sync packet reset all our item addresses without changing anything else\n    if (startingIndex === 0) for(let i = 10; i < 20; i++)$23ee32a046addb8a$var$gpio[i] = 0;\n    // go through all our item addresses and if they are not set, check the received items for their ap id,\n    // and set the gpio flag if we received it\n    // on the scale I expect pico-8 games to be, this will be good enough\n    // console.log(`gpio: ${gpio}`)\n    for(let i = 0; i < items.length; i++){\n        let item = items[i];\n        if (item.id == $23ee32a046addb8a$var$base_id + 9) {\n            if (item.sender.slot == $23ee32a046addb8a$var$thisPlayer) $23ee32a046addb8a$var$message_pico8(\"found counterfeit medal :(\");\n            else $23ee32a046addb8a$var$message_pico8(`got counterfeit medal from ${item.sender.alias !== '' ? item.sender.alias : item.sender.name} :(`.toLowerCase());\n        }\n        for(const flag in $23ee32a046addb8a$var$item_flags)if ($23ee32a046addb8a$var$base_id + $23ee32a046addb8a$var$item_flags[flag][1] === item.id) {\n            const byte = Math.floor($23ee32a046addb8a$var$item_flags[flag][0] / 8) + 10;\n            const item_bit = 2 ** ($23ee32a046addb8a$var$item_flags[flag][0] % 8);\n            if ($23ee32a046addb8a$var$gpio[byte] & item_bit) console.log(`${flag} has already been received`);\n            else {\n                $23ee32a046addb8a$var$gpio[byte] |= item_bit;\n                if (item.sender.slot === $23ee32a046addb8a$var$thisPlayer) $23ee32a046addb8a$var$message_pico8(`found ${flag}`.toLowerCase());\n                else $23ee32a046addb8a$var$message_pico8(`got ${flag} from ${item.sender.alias !== '' ? item.sender.alias : item.sender.name}`.toLowerCase());\n            }\n        }\n    }\n});\n$23ee32a046addb8a$var$client.socket.on(\"bounced\", (packet, data)=>{\n    console.log(\"Bounced \", packet);\n    if (packet.tags.includes('DeathLink') && $23ee32a046addb8a$var$options.DeathLink !== 0) {\n        $23ee32a046addb8a$var$gpio[25] = $23ee32a046addb8a$var$gpio[25] | 1;\n        $23ee32a046addb8a$var$DeathLink_Amnesty += 1;\n        // TODO: fix deathlink source message\n        if (packet.data.source && packet.data.source !== $23ee32a046addb8a$var$thisPlayer) {\n            const source = packet.data.source;\n            const player = Object.values($23ee32a046addb8a$var$players).filter((k)=>k.name == source)[0];\n            $23ee32a046addb8a$var$message_pico8(`deathlinked by ${player.alias !== \"\" ? player.alias : player.name}`.toLowerCase());\n        } else $23ee32a046addb8a$var$message_pico8(\"deathlinked\");\n    }\n});\n//add location info listener to give game sent item text\n$23ee32a046addb8a$var$client.socket.on(\"locationInfo\", (packet)=>{\n    console.log(\"Location Info: \", packet);\n    packet.locations.forEach((location)=>{\n        if (location.player !== $23ee32a046addb8a$var$thisPlayer) {\n            const itemName = new (0, $485214a05f39272f$export$6d08773d2e66f8f2)($23ee32a046addb8a$var$client, location, $23ee32a046addb8a$var$client.players.self, $23ee32a046addb8a$var$client.players.findPlayer(location.player)).name;\n            $23ee32a046addb8a$var$message_pico8(`sent ${itemName} to ${$23ee32a046addb8a$var$players[location.player].alias ? $23ee32a046addb8a$var$players[location.player].alias : $23ee32a046addb8a$var$players[location.player].name}`.toLowerCase());\n        }\n    });\n});\n// Connect to the Archipelago server\n$23ee32a046addb8a$var$form.addEventListener(\"submit\", async (event)=>{\n    event.preventDefault();\n    const hostname = document.querySelector(\"#hostname\").value;\n    const port = document.querySelector(\"#port\").value;\n    const password = document.querySelector(\"#password\").value;\n    const name = document.querySelector(\"#slot-name\").value;\n    console.log(hostname);\n    console.log(port);\n    console.log(name);\n    const statusWrapper = document.querySelector(\".status-wrapper\");\n    const connected = document.querySelector(\".status-connected\");\n    const failed = document.querySelector(\".status-failed\");\n    const connecting = document.querySelector(\".status-connecting\");\n    statusWrapper.classList.remove(\"d-none\");\n    connected.classList.add(\"d-none\");\n    failed.classList.add(\"d-none\");\n    connecting.classList.remove(\"d-none\");\n    await $23ee32a046addb8a$var$client.login(hostname.startsWith(\"ws\") ? `${hostname}:${port}` : `wss://${hostname}:${port}`, name, \"MetroCUBEvania\", {\n        password: password,\n        items: (0, $485214a05f39272f$export$a726a48d5c185bc2).all,\n        version: {\n            build: 0,\n            major: 5,\n            minor: 0\n        }\n    }).then(()=>{\n        console.log(\"Connected to the server\");\n        connecting.classList.add(\"d-none\");\n        connected.classList.remove(\"d-none\");\n        // You are now connected and authenticated to the server. You can add more code here if need be.\n        const toggle = document.querySelector('.toggle-login-form');\n        const loginForm = document.querySelector('.login-form');\n        toggle.addEventListener('click', ()=>{\n            loginForm.classList.toggle('d-none', !loginForm.classList.contains('d-none'));\n        });\n        loginForm.classList.add('d-none');\n        toggle.classList.remove('d-none');\n    }).catch((error)=>{\n        console.error(\"Failed to connect:\", error);\n        connecting.classList.add(\"d-none\");\n        failed.classList.remove(\"d-none\");\n    });\n});\n// add location handler for gpio layer\n// sending information to the pico8 will trigger this function sending all checks to ap again\n// if you always send information to the pico8 when the gpio updates, that can cause an infinite loop\n$23ee32a046addb8a$var$gpio.subscribe(async function(newIndices) {\n    if ($23ee32a046addb8a$var$options.DeathLink !== 0 && ($23ee32a046addb8a$var$gpio[25] & 2) !== 0) {\n        console.log(\"Death\");\n        $23ee32a046addb8a$var$gpio[25] = $23ee32a046addb8a$var$gpio[25] - 2;\n        $23ee32a046addb8a$var$DeathLink_Amnesty -= 1;\n        for(let i = 0; i < 1; i++)console.log('test)');\n        if ($23ee32a046addb8a$var$DeathLink_Amnesty === 0) {\n            $23ee32a046addb8a$var$DeathLink_Amnesty = $23ee32a046addb8a$var$options.DeathLink_Amnesty;\n            $23ee32a046addb8a$var$client.socket.send({\n                cmd: \"Bounce\",\n                tags: [\n                    'DeathLink'\n                ],\n                data: {\n                    \"source\": $23ee32a046addb8a$var$thisPlayer\n                }\n            });\n            if ($23ee32a046addb8a$var$options.DeathLink_Amnesty > 1) $23ee32a046addb8a$var$message_pico8(\"sent deathlink\");\n        }\n    }\n    for(let loc in $23ee32a046addb8a$var$loc_flags)if (($23ee32a046addb8a$var$gpio[Math.floor($23ee32a046addb8a$var$loc_flags[loc][0] / 8)] & 2 ** ($23ee32a046addb8a$var$loc_flags[loc][0] % 8)) !== 0) {\n        if (loc === \"victory\") $23ee32a046addb8a$var$client.goal();\n        else {\n            console.log(`Checking location id: ${$23ee32a046addb8a$var$base_id + $23ee32a046addb8a$var$loc_flags[loc][1]}`);\n            $23ee32a046addb8a$var$client.check($23ee32a046addb8a$var$base_id + $23ee32a046addb8a$var$loc_flags[loc][1]);\n            if (!$23ee32a046addb8a$var$checked_locations.includes($23ee32a046addb8a$var$base_id + $23ee32a046addb8a$var$loc_flags[loc][1])) await $23ee32a046addb8a$var$client.scout([\n                $23ee32a046addb8a$var$base_id + $23ee32a046addb8a$var$loc_flags[loc][1]\n            ], 0);\n            $23ee32a046addb8a$var$checked_locations.push($23ee32a046addb8a$var$base_id + $23ee32a046addb8a$var$loc_flags[loc][1]);\n        }\n    }\n});\n\n})();\n//# sourceMappingURL=client.js.map\n","import {\r\n    BouncedPacket, Client, Item, itemsHandlingFlags,\r\n    JSONRecord, LocationInfoPacket,\r\n    MessageNode, NetworkSlot, Player,\r\n} from \"archipelago.js\";\r\n\r\n// Create a new Archipelago client\r\nconst client: Client = new Client();\r\n// @ts-ignore\r\nwindow.client = client;\r\nconst form: Element = document.querySelector(\"#connection-details\")\r\n\r\n//pico-8 related declarations\r\n// @ts-ignore\r\nconst gpio = getP8Gpio();\r\nconst loc_flags: Record<string, number[]> = {\r\n    \"Springboards\": [0, 1],\r\n    \"Double Jump\": [1, 4],\r\n    \"Dive\": [2, 7],\r\n    \"Key\": [3, 10],\r\n    \"Starting Medal\": [4, 0],\r\n    \"Springboards Medal\": [5, 2],\r\n    \"Lava Medal\": [6, 9],\r\n    \"Cage Medal\": [7, 5],\r\n    \"Ice Medal\": [8, 12],\r\n    \"victory\": [9, 13],\r\n    \"Enter Crossprings\": [10, 3],\r\n    \"Enter Upper Ice\": [11, 6],\r\n    \"Enter Lava\": [12, 8],\r\n    \"Enter Lower Ice\": [13, 11],\r\n};\r\n\r\nconst item_flags: Record<string, number[]> = {\r\n    \"springboards\": [0, 3],\r\n    \"double jump\": [1, 0],\r\n    \"dive\": [2, 1],\r\n    \"key\": [3, 2],\r\n    \"starting medal\": [4, 4],\r\n    \"springboards medal\": [5, 5],\r\n    \"lava medal\": [6, 6],\r\n    \"cage medal\": [7, 7],\r\n    \"ice medal\": [8, 8],\r\n};\r\nconst base_id: number = 19828412012;\r\n\r\nlet checked_locations: number[] = [];\r\n\r\ntype GameOptions = {\r\n    DeathLink?: number,\r\n    DeathLink_Amnesty?: number,\r\n    MedalHunt?: number,\r\n    ExtraCheckpoint?: number,\r\n    ExtraChecks?: number\r\n};\r\nlet options: GameOptions = {}\r\n\r\nlet thisPlayer: number = 0;\r\ntype Players = Record<number, {\r\n    slot: number,\r\n    name: string,\r\n    game: string,\r\n    alias: string\r\n}>;\r\nlet players: Players = {};\r\n\r\nlet DeathLink_Amnesty: number = 0;\r\n\r\nfunction message_pico8(message: string) {\r\n    let index: number = 37;\r\n    //let log = \"\";\r\n    for (let i = 0; i < message.length; i++) {\r\n        gpio[index] = message[i].charCodeAt(0);\r\n        index++;\r\n    }\r\n}\r\n\r\n// Set up event listeners\r\nclient.messages.on(\"connected\", async (text: string, player: Player, tags: string[], nodes: MessageNode[]) => {\r\n    console.log(\"Connected to server: \", player);\r\n    thisPlayer = player.slot;\r\n    const slots: Record<number, NetworkSlot> = client.players.slots;\r\n    Object.entries(slots).forEach(([key, slot]: [string, NetworkSlot]) => {\r\n        const slotNumber: number = parseInt(key)\r\n        const slotPlayer: Player = client.players.findPlayer(slotNumber);\r\n        players[slotNumber] = {\r\n            slot: slotNumber,\r\n            name: slot.name,\r\n            game: slot.game,\r\n            alias: slotPlayer.alias,\r\n        }\r\n    });\r\n\r\n    // set up gpio options\r\n    options = await player.fetchSlotData().then(res => res as GameOptions);\r\n\r\n    let optionsByte: number = 1;\r\n    if (options.DeathLink !== 0) {\r\n        optionsByte += 2;\r\n        client.socket.send({\r\n            cmd: \"ConnectUpdate\",\r\n            items_handling: itemsHandlingFlags.all,\r\n            tags: [\"DeathLink\"]\r\n        });\r\n        DeathLink_Amnesty = options.DeathLink_Amnesty;\r\n    }\r\n    if (options.MedalHunt) {\r\n        optionsByte += 4;\r\n    }\r\n    if (options.ExtraCheckpoint) {\r\n        optionsByte += 8;\r\n    }\r\n    if (options.ExtraChecks) {\r\n        optionsByte += 16;\r\n    }\r\n    gpio[20] = optionsByte;\r\n\r\n    client.socket.send({ cmd: \"Sync\" });\r\n});\r\n\r\n// add item handler for gpio layer\r\nclient.items.on(\"itemsReceived\", async(items: Item[], startingIndex: number) => {\r\n    console.log(\"Received items: \", items);\r\n    // if this is a sync packet reset all our item addresses without changing anything else\r\n    if (startingIndex === 0) {\r\n        for (let i: number = 10; i < 20; i++) {\r\n            gpio[i] = 0;\r\n        }\r\n    }\r\n\r\n    // go through all our item addresses and if they are not set, check the received items for their ap id,\r\n    // and set the gpio flag if we received it\r\n    // on the scale I expect pico-8 games to be, this will be good enough\r\n    // console.log(`gpio: ${gpio}`)\r\n    for (let i: number = 0; i < items.length; i++) {\r\n        let item: Item = items[i];\r\n        if (item.id == base_id + 9) {\r\n            if (item.sender.slot == thisPlayer) {\r\n                message_pico8(\"found counterfeit medal :(\");\r\n            } else {\r\n                message_pico8(`got counterfeit medal from ${item.sender.alias !== '' ? item.sender.alias : item.sender.name} :(`.toLowerCase())\r\n            }\r\n        }\r\n\r\n        for (const flag in item_flags) {\r\n            if (base_id + item_flags[flag][1] === item.id) {\r\n                const byte = Math.floor(item_flags[flag][0] / 8) + 10;\r\n                const item_bit = 2 ** (item_flags[flag][0] % 8);\r\n                if (gpio[byte] & item_bit) {  // yes this is supposed to be bitwise and\r\n                    console.log(`${flag} has already been received`);\r\n                } else {\r\n                    gpio[byte] |= item_bit;\r\n                    if (item.sender.slot === thisPlayer) {\r\n                        message_pico8(`found ${flag}`.toLowerCase())\r\n                    } else {\r\n                        message_pico8(`got ${flag} from ${item.sender.alias !== '' ? item.sender.alias : item.sender.name}`.toLowerCase())\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nclient.socket.on(\"bounced\", (packet: BouncedPacket, data: JSONRecord) => {\r\n    console.log(\"Bounced \", packet);\r\n    if (packet.tags.includes('DeathLink') && options.DeathLink !== 0) {\r\n        gpio[25] = gpio[25] | 1;\r\n        DeathLink_Amnesty += 1;\r\n        // TODO: fix deathlink source message\r\n        if (packet.data.source && packet.data.source !== thisPlayer) {\r\n            const source = packet.data.source as string;\r\n            const player = Object.values(players)\r\n                .filter(k => k.name == source)[0];\r\n            message_pico8(`deathlinked by ${player.alias !== \"\" ? player.alias : player.name}`.toLowerCase());\r\n        } else {\r\n            message_pico8(\"deathlinked\");\r\n        }\r\n    }\r\n});\r\n\r\n//add location info listener to give game sent item text\r\nclient.socket.on(\"locationInfo\", (packet: LocationInfoPacket) => {\r\n    console.log(\"Location Info: \", packet);\r\n    packet.locations.forEach(location => {\r\n        if (location.player !== thisPlayer) {\r\n            const itemName = new Item(\r\n                client, location, client.players.self, client.players.findPlayer(location.player)\r\n            ).name;\r\n            message_pico8(`sent ${itemName} to ${players[location.player].alias ? players[location.player].alias : players[location.player].name}`.toLowerCase());\r\n        }\r\n    });\r\n});\r\n\r\n// Connect to the Archipelago server\r\nform.addEventListener(\"submit\", async (event) => {\r\n    event.preventDefault();\r\n    const hostname = document.querySelector<HTMLInputElement>(\"#hostname\").value;\r\n    const port = document.querySelector<HTMLInputElement>(\"#port\").value;\r\n    const password = document.querySelector<HTMLInputElement>(\"#password\").value;\r\n    const name = document.querySelector<HTMLInputElement>(\"#slot-name\").value;\r\n\r\n    console.log(hostname);\r\n    console.log(port);\r\n    console.log(name);\r\n\r\n    const statusWrapper = document.querySelector(\".status-wrapper\");\r\n    const connected = document.querySelector(\".status-connected\");\r\n    const failed = document.querySelector(\".status-failed\");\r\n    const connecting = document.querySelector(\".status-connecting\");\r\n\r\n    statusWrapper.classList.remove(\"d-none\");\r\n    connected.classList.add(\"d-none\");\r\n    failed.classList.add(\"d-none\");\r\n    connecting.classList.remove(\"d-none\");\r\n\r\n    await client.login(\r\n        hostname.startsWith(\"ws\") ?\r\n            `${hostname}:${port}` :\r\n            `wss://${hostname}:${port}`,\r\n        name, \"MetroCUBEvania\", {\r\n            password,\r\n            items: itemsHandlingFlags.all,\r\n            version: {\r\n                build: 0,\r\n                major: 5,\r\n                minor: 0,\r\n            },\r\n        }\r\n    ).then(() => {\r\n        console.log(\"Connected to the server\");\r\n        connecting.classList.add(\"d-none\");\r\n        connected.classList.remove(\"d-none\");\r\n        // You are now connected and authenticated to the server. You can add more code here if need be.\r\n        const toggle = document.querySelector('.toggle-login-form');\r\n        const loginForm = document.querySelector('.login-form');\r\n        toggle.addEventListener('click', () => {\r\n            loginForm.classList.toggle('d-none', !loginForm.classList.contains('d-none'));\r\n        });\r\n        loginForm.classList.add('d-none');\r\n        toggle.classList.remove('d-none');\r\n    }).catch(error => {\r\n        console.error(\"Failed to connect:\", error);\r\n        connecting.classList.add(\"d-none\");\r\n        failed.classList.remove(\"d-none\");\r\n    });\r\n});\r\n\r\n// add location handler for gpio layer\r\n// sending information to the pico8 will trigger this function sending all checks to ap again\r\n// if you always send information to the pico8 when the gpio updates, that can cause an infinite loop\r\ngpio.subscribe(async function (newIndices) {\r\n    if (options.DeathLink !== 0 && (gpio[25] & 2) !== 0) {\r\n        console.log(\"Death\");\r\n        gpio[25] = gpio[25] - 2;\r\n        DeathLink_Amnesty -= 1;\r\n        for (let i = 0; i < 1; i++){\r\n            console.log('test)');\r\n        }\r\n        if (DeathLink_Amnesty === 0) {\r\n            DeathLink_Amnesty = options.DeathLink_Amnesty;\r\n            client.socket.send({ cmd: \"Bounce\", tags: ['DeathLink'], data: {\"source\": thisPlayer}});\r\n            if (options.DeathLink_Amnesty > 1) {\r\n                message_pico8(\"sent deathlink\")\r\n            }\r\n        }\r\n    }\r\n    for (let loc in loc_flags) {\r\n        if ((gpio[Math.floor(loc_flags[loc][0] / 8)] & 2 ** (loc_flags[loc][0] % 8)) !== 0) {\r\n            if (loc === \"victory\") {\r\n                client.goal();\r\n            } else {\r\n                console.log(`Checking location id: ${base_id + loc_flags[loc][1]}`)\r\n                client.check(base_id + loc_flags[loc][1]);\r\n                if (!checked_locations.includes(base_id + loc_flags[loc][1])){\r\n                    await client.scout([base_id + loc_flags[loc][1]], 0);\r\n                }\r\n                checked_locations.push(base_id + loc_flags[loc][1]);\r\n            }\r\n        }\r\n    }\r\n});","var __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, {\n      get: all[name],\n      enumerable: true,\n      configurable: true,\n      set: (newValue) => all[name] = () => newValue\n    });\n};\n\n// src/api/index.ts\nvar exports_api = {};\n__export(exports_api, {\n  slotTypes: () => slotTypes,\n  permissions: () => permissions,\n  itemsHandlingFlags: () => itemsHandlingFlags,\n  itemClassifications: () => itemClassifications,\n  clientStatuses: () => clientStatuses\n});\n\n// src/api/constants.ts\nvar clientStatuses = {\n  disconnected: 0,\n  connected: 5,\n  ready: 10,\n  playing: 20,\n  goal: 30\n};\nvar itemClassifications = {\n  progression: 1,\n  useful: 2,\n  trap: 4,\n  none: 0\n};\nvar itemsHandlingFlags = {\n  minimal: 0,\n  others: 1,\n  own: 2,\n  starting: 4,\n  all: 7\n};\nvar permissions = {\n  disabled: 0,\n  enabled: 1,\n  goal: 2,\n  auto: 6,\n  autoEnabled: 7\n};\nvar slotTypes = {\n  spectator: 0,\n  player: 1,\n  group: 2\n};\n// src/errors.ts\nclass SocketError extends Error {\n}\n\nclass ArgumentError extends Error {\n  argumentName;\n  value;\n  constructor(message, argumentName, value) {\n    super(message);\n    this.argumentName = argumentName;\n    this.value = structuredClone(value);\n  }\n}\n\nclass LoginError extends Error {\n  errors = [];\n  constructor(message, errors) {\n    super(message);\n    this.errors = errors;\n  }\n}\n\nclass UnauthenticatedError extends Error {\n}\n\n// src/interfaces/ClientOptions.ts\nvar defaultClientOptions = {\n  timeout: 1e4,\n  autoFetchDataPackage: true,\n  maximumMessages: 1000,\n  debugLogVersions: true\n};\n\n// src/constants.ts\nvar targetVersion = { major: 0, minor: 5, build: 1 };\nvar libraryVersion = \"2.0.3\";\n\n// src/utils.ts\nfunction uuid() {\n  const uuid2 = [];\n  for (let i = 0;i < 36; i++) {\n    uuid2.push(Math.floor(Math.random() * 16));\n  }\n  uuid2[14] = 4;\n  uuid2[19] = uuid2[19] &= ~(1 << 2);\n  uuid2[19] = uuid2[19] |= 1 << 3;\n  uuid2[8] = uuid2[13] = uuid2[18] = uuid2[23] = \"-\";\n  return uuid2.map((d) => d.toString(16)).join(\"\");\n}\n\n// src/interfaces/ConnectionOptions.ts\nvar defaultConnectionOptions = {\n  password: \"\",\n  uuid: uuid(),\n  tags: [],\n  version: targetVersion,\n  items: itemsHandlingFlags.all,\n  slotData: true\n};\n\n// src/classes/Item.ts\nclass Item {\n  #client;\n  #item;\n  #sender;\n  #receiver;\n  constructor(client, item, sender, receiver) {\n    this.#client = client;\n    this.#item = item;\n    this.#sender = sender;\n    this.#receiver = receiver;\n  }\n  toString() {\n    return this.name;\n  }\n  get receiver() {\n    return this.#receiver;\n  }\n  get sender() {\n    return this.#sender;\n  }\n  get name() {\n    return this.#client.package.lookupItemName(this.game, this.#item.item, true);\n  }\n  get id() {\n    return this.#item.item;\n  }\n  get locationName() {\n    return this.#client.package.lookupLocationName(this.sender.game, this.#item.location, true);\n  }\n  get locationId() {\n    return this.#item.location;\n  }\n  get locationGame() {\n    return this.sender.game;\n  }\n  get game() {\n    return this.receiver.game;\n  }\n  get progression() {\n    return (this.flags & itemClassifications.progression) === itemClassifications.progression;\n  }\n  get useful() {\n    return (this.flags & itemClassifications.useful) === itemClassifications.useful;\n  }\n  get trap() {\n    return (this.flags & itemClassifications.trap) === itemClassifications.trap;\n  }\n  get filler() {\n    return this.flags === itemClassifications.none;\n  }\n  get flags() {\n    return this.#item.flags;\n  }\n}\n\n// src/classes/PackageMetadata.ts\nclass PackageMetadata {\n  game;\n  checksum;\n  itemTable;\n  locationTable;\n  reverseItemTable;\n  reverseLocationTable;\n  constructor(game, _package) {\n    this.game = game;\n    this.checksum = _package.checksum;\n    this.itemTable = Object.freeze(_package.item_name_to_id);\n    this.locationTable = Object.freeze(_package.location_name_to_id);\n    this.reverseItemTable = Object.freeze(Object.fromEntries(Object.entries(this.itemTable).map(([k, v]) => [v, k])));\n    this.reverseLocationTable = Object.freeze(Object.fromEntries(Object.entries(this.locationTable).map(([k, v]) => [v, k])));\n  }\n  exportPackage() {\n    return {\n      checksum: this.checksum,\n      item_name_to_id: { ...this.itemTable },\n      location_name_to_id: { ...this.locationTable }\n    };\n  }\n}\n\n// src/classes/managers/DataPackageManager.ts\nclass DataPackageManager {\n  #client;\n  #packages = new Map;\n  #checksums = new Map;\n  #games = new Set;\n  constructor(client) {\n    this.#client = client;\n    this.#client.socket.on(\"roomInfo\", (packet) => {\n      this.#packages.clear();\n      this.#checksums.clear();\n      this.#games.clear();\n      this.#packages.set(\"Archipelago\", this.#preloadArchipelago());\n      for (const game in packet.datapackage_checksums) {\n        this.#checksums.set(game, packet.datapackage_checksums[game]);\n        this.#games.add(game);\n      }\n    });\n  }\n  findPackage(game) {\n    return this.#packages.get(game) ?? null;\n  }\n  async fetchPackage(games = [], update = true) {\n    if (games.length === 0) {\n      games = Array.from(this.#games);\n    }\n    games = games.filter((game) => {\n      if (!this.#games.has(game))\n        return false;\n      if (this.#packages.get(game)?.checksum !== this.#checksums.get(game))\n        return true;\n      return false;\n    });\n    const data = { games: {} };\n    for (const game of games) {\n      const request = { cmd: \"GetDataPackage\", games: [game] };\n      const [response] = await this.#client.socket.send(request).wait(\"dataPackage\");\n      data.games[game] = response.data.games[game];\n    }\n    if (update) {\n      this.importPackage(data);\n    }\n    return data;\n  }\n  importPackage(dataPackage) {\n    for (const game in dataPackage.games) {\n      this.#packages.set(game, new PackageMetadata(game, dataPackage.games[game]));\n      this.#checksums.set(game, dataPackage.games[game].checksum);\n    }\n  }\n  exportPackage() {\n    return {\n      games: this.#packages.entries().reduce((games, [game, pkg]) => {\n        games[game] = pkg.exportPackage();\n        return games;\n      }, {})\n    };\n  }\n  lookupItemName(game, id, fallback = true) {\n    const fallbackName = `Unknown Item ${id}`;\n    const gamePackage = this.findPackage(game);\n    if (!gamePackage) {\n      return fallback ? fallbackName : undefined;\n    }\n    const name = gamePackage.reverseItemTable[id];\n    if (fallback && name === undefined) {\n      return fallbackName;\n    }\n    return name;\n  }\n  lookupLocationName(game, id, fallback = true) {\n    const fallbackName = `Unknown Location ${id}`;\n    const gamePackage = this.findPackage(game);\n    if (!gamePackage) {\n      return fallback ? fallbackName : undefined;\n    }\n    const name = gamePackage.reverseLocationTable[id];\n    if (fallback && name === undefined) {\n      return fallbackName;\n    }\n    return name;\n  }\n  #preloadArchipelago() {\n    return new PackageMetadata(\"Archipelago\", {\n      checksum: \"ac9141e9ad0318df2fa27da5f20c50a842afeecb\",\n      item_name_to_id: { Nothing: -1 },\n      location_name_to_id: { \"Cheat Console\": -1, Server: -2 }\n    });\n  }\n}\n\n// src/classes/IntermediateDataOperation.ts\nclass IntermediateDataOperation {\n  #client;\n  #operations = [];\n  #key;\n  #default;\n  constructor(client, key, _default) {\n    this.#client = client;\n    this.#key = key;\n    this.#default = _default;\n  }\n  replace(value) {\n    this.#operations.push({ operation: \"replace\", value });\n    return this;\n  }\n  default() {\n    this.#operations.push({ operation: \"default\", value: null });\n    return this;\n  }\n  add(value) {\n    this.#operations.push({ operation: \"add\", value });\n    return this;\n  }\n  multiply(value) {\n    this.#operations.push({ operation: \"mul\", value });\n    return this;\n  }\n  power(value) {\n    this.#operations.push({ operation: \"pow\", value });\n    return this;\n  }\n  remainder(value) {\n    this.#operations.push({ operation: \"mod\", value });\n    return this;\n  }\n  floor() {\n    this.#operations.push({ operation: \"floor\", value: null });\n    return this;\n  }\n  ceiling() {\n    this.#operations.push({ operation: \"ceil\", value: null });\n    return this;\n  }\n  max(value) {\n    this.#operations.push({ operation: \"max\", value });\n    return this;\n  }\n  min(value) {\n    this.#operations.push({ operation: \"min\", value });\n    return this;\n  }\n  and(value) {\n    this.#operations.push({ operation: \"and\", value });\n    return this;\n  }\n  or(value) {\n    this.#operations.push({ operation: \"or\", value });\n    return this;\n  }\n  xor(value) {\n    this.#operations.push({ operation: \"xor\", value });\n    return this;\n  }\n  leftShift(value) {\n    this.#operations.push({ operation: \"left_shift\", value });\n    return this;\n  }\n  rightShift(value) {\n    this.#operations.push({ operation: \"right_shift\", value });\n    return this;\n  }\n  remove(value) {\n    this.#operations.push({ operation: \"remove\", value });\n    return this;\n  }\n  pop(value) {\n    this.#operations.push({ operation: \"pop\", value });\n    return this;\n  }\n  update(value) {\n    this.#operations.push({ operation: \"update\", value });\n    return this;\n  }\n  async commit(awaitReply = false) {\n    const _uuid = uuid();\n    const request = {\n      cmd: \"Set\",\n      default: this.#default,\n      key: this.#key,\n      operations: this.#operations,\n      want_reply: awaitReply,\n      uuid: _uuid\n    };\n    this.#client.socket.send(request);\n    if (!awaitReply) {\n      return;\n    }\n    const [response] = await this.#client.socket.wait(\"setReply\", (packet) => packet.uuid === _uuid);\n    return response.value;\n  }\n}\n\n// src/classes/managers/DataStorageManager.ts\nclass DataStorageManager {\n  #client;\n  #storage = {};\n  #subscribers = {};\n  constructor(client) {\n    this.#client = client;\n    this.#client.socket.on(\"disconnected\", () => {\n      this.#storage = {};\n      this.#subscribers = {};\n    }).on(\"setReply\", (packet) => {\n      this.#storage[packet.key] = packet.value;\n      const callbacks = this.#subscribers[packet.key];\n      if (callbacks) {\n        callbacks.forEach((callback) => callback(packet.key, packet.value, packet.original_value));\n      }\n    }).on(\"connected\", () => {\n      if (this.#client.options.debugLogVersions) {\n        const key = `${this.#client.game}:${libraryVersion}:${navigator?.userAgent}`;\n        this.prepare(\"archipelago.js__runtimes\", {}).default().update({ [key]: true }).commit(false);\n      }\n    });\n  }\n  get store() {\n    return structuredClone(this.#storage);\n  }\n  async fetch(input, monitor = false) {\n    let keys = typeof input === \"string\" ? [input] : input;\n    if (monitor) {\n      const monitorKeys = keys.filter((key) => this.#storage[key] === undefined);\n      if (monitorKeys.length > 0) {\n        this.#client.socket.send({ cmd: \"SetNotify\", keys: monitorKeys });\n      }\n    }\n    let data = {};\n    keys = keys.filter((key) => {\n      const value = structuredClone(this.#storage[key]);\n      const exists = value !== undefined;\n      if (exists) {\n        data[key] = value;\n      }\n      return !exists;\n    });\n    if (keys.length > 0) {\n      const response = await this.#get(keys);\n      data = { ...data, ...response };\n    }\n    if (monitor) {\n      this.#storage = { ...this.#storage, ...data };\n    }\n    return typeof input === \"string\" ? data[input] : data;\n  }\n  async notify(keys, callback) {\n    keys.forEach((key) => {\n      this.#subscribers[key] ??= [];\n      this.#subscribers[key].push(callback);\n    });\n    return this.fetch(keys, true);\n  }\n  prepare(key, _default) {\n    if (key.startsWith(\"_read_\")) {\n      throw TypeError(\"Cannot manipulate read only keys.\");\n    }\n    return new IntermediateDataOperation(this.#client, key, _default);\n  }\n  async fetchItemNameGroups(game) {\n    return await this.fetch([`_read_item_name_groups_${game}`], true);\n  }\n  async fetchLocationNameGroups(game) {\n    return await this.fetch([`_read_location_name_groups_${game}`], true);\n  }\n  async#get(keys) {\n    const _uuid = uuid();\n    const [response] = await this.#client.socket.send({ cmd: \"Get\", keys, uuid: _uuid }).wait(\"retrieved\", (packet) => packet.uuid === _uuid);\n    return response.keys;\n  }\n}\n\n// src/classes/ArchipelagoEventEmitter.ts\nclass ArchipelagoEventEmitter {\n  #events = {};\n  addEventListener(event, callback, once = false) {\n    this.#events[event] ??= [];\n    this.#events[event].push([callback, once]);\n  }\n  removeEventListener(event, callback) {\n    const callbacks = this.#events[event];\n    if (callbacks && callbacks.length > 0) {\n      this.#events[event] = callbacks.filter(([cb]) => cb !== callback);\n    }\n  }\n  dispatchEvent(event, data) {\n    const callbacks = this.#events[event] ?? [];\n    for (const [callback, once] of callbacks) {\n      callback(...data);\n      if (once) {\n        this.removeEventListener(event, callback);\n      }\n    }\n  }\n}\n\n// src/classes/managers/EventBasedManager.ts\nclass EventBasedManager {\n  #events = new ArchipelagoEventEmitter;\n  on(event, listener) {\n    this.#events.addEventListener(event, listener);\n    return this;\n  }\n  off(event, listener) {\n    this.#events.removeEventListener(event, listener);\n    return this;\n  }\n  async wait(event, clearPredicate = () => true) {\n    return new Promise((resolve) => {\n      const listener = (...args) => {\n        if (clearPredicate(...args)) {\n          this.#events.removeEventListener(event, listener);\n          resolve(args);\n        }\n      };\n      this.#events.addEventListener(event, listener);\n    });\n  }\n  emit(event, detail) {\n    this.#events.dispatchEvent(event, detail);\n  }\n}\n\n// src/classes/managers/DeathLinkManager.ts\nclass DeathLinkManager extends EventBasedManager {\n  #client;\n  #lastDeath = Number.MIN_SAFE_INTEGER;\n  constructor(client) {\n    super();\n    this.#client = client;\n    this.#client.socket.on(\"bounced\", (packet) => {\n      if (packet.tags?.includes(\"DeathLink\") && packet.data.time && packet.data.source) {\n        const deathLink = packet.data;\n        if (deathLink.time === this.#lastDeath) {\n          return;\n        }\n        this.#lastDeath = deathLink.time;\n        this.emit(\"deathReceived\", [deathLink.source, deathLink.time * 1000, deathLink.cause]);\n      }\n    });\n  }\n  get enabled() {\n    return this.#client.arguments.tags.includes(\"DeathLink\");\n  }\n  enableDeathLink() {\n    if (this.#client.arguments.tags.includes(\"DeathLink\")) {\n      return;\n    }\n    this.#client.updateTags([...this.#client.arguments.tags, \"DeathLink\"]);\n  }\n  disableDeathLink() {\n    if (!this.#client.arguments.tags.includes(\"DeathLink\")) {\n      return;\n    }\n    this.#client.updateTags(this.#client.arguments.tags.filter((tag) => tag !== \"DeathLink\"));\n  }\n  sendDeathLink(source, cause) {\n    if (!this.#client.authenticated) {\n      throw new UnauthenticatedError(\"Cannot send death links before connecting and authenticating.\");\n    }\n    if (!this.enabled) {\n      return;\n    }\n    this.#lastDeath = Math.ceil(Date.now() / 1000);\n    const deathLink = {\n      source,\n      cause,\n      time: this.#lastDeath\n    };\n    this.#client.bounce({ tags: [\"DeathLink\"] }, deathLink);\n  }\n}\n\n// src/classes/Hint.ts\nclass Hint {\n  #client;\n  #hint;\n  #item;\n  constructor(client, hint) {\n    this.#client = client;\n    this.#hint = hint;\n    this.#item = new Item(this.#client, { item: hint.item, location: hint.location, player: hint.finding_player, flags: hint.item_flags }, this.#client.players.findPlayer(hint.finding_player), this.#client.players.findPlayer(hint.receiving_player));\n  }\n  get item() {\n    return this.#item;\n  }\n  get found() {\n    return this.#hint.found;\n  }\n  get entrance() {\n    return this.#hint.entrance || \"Vanilla\";\n  }\n}\n\n// src/classes/managers/ItemsManager.ts\nclass ItemsManager extends EventBasedManager {\n  #client;\n  #received = [];\n  #hints = [];\n  constructor(client) {\n    super();\n    this.#client = client;\n    this.#client.socket.on(\"receivedItems\", (packet) => {\n      let index = packet.index;\n      const count = packet.items.length;\n      const items = [...packet.items];\n      while (items.length > 0) {\n        const networkItem = items.shift();\n        this.#received[index++] = new Item(this.#client, networkItem, this.#client.players.findPlayer(networkItem.player), this.#client.players.self);\n      }\n      this.emit(\"itemsReceived\", [this.#received.slice(packet.index, packet.index + count), packet.index]);\n    }).on(\"connected\", () => {\n      this.#hints = [];\n      this.#received = [];\n      this.#client.storage.notify([`_read_hints_${this.#client.players.self.team}_${this.#client.players.self.slot}`], this.#receivedHint.bind(this)).then((data) => {\n        const hints = data[`_read_hints_${this.#client.players.self.team}_${this.#client.players.self.slot}`];\n        this.#hints = hints.map((hint) => new Hint(this.#client, hint));\n        this.emit(\"hintsInitialized\", [this.#hints]);\n      }).catch((error) => {\n        throw error;\n      });\n    });\n  }\n  get received() {\n    return [...this.#received];\n  }\n  get hints() {\n    return [...this.#hints];\n  }\n  get count() {\n    return this.#received.length;\n  }\n  #receivedHint(_, hints) {\n    for (let i = 0;i < hints.length; i++) {\n      if (this.#hints[i] === undefined) {\n        this.#hints[i] = new Hint(this.#client, hints[i]);\n        this.emit(\"hintReceived\", [this.#hints[i]]);\n      } else if (this.#hints[i].found !== hints[i].found) {\n        this.#hints[i] = new Hint(this.#client, hints[i]);\n        this.emit(\"hintFound\", [this.#hints[i]]);\n      }\n    }\n  }\n}\n\n// src/classes/MessageNode.ts\nclass BaseMessageNode {\n  client;\n  part;\n  constructor(client, part) {\n    this.client = client;\n    this.part = part;\n  }\n  toString() {\n    return this.text;\n  }\n}\n\nclass ItemMessageNode extends BaseMessageNode {\n  part;\n  type = \"item\";\n  item;\n  constructor(client, part, item, receiver) {\n    super(client, part);\n    const player = client.players.findPlayer(part.player, receiver.team);\n    this.part = part;\n    this.item = new Item(client, item, player, receiver);\n  }\n  get text() {\n    return this.item.name;\n  }\n}\n\nclass LocationMessageNode extends BaseMessageNode {\n  #name;\n  part;\n  type = \"location\";\n  id;\n  constructor(client, part) {\n    super(client, part);\n    const player = client.players.findPlayer(part.player);\n    const pkg = client.package.findPackage(player.game);\n    this.part = part;\n    if (part.type === \"location_name\") {\n      this.#name = part.text;\n      this.id = pkg.locationTable[part.text];\n    } else {\n      this.id = parseInt(part.text);\n      this.#name = client.package.lookupLocationName(player.game, this.id, true);\n    }\n  }\n  get text() {\n    return this.#name;\n  }\n}\n\nclass ColorMessageNode extends BaseMessageNode {\n  part;\n  type = \"color\";\n  color;\n  constructor(client, part) {\n    super(client, part);\n    this.part = part;\n    this.color = part.color;\n  }\n  get text() {\n    return this.part.text;\n  }\n}\n\nclass TextualMessageNode extends BaseMessageNode {\n  part;\n  type;\n  constructor(client, part) {\n    super(client, part);\n    this.part = part;\n    if (this.part.type === \"entrance_name\") {\n      this.type = \"entrance\";\n    } else {\n      this.type = \"text\";\n    }\n  }\n  get text() {\n    return this.part.text;\n  }\n}\n\nclass PlayerMessageNode extends BaseMessageNode {\n  part;\n  type = \"player\";\n  player;\n  constructor(client, part) {\n    super(client, part);\n    this.part = part;\n    if (part.type === \"player_id\") {\n      this.player = client.players.findPlayer(parseInt(part.text));\n    } else {\n      const player = client.players.teams[client.players.self.team].find((p) => p.name === part.text);\n      if (!player) {\n        throw new Error(`Cannot find player under name: ${part.text}`);\n      }\n      this.player = player;\n    }\n  }\n  get text() {\n    return this.player.alias;\n  }\n}\n\n// src/classes/managers/MessageManager.ts\nclass MessageManager extends EventBasedManager {\n  #client;\n  #messages = [];\n  get log() {\n    return [...this.#messages];\n  }\n  constructor(client) {\n    super();\n    this.#client = client;\n    this.#client.socket.on(\"printJSON\", this.#onPrintJSON.bind(this));\n  }\n  async say(text) {\n    if (!this.#client.authenticated) {\n      throw new UnauthenticatedError(\"Cannot send chat messages without being authenticated.\");\n    }\n    text = text.trim();\n    const request = { cmd: \"Say\", text };\n    this.#client.socket.send(request);\n    await this.wait(\"chat\", (message) => message === text);\n  }\n  #onPrintJSON(packet) {\n    const nodes = [];\n    for (const part of packet.data) {\n      switch (part.type) {\n        case \"item_id\":\n        case \"item_name\": {\n          const itemPacket = packet;\n          let receiver;\n          if (itemPacket.type === \"ItemCheat\") {\n            receiver = this.#client.players.findPlayer(itemPacket.receiving, itemPacket.team);\n          } else {\n            receiver = this.#client.players.findPlayer(itemPacket.receiving);\n          }\n          nodes.push(new ItemMessageNode(this.#client, part, itemPacket.item, receiver));\n          break;\n        }\n        case \"location_id\":\n        case \"location_name\": {\n          nodes.push(new LocationMessageNode(this.#client, part));\n          break;\n        }\n        case \"color\": {\n          nodes.push(new ColorMessageNode(this.#client, part));\n          break;\n        }\n        case \"player_id\":\n        case \"player_name\": {\n          nodes.push(new PlayerMessageNode(this.#client, part));\n          break;\n        }\n        default: {\n          nodes.push(new TextualMessageNode(this.#client, part));\n          break;\n        }\n      }\n    }\n    const text = nodes.map((node) => node.text).join();\n    if (this.#client.options.maximumMessages >= 1) {\n      this.log.push({ text, nodes });\n      this.log.splice(0, this.log.length - this.#client.options.maximumMessages);\n    }\n    switch (packet.type) {\n      case \"ItemSend\": {\n        const sender = this.#client.players.findPlayer(packet.item.player);\n        const receiver = this.#client.players.findPlayer(packet.receiving);\n        const item = new Item(this.#client, packet.item, sender, receiver);\n        this.emit(\"itemSent\", [text, item, nodes]);\n        break;\n      }\n      case \"ItemCheat\": {\n        const sender = this.#client.players.findPlayer(packet.item.player, packet.team);\n        const receiver = this.#client.players.findPlayer(packet.receiving, packet.team);\n        const item = new Item(this.#client, packet.item, sender, receiver);\n        this.emit(\"itemCheated\", [text, item, nodes]);\n        break;\n      }\n      case \"Hint\": {\n        const sender = this.#client.players.findPlayer(packet.item.player);\n        const receiver = this.#client.players.findPlayer(packet.receiving);\n        const item = new Item(this.#client, packet.item, sender, receiver);\n        this.emit(\"itemHinted\", [text, item, packet.found, nodes]);\n        break;\n      }\n      case \"Join\": {\n        const player = this.#client.players.findPlayer(packet.slot, packet.team);\n        this.emit(\"connected\", [text, player, packet.tags, nodes]);\n        break;\n      }\n      case \"Part\": {\n        const player = this.#client.players.findPlayer(packet.slot, packet.team);\n        this.emit(\"disconnected\", [text, player, nodes]);\n        break;\n      }\n      case \"Chat\": {\n        const player = this.#client.players.findPlayer(packet.slot, packet.team);\n        this.emit(\"chat\", [packet.message, player, nodes]);\n        break;\n      }\n      case \"ServerChat\": {\n        this.emit(\"serverChat\", [packet.message, nodes]);\n        break;\n      }\n      case \"TagsChanged\": {\n        const player = this.#client.players.findPlayer(packet.slot, packet.team);\n        this.emit(\"tagsUpdated\", [text, player, packet.tags, nodes]);\n        break;\n      }\n      case \"Tutorial\": {\n        this.emit(\"tutorial\", [text, nodes]);\n        break;\n      }\n      case \"CommandResult\": {\n        this.emit(\"userCommand\", [text, nodes]);\n        break;\n      }\n      case \"AdminCommandResult\": {\n        this.emit(\"adminCommand\", [text, nodes]);\n        break;\n      }\n      case \"Goal\": {\n        const player = this.#client.players.findPlayer(packet.slot, packet.team);\n        this.emit(\"goaled\", [text, player, nodes]);\n        break;\n      }\n      case \"Release\": {\n        const player = this.#client.players.findPlayer(packet.slot, packet.team);\n        this.emit(\"released\", [text, player, nodes]);\n        break;\n      }\n      case \"Collect\": {\n        const player = this.#client.players.findPlayer(packet.slot, packet.team);\n        this.emit(\"collected\", [text, player, nodes]);\n        break;\n      }\n      case \"Countdown\": {\n        this.emit(\"countdown\", [text, packet.countdown, nodes]);\n      }\n    }\n    this.emit(\"message\", [text, nodes]);\n  }\n}\n\n// src/classes/Player.ts\nclass Player {\n  #client;\n  #player;\n  constructor(client, player) {\n    this.#client = client;\n    this.#player = player;\n  }\n  toString() {\n    return this.alias;\n  }\n  get name() {\n    return this.#player.name;\n  }\n  get alias() {\n    return this.#player.alias;\n  }\n  get game() {\n    if (this.slot === 0) {\n      return \"Archipelago\";\n    }\n    return this.#networkSlot.game;\n  }\n  get type() {\n    if (this.slot === 0) {\n      return slotTypes.spectator;\n    }\n    return this.#networkSlot.type;\n  }\n  get team() {\n    return this.#player.team;\n  }\n  get slot() {\n    return this.#player.slot;\n  }\n  get members() {\n    if (this.type !== slotTypes.group) {\n      return [];\n    }\n    return this.#client.players.teams[this.team].filter((player) => this.#networkSlot.group_members.includes(player.slot));\n  }\n  get groups() {\n    if (this.slot === 0) {\n      return [];\n    }\n    return this.#client.players.teams[this.team].filter((player) => player.slot !== 0 && this.#client.players.slots[player.slot].group_members.includes(this.slot));\n  }\n  async fetchStatus() {\n    if (this.type === slotTypes.group) {\n      return clientStatuses.goal;\n    }\n    return await this.#client.storage.fetch(`_read_client_status_${this.team}_${this.slot}`) ?? 0;\n  }\n  async fetchSlotData() {\n    return await this.#client.storage.fetch(`_read_slot_data_${this.slot}`);\n  }\n  async fetchHints() {\n    const hints = await this.#client.storage.fetch(`_read_hints_${this.team}_${this.slot}`);\n    return hints.map((hint) => new Hint(this.#client, hint));\n  }\n  get #networkSlot() {\n    return this.#client.players.slots[this.slot];\n  }\n}\n\n// src/classes/managers/PlayersManager.ts\nclass PlayersManager extends EventBasedManager {\n  #client;\n  #players = [];\n  #slots = {};\n  #slot = 0;\n  #team = 0;\n  constructor(client) {\n    super();\n    this.#client = client;\n    this.#client.socket.on(\"connected\", (packet) => {\n      this.#slots = Object.freeze(packet.slot_info);\n      this.#players = [];\n      this.#slot = packet.slot;\n      this.#team = packet.team;\n      for (const player of packet.players) {\n        this.#players[player.team] ??= [{ team: player.team, slot: 0, name: \"Archipelago\", alias: \"Archipelago\" }];\n        this.#players[player.team][player.slot] = player;\n      }\n    }).on(\"roomUpdate\", (packet) => {\n      if (!packet.players) {\n        return;\n      }\n      for (const player of packet.players) {\n        if (this.#players[player.team][player.slot].alias !== player.alias) {\n          const oldAlias = this.#players[player.team][player.slot].alias;\n          this.#players[player.team][player.slot] = player;\n          this.emit(\"aliasUpdated\", [new Player(this.#client, player), oldAlias, player.alias]);\n        }\n      }\n    });\n  }\n  get self() {\n    if (this.#slot === 0) {\n      throw new Error(\"Cannot lookup own player object when client has never connected to a server.\");\n    }\n    return new Player(this.#client, this.#players[this.#team][this.#slot]);\n  }\n  get slots() {\n    return this.#slots;\n  }\n  get teams() {\n    const players = [];\n    for (let team = 0;team < this.#players.length; team++) {\n      players[team] = [];\n      for (let player = 0;player < this.#players[team].length; player++) {\n        players[team].push(new Player(this.#client, this.#players[team][player]));\n      }\n    }\n    return players;\n  }\n  findPlayer(slot, team) {\n    if (team === undefined) {\n      team = this.#client.players.self.team;\n    }\n    const playerTeam = this.#players[team];\n    if (playerTeam) {\n      return new Player(this.#client, this.#players[team][slot]);\n    }\n    return;\n  }\n}\n\n// src/classes/managers/RoomStateManager.ts\nclass RoomStateManager extends EventBasedManager {\n  #client;\n  #serverVersion = { major: -1, minor: -1, build: -1 };\n  #generatorVersion = { major: -1, minor: -1, build: -1 };\n  #games = [];\n  #tags = [];\n  #seed = \"\";\n  #password = false;\n  #hintPoints = 0;\n  #hintCost = 0;\n  #locationCheckPoints = 0;\n  #permissions = { release: 0, collect: 0, remaining: 0 };\n  #missingLocations = [];\n  #checkedLocations = [];\n  #race = false;\n  get serverVersion() {\n    return { ...this.#serverVersion };\n  }\n  get generatorVersion() {\n    return { ...this.#generatorVersion };\n  }\n  get games() {\n    return [...this.#games];\n  }\n  get tags() {\n    return [...this.#tags];\n  }\n  get seedName() {\n    return this.#seed;\n  }\n  get password() {\n    return this.#password;\n  }\n  get permissions() {\n    return { ...this.#permissions };\n  }\n  get hintPoints() {\n    return this.#hintPoints;\n  }\n  get hintCost() {\n    if (this.hintCostPercentage > 0) {\n      return Math.max(1, Math.floor(this.hintCostPercentage * this.allLocations.length * 0.01));\n    }\n    return 0;\n  }\n  get hintCostPercentage() {\n    return this.#hintCost;\n  }\n  get locationCheckPoints() {\n    return this.#locationCheckPoints;\n  }\n  get missingLocations() {\n    return [...this.#missingLocations].sort();\n  }\n  get checkedLocations() {\n    return [...this.#checkedLocations].sort();\n  }\n  get allLocations() {\n    return [...this.#missingLocations, ...this.#checkedLocations].sort();\n  }\n  get race() {\n    return this.#race;\n  }\n  constructor(client) {\n    super();\n    this.#client = client;\n    this.#client.socket.on(\"roomInfo\", (packet) => {\n      this.#serverVersion = {\n        major: packet.version.major,\n        minor: packet.version.minor,\n        build: packet.version.build\n      };\n      this.#generatorVersion = {\n        major: packet.generator_version.major,\n        minor: packet.generator_version.minor,\n        build: packet.generator_version.build\n      };\n      this.#tags = packet.tags;\n      this.#games = packet.games;\n      this.#seed = packet.seed_name;\n      this.#password = packet.password;\n      this.#permissions = packet.permissions;\n      this.#hintCost = packet.hint_cost;\n      this.#locationCheckPoints = packet.location_check_points;\n    }).on(\"connected\", (packet) => {\n      this.#missingLocations = packet.missing_locations;\n      this.#checkedLocations = packet.checked_locations;\n      this.emit(\"locationsChecked\", [this.checkedLocations]);\n      this.#hintPoints = packet.hint_points;\n      this.emit(\"hintPointsUpdated\", [0, packet.hint_points]);\n    }).on(\"roomUpdate\", (packet) => {\n      if (packet.hint_cost !== undefined) {\n        const [oc, op] = [this.hintCost, this.hintCostPercentage];\n        this.#hintCost = packet.hint_cost;\n        this.emit(\"hintCostUpdated\", [oc, this.hintCost, op, this.hintCostPercentage]);\n      }\n      if (packet.hint_points !== undefined) {\n        const old = this.#hintPoints;\n        this.#hintPoints = packet.hint_points;\n        this.emit(\"hintPointsUpdated\", [old, this.hintPoints]);\n      }\n      if (packet.location_check_points !== undefined) {\n        const old = this.#locationCheckPoints;\n        this.#locationCheckPoints = packet.location_check_points;\n        this.emit(\"locationCheckPointsUpdated\", [old, this.locationCheckPoints]);\n      }\n      if (packet.password !== undefined) {\n        this.#password = packet.password;\n        this.emit(\"passwordUpdated\", [this.password]);\n      }\n      if (packet.permissions !== undefined) {\n        const old = this.#permissions;\n        this.#permissions = packet.permissions;\n        this.emit(\"permissionsUpdated\", [old, this.permissions]);\n      }\n      if (packet.checked_locations !== undefined) {\n        this.#checkedLocations = [...this.#checkedLocations, ...packet.checked_locations];\n        this.#missingLocations = this.missingLocations.filter((location) => !packet.checked_locations?.includes(location));\n        this.emit(\"locationsChecked\", [packet.checked_locations]);\n      }\n    });\n  }\n}\n\n// src/classes/managers/SocketManager.ts\nclass SocketManager extends EventBasedManager {\n  #socket = null;\n  #connected = false;\n  constructor() {\n    super();\n  }\n  get connected() {\n    return this.#connected;\n  }\n  get url() {\n    return this.#socket?.url ?? \"\";\n  }\n  send(...packets2) {\n    if (this.#socket) {\n      this.#socket.send(JSON.stringify(packets2));\n      this.emit(\"sentPackets\", [packets2]);\n      return this;\n    }\n    throw new SocketError(\"Unable to send packets to the server; not connected to a server.\");\n  }\n  async connect(url) {\n    this.disconnect();\n    if (typeof url === \"string\") {\n      const pattern = /^([a-zA-Z]+:)\\/\\/[A-Za-z0-9_.~\\-:]+/i;\n      if (!pattern.test(url)) {\n        try {\n          return await this.connect(new URL(`wss://${url}`));\n        } catch {\n          return await this.connect(new URL(`ws://${url}`));\n        }\n      }\n      url = new URL(url);\n    }\n    url.port = url.port || \"38281\";\n    if (url.protocol !== \"wss:\" && url.protocol !== \"ws:\") {\n      throw new TypeError(\"Unexpected protocol. Archipelago only supports the ws:// and wss:// protocols.\");\n    }\n    try {\n      return new Promise((resolve, reject) => {\n        const IsomorphousWebSocket = this.#findWebSocket();\n        if (IsomorphousWebSocket === null) {\n          throw new SocketError(\"Unable to find a suitable WebSocket API in the current runtime.\");\n        }\n        this.#socket = new IsomorphousWebSocket(url);\n        this.#socket.onmessage = this.#parseMessage.bind(this);\n        this.#socket.onclose = () => {\n          this.disconnect();\n          reject(new SocketError(\"Failed to connect to Archipelago server.\"));\n        };\n        this.#socket.onerror = () => {\n          this.disconnect();\n          reject(new SocketError(\"Failed to connect to Archipelago server.\"));\n        };\n        this.#socket.onopen = () => {\n          this.wait(\"roomInfo\").then(([packet]) => {\n            this.#connected = true;\n            if (this.#socket) {\n              this.#socket.onclose = this.disconnect.bind(this);\n              this.#socket.onerror = this.disconnect.bind(this);\n              resolve(packet);\n              return;\n            }\n            this.disconnect();\n            reject(new SocketError(\"Failed to connect to Archipelago server.\"));\n          }).catch((error) => {\n            throw error;\n          });\n        };\n      });\n    } catch (error) {\n      this.disconnect();\n      throw error;\n    }\n  }\n  disconnect() {\n    if (!this.connected) {\n      return;\n    }\n    this.#connected = false;\n    this.#socket?.close();\n    this.#socket = null;\n    this.emit(\"disconnected\", []);\n  }\n  #parseMessage(event) {\n    const packets2 = JSON.parse(event.data);\n    for (const packet of packets2) {\n      switch (packet.cmd) {\n        case \"ConnectionRefused\":\n          this.emit(\"connectionRefused\", [packet]);\n          break;\n        case \"Bounced\":\n          this.emit(\"bounced\", [packet, packet.data]);\n          break;\n        case \"Connected\":\n          this.emit(\"connected\", [packet]);\n          break;\n        case \"DataPackage\":\n          this.emit(\"dataPackage\", [packet]);\n          break;\n        case \"InvalidPacket\":\n          this.emit(\"invalidPacket\", [packet]);\n          break;\n        case \"LocationInfo\":\n          this.emit(\"locationInfo\", [packet]);\n          break;\n        case \"PrintJSON\":\n          this.emit(\"printJSON\", [packet]);\n          break;\n        case \"ReceivedItems\":\n          this.emit(\"receivedItems\", [packet]);\n          break;\n        case \"Retrieved\":\n          this.emit(\"retrieved\", [packet]);\n          break;\n        case \"RoomInfo\":\n          this.emit(\"roomInfo\", [packet]);\n          break;\n        case \"RoomUpdate\":\n          this.emit(\"roomUpdate\", [packet]);\n          break;\n        case \"SetReply\":\n          this.emit(\"setReply\", [packet]);\n          break;\n      }\n      this.emit(\"receivedPacket\", [packet]);\n    }\n  }\n  #findWebSocket() {\n    let IsomorphousWebSocket = null;\n    if (typeof window !== \"undefined\") {\n      IsomorphousWebSocket = window.WebSocket || window.MozWebSocket;\n    } else if (typeof global !== \"undefined\") {\n      IsomorphousWebSocket = global.WebSocket || global.MozWebSocket;\n    } else if (typeof self !== \"undefined\") {\n      IsomorphousWebSocket = self.WebSocket || self.MozWebSocket;\n    } else if (typeof WebSocket !== \"undefined\") {\n      IsomorphousWebSocket = WebSocket;\n    } else if (typeof MozWebSocket !== \"undefined\") {\n      IsomorphousWebSocket = MozWebSocket;\n    }\n    return IsomorphousWebSocket;\n  }\n}\n\n// src/classes/Client.ts\nclass Client {\n  #authenticated = false;\n  #arguments = defaultConnectionOptions;\n  #name = \"\";\n  #game = \"\";\n  socket = new SocketManager;\n  package = new DataPackageManager(this);\n  storage = new DataStorageManager(this);\n  room = new RoomStateManager(this);\n  players = new PlayersManager(this);\n  items = new ItemsManager(this);\n  messages = new MessageManager(this);\n  deathLink = new DeathLinkManager(this);\n  options;\n  get authenticated() {\n    return this.socket.connected && this.#authenticated;\n  }\n  get name() {\n    return this.#name;\n  }\n  get game() {\n    return this.#game;\n  }\n  get arguments() {\n    return { ...this.#arguments };\n  }\n  constructor(options) {\n    if (options) {\n      this.options = { ...defaultClientOptions, ...options };\n    } else {\n      this.options = { ...defaultClientOptions };\n    }\n    this.socket.on(\"disconnected\", () => {\n      this.#authenticated = false;\n    }).on(\"sentPackets\", (packets2) => {\n      for (const packet of packets2) {\n        if (packet.cmd === \"ConnectUpdate\") {\n          this.#arguments.tags = packet.tags;\n          this.#arguments.items = packet.items_handling;\n        }\n      }\n    });\n  }\n  async login(url, name, game = \"\", options) {\n    if (name === \"\") {\n      throw new ArgumentError(\"Provided slot name cannot be blank.\", \"name\", name);\n    }\n    if (options) {\n      this.#arguments = { ...defaultConnectionOptions, ...options };\n    } else {\n      this.#arguments = { ...defaultConnectionOptions };\n    }\n    const tags = new Set(this.arguments.tags);\n    if (!game && !tags.has(\"HintGame\") && !tags.has(\"Tracker\") && !tags.has(\"TextOnly\")) {\n      tags.add(\"TextOnly\");\n    }\n    this.#arguments.tags = Array.from(tags);\n    const request = {\n      cmd: \"Connect\",\n      name,\n      game,\n      password: this.arguments.password,\n      slot_data: this.arguments.slotData,\n      items_handling: this.arguments.items,\n      uuid: this.arguments.uuid,\n      tags: this.arguments.tags,\n      version: { ...this.arguments.version, class: \"Version\" }\n    };\n    await this.socket.connect(url);\n    if (this.options.autoFetchDataPackage) {\n      await this.package.fetchPackage();\n    }\n    return new Promise((resolve, reject) => {\n      const timeout = setTimeout(() => reject(new SocketError(\"Server failed to respond in time.\")), this.options.timeout);\n      const connectedHandler = (packet) => {\n        this.#authenticated = true;\n        this.#game = packet.slot_info[packet.slot].game;\n        this.#name = packet.slot_info[packet.slot].name;\n        this.socket.off(\"connected\", connectedHandler).off(\"connectionRefused\", refusedHandler);\n        clearTimeout(timeout);\n        resolve(packet.slot_data);\n      };\n      const refusedHandler = (packet) => {\n        this.socket.off(\"connected\", connectedHandler).off(\"connectionRefused\", refusedHandler);\n        clearTimeout(timeout);\n        reject(new LoginError(`Connection was refused by the server. Reason(s): [${packet.errors?.join(\", \")}`, packet.errors ?? []));\n      };\n      this.socket.on(\"connected\", connectedHandler.bind(this)).on(\"connectionRefused\", refusedHandler.bind(this)).send(request);\n    });\n  }\n  updateStatus(status) {\n    if (!this.authenticated) {\n      throw new UnauthenticatedError(\"Cannot update status while not connected and authenticated.\");\n    }\n    this.socket.send({ cmd: \"StatusUpdate\", status });\n  }\n  goal() {\n    this.updateStatus(clientStatuses.goal);\n  }\n  updateTags(tags) {\n    if (!this.authenticated) {\n      throw new UnauthenticatedError(\"Cannot update tags while not connected and authenticated.\");\n    }\n    this.socket.send({ cmd: \"ConnectUpdate\", tags, items_handling: this.arguments.items });\n  }\n  updateItemsHandling(items) {\n    if (!this.authenticated) {\n      throw new UnauthenticatedError(\"Cannot update tags while not connected and authenticated.\");\n    }\n    this.socket.send({ cmd: \"ConnectUpdate\", tags: this.arguments.tags, items_handling: items });\n  }\n  check(...locations) {\n    if (!this.authenticated) {\n      throw new UnauthenticatedError(\"Cannot check locations while not connected and authenticated.\");\n    }\n    locations = locations.filter((location) => this.room.missingLocations.includes(location));\n    this.socket.send({ cmd: \"LocationChecks\", locations });\n  }\n  async scout(locations, createHint = 0) {\n    if (!this.authenticated) {\n      throw new UnauthenticatedError(\"Cannot scout locations while not connected and authenticated.\");\n    }\n    locations = locations.filter((location) => this.room.allLocations.includes(location));\n    const [response] = await this.socket.send({ cmd: \"LocationScouts\", create_as_hint: createHint, locations }).wait(\"locationInfo\", (packet) => {\n      return packet.locations.map((location) => location.location).toSorted().join(\",\") === locations.toSorted().join(\",\");\n    });\n    return response.locations.map((item) => new Item(this, item, this.players.self, this.players.findPlayer(item.player)));\n  }\n  bounce(targets, data) {\n    if (!this.authenticated) {\n      throw new UnauthenticatedError(\"Cannot send bounces while not connected and authenticated.\");\n    }\n    this.socket.send({\n      cmd: \"Bounce\",\n      data,\n      games: targets.games ?? [],\n      slots: targets.slots ?? [],\n      tags: targets.tags ?? []\n    });\n  }\n}\nexport {\n  targetVersion,\n  slotTypes,\n  permissions,\n  libraryVersion,\n  itemsHandlingFlags,\n  itemClassifications,\n  defaultConnectionOptions,\n  defaultClientOptions,\n  clientStatuses,\n  UnauthenticatedError,\n  TextualMessageNode,\n  SocketManager,\n  SocketError,\n  RoomStateManager,\n  PlayersManager,\n  PlayerMessageNode,\n  Player,\n  PackageMetadata,\n  MessageManager,\n  LoginError,\n  LocationMessageNode,\n  ItemsManager,\n  ItemMessageNode,\n  Item,\n  IntermediateDataOperation,\n  Hint,\n  EventBasedManager,\n  DeathLinkManager,\n  DataStorageManager,\n  DataPackageManager,\n  ColorMessageNode,\n  Client,\n  BaseMessageNode,\n  ArgumentError,\n  exports_api as API\n};\n"],"names":["$parcel$global","globalThis","$485214a05f39272f$var$__defProp","Object","defineProperty","$485214a05f39272f$var$__export","target","all","name","get","enumerable","configurable","set","newValue","slotTypes","$485214a05f39272f$export$f1b7dd9a86d77942","permissions","$485214a05f39272f$export$430c45605c9594b5","itemsHandlingFlags","$485214a05f39272f$export$a726a48d5c185bc2","itemClassifications","$485214a05f39272f$export$91ef0454ae4e0e41","clientStatuses","$485214a05f39272f$export$9e353c7f2c9c21cf","disconnected","connected","ready","playing","goal","progression","useful","trap","none","minimal","others","own","starting","disabled","enabled","auto","autoEnabled","spectator","player","group","$485214a05f39272f$export$501b6aacf912d8b4","Error","$485214a05f39272f$export$46daa3843b07109f","argumentName","value","constructor","message","structuredClone","$485214a05f39272f$export$5e64a9683d127ef6","errors","$485214a05f39272f$export$c7e58b539e03d4b2","$485214a05f39272f$export$2829036b0afabc33","timeout","autoFetchDataPackage","maximumMessages","debugLogVersions","$485214a05f39272f$var$uuid","uuid2","i","push","Math","floor","random","map","d","toString","join","$485214a05f39272f$export$a86d4a91d90ac80a","password","uuid","tags","version","major","minor","build","items","slotData","$485214a05f39272f$export$6d08773d2e66f8f2","client","item","sender","receiver","package","lookupItemName","game","id","locationName","lookupLocationName","location","locationId","locationGame","flags","filler","$485214a05f39272f$export$7048d7ffb55b2728","checksum","itemTable","locationTable","reverseItemTable","reverseLocationTable","_package","freeze","item_name_to_id","location_name_to_id","fromEntries","entries","k","v","exportPackage","$485214a05f39272f$export$ff8e86dda688a0db","Map","Set","socket","on","packet","clear","datapackage_checksums","add","findPackage","fetchPackage","games","update","length","Array","from","data","filter","has","request","cmd","response","send","wait","importPackage","dataPackage","reduce","pkg","fallback","fallbackName","gamePackage","undefined","Nothing","Server","$485214a05f39272f$export$38053fa6a29fe3b9","key","_default","replace","operation","default","multiply","power","remainder","ceiling","max","min","and","or","xor","leftShift","rightShift","remove","pop","commit","awaitReply","_uuid","operations","want_reply","$485214a05f39272f$export$c816588507b7fc70","callbacks","forEach","callback","original_value","options","navigator","userAgent","prepare","store","fetch","input","monitor","keys","monitorKeys","exists","notify","startsWith","TypeError","fetchItemNameGroups","fetchLocationNameGroups","$485214a05f39272f$var$ArchipelagoEventEmitter","addEventListener","event","once","removeEventListener","cb","dispatchEvent","$485214a05f39272f$export$34388b49bc564ad4","listener","off","clearPredicate","Promise","resolve","args","emit","detail","$485214a05f39272f$export$3f6f20ee00545853","Number","MIN_SAFE_INTEGER","includes","time","source","deathLink","cause","arguments","enableDeathLink","updateTags","disableDeathLink","tag","sendDeathLink","authenticated","ceil","Date","now","bounce","$485214a05f39272f$export$8d13340382210b65","hint","finding_player","item_flags","players","findPlayer","receiving_player","found","entrance","$485214a05f39272f$export$d686f2307acf8ad5","index","count","networkItem","shift","self","slice","storage","team","slot","bind","then","hints","catch","error","received","_","$485214a05f39272f$export$eacd9558ec8eca0","part","text","$485214a05f39272f$export$65034a9c3736e136","type","$485214a05f39272f$export$c4676bbae52d5c0d","parseInt","$485214a05f39272f$export$ad3e4831488d3e88","color","$485214a05f39272f$export$e3a1ab2afc9bead2","$485214a05f39272f$export$a52e59968bfe501d","teams","find","p","alias","$485214a05f39272f$export$6c01fd78ac7b8c50","log","say","trim","nodes","itemPacket","receiving","node","splice","countdown","$485214a05f39272f$export$2616165974278734","members","group_members","groups","slots","fetchStatus","fetchSlotData","fetchHints","$485214a05f39272f$export$c40649f044cf5bb0","slot_info","oldAlias","$485214a05f39272f$export$b2368da4b04728a4","release","collect","remaining","serverVersion","generatorVersion","seedName","hintPoints","hintCost","hintCostPercentage","allLocations","locationCheckPoints","missingLocations","sort","checkedLocations","race","generator_version","seed_name","hint_cost","location_check_points","missing_locations","checked_locations","hint_points","oc","op","old","$485214a05f39272f$export$c91428cbd4f5850d","url","packets2","JSON","stringify","connect","disconnect","pattern","test","URL","port","protocol","reject","IsomorphousWebSocket","onmessage","onclose","onerror","onopen","close","parse","window","WebSocket","MozWebSocket","$485214a05f39272f$export$1f2bb630327ac4b6","room","messages","items_handling","login","slot_data","class","setTimeout","connectedHandler","refusedHandler","clearTimeout","updateStatus","status","updateItemsHandling","check","locations","scout","createHint","create_as_hint","toSorted","targets","$23ee32a046addb8a$var$client","$23ee32a046addb8a$var$form","document","querySelector","$23ee32a046addb8a$var$gpio","getP8Gpio","$23ee32a046addb8a$var$loc_flags","$23ee32a046addb8a$var$item_flags","$23ee32a046addb8a$var$checked_locations","$23ee32a046addb8a$var$options","$23ee32a046addb8a$var$thisPlayer","$23ee32a046addb8a$var$players","$23ee32a046addb8a$var$DeathLink_Amnesty","$23ee32a046addb8a$var$message_pico8","charCodeAt","console","slotNumber","slotPlayer","optionsByte","res","DeathLink","DeathLink_Amnesty","MedalHunt","ExtraCheckpoint","ExtraChecks","startingIndex","flag","$23ee32a046addb8a$var$base_id","toLowerCase","byte","item_bit","values","itemName","preventDefault","hostname","statusWrapper","failed","connecting","classList","toggle","loginForm","contains","subscribe","newIndices","loc"],"version":3,"file":"client.js.map"}