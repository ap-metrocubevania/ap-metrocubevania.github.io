(()=>{var e=globalThis,t=Object.defineProperty;((e,s)=>{for(var i in s)t(e,i,{get:s[i],enumerable:!0,configurable:!0,set:e=>s[i]=()=>e})})({},{slotTypes:()=>o,permissions:()=>a,itemsHandlingFlags:()=>n,itemClassifications:()=>i,clientStatuses:()=>s});var s={disconnected:0,connected:5,ready:10,playing:20,goal:30},i={progression:1,useful:2,trap:4,none:0},n={minimal:0,others:1,own:2,starting:4,all:7},a={disabled:0,enabled:1,goal:2,auto:6,autoEnabled:7},o={spectator:0,player:1,group:2};class r extends Error{}class c extends Error{argumentName;value;constructor(e,t,s){super(e),this.argumentName=t,this.value=structuredClone(s)}}class l extends Error{errors=[];constructor(e,t){super(e),this.errors=t}}class h extends Error{}var d={timeout:1e4,autoFetchDataPackage:!0,maximumMessages:1e3,debugLogVersions:!0};function u(){let e=[];for(let t=0;t<36;t++)e.push(Math.floor(16*Math.random()));return e[14]=4,e[19]=e[19]&=-5,e[19]=e[19]|=8,e[8]=e[13]=e[18]=e[23]="-",e.map(e=>e.toString(16)).join("")}var m={password:"",uuid:u(),tags:[],version:{major:0,minor:5,build:1},items:n.all,slotData:!0};class p{#e;#t;#s;#i;constructor(e,t,s,i){this.#e=e,this.#t=t,this.#s=s,this.#i=i}toString(){return this.name}get receiver(){return this.#i}get sender(){return this.#s}get name(){return this.#e.package.lookupItemName(this.game,this.#t.item,!0)}get id(){return this.#t.item}get locationName(){return this.#e.package.lookupLocationName(this.sender.game,this.#t.location,!0)}get locationId(){return this.#t.location}get locationGame(){return this.sender.game}get game(){return this.receiver.game}get progression(){return(this.flags&i.progression)===i.progression}get useful(){return(this.flags&i.useful)===i.useful}get trap(){return(this.flags&i.trap)===i.trap}get filler(){return this.flags===i.none}get flags(){return this.#t.flags}}class g{game;checksum;itemTable;locationTable;reverseItemTable;reverseLocationTable;constructor(e,t){this.game=e,this.checksum=t.checksum,this.itemTable=Object.freeze(t.item_name_to_id),this.locationTable=Object.freeze(t.location_name_to_id),this.reverseItemTable=Object.freeze(Object.fromEntries(Object.entries(this.itemTable).map(([e,t])=>[t,e]))),this.reverseLocationTable=Object.freeze(Object.fromEntries(Object.entries(this.locationTable).map(([e,t])=>[t,e])))}exportPackage(){return{checksum:this.checksum,item_name_to_id:{...this.itemTable},location_name_to_id:{...this.locationTable}}}}class f{#e;#n=new Map;#a=new Map;#o=new Set;constructor(e){this.#e=e,this.#e.socket.on("roomInfo",e=>{for(let t in this.#n.clear(),this.#a.clear(),this.#o.clear(),this.#n.set("Archipelago",this.#r()),e.datapackage_checksums)this.#a.set(t,e.datapackage_checksums[t]),this.#o.add(t)})}findPackage(e){return this.#n.get(e)??null}async fetchPackage(e=[],t=!0){0===e.length&&(e=Array.from(this.#o));let s={games:{}};for(let t of e=e.filter(e=>!!this.#o.has(e)&&this.#n.get(e)?.checksum!==this.#a.get(e))){let e={cmd:"GetDataPackage",games:[t]},[i]=await this.#e.socket.send(e).wait("dataPackage");s.games[t]=i.data.games[t]}return t&&this.importPackage(s),s}importPackage(e){for(let t in e.games)this.#n.set(t,new g(t,e.games[t])),this.#a.set(t,e.games[t].checksum)}exportPackage(){return{games:this.#n.entries().reduce((e,[t,s])=>(e[t]=s.exportPackage(),e),{})}}lookupItemName(e,t,s=!0){let i=`Unknown Item ${t}`,n=this.findPackage(e);if(!n)return s?i:void 0;let a=n.reverseItemTable[t];return s&&void 0===a?i:a}lookupLocationName(e,t,s=!0){let i=`Unknown Location ${t}`,n=this.findPackage(e);if(!n)return s?i:void 0;let a=n.reverseLocationTable[t];return s&&void 0===a?i:a}#r(){return new g("Archipelago",{checksum:"ac9141e9ad0318df2fa27da5f20c50a842afeecb",item_name_to_id:{Nothing:-1},location_name_to_id:{"Cheat Console":-1,Server:-2}})}}class k{#e;#c=[];#l;#h;constructor(e,t,s){this.#e=e,this.#l=t,this.#h=s}replace(e){return this.#c.push({operation:"replace",value:e}),this}default(){return this.#c.push({operation:"default",value:null}),this}add(e){return this.#c.push({operation:"add",value:e}),this}multiply(e){return this.#c.push({operation:"mul",value:e}),this}power(e){return this.#c.push({operation:"pow",value:e}),this}remainder(e){return this.#c.push({operation:"mod",value:e}),this}floor(){return this.#c.push({operation:"floor",value:null}),this}ceiling(){return this.#c.push({operation:"ceil",value:null}),this}max(e){return this.#c.push({operation:"max",value:e}),this}min(e){return this.#c.push({operation:"min",value:e}),this}and(e){return this.#c.push({operation:"and",value:e}),this}or(e){return this.#c.push({operation:"or",value:e}),this}xor(e){return this.#c.push({operation:"xor",value:e}),this}leftShift(e){return this.#c.push({operation:"left_shift",value:e}),this}rightShift(e){return this.#c.push({operation:"right_shift",value:e}),this}remove(e){return this.#c.push({operation:"remove",value:e}),this}pop(e){return this.#c.push({operation:"pop",value:e}),this}update(e){return this.#c.push({operation:"update",value:e}),this}async commit(e=!1){let t=u(),s={cmd:"Set",default:this.#h,key:this.#l,operations:this.#c,want_reply:e,uuid:t};if(this.#e.socket.send(s),!e)return;let[i]=await this.#e.socket.wait("setReply",e=>e.uuid===t);return i.value}}class y{#e;#d={};#u={};constructor(e){this.#e=e,this.#e.socket.on("disconnected",()=>{this.#d={},this.#u={}}).on("setReply",e=>{this.#d[e.key]=e.value;let t=this.#u[e.key];t&&t.forEach(t=>t(e.key,e.value,e.original_value))}).on("connected",()=>{if(this.#e.options.debugLogVersions){let e=`${this.#e.game}:2.0.3:${navigator?.userAgent}`;this.prepare("archipelago.js__runtimes",{}).default().update({[e]:!0}).commit(!1)}})}get store(){return structuredClone(this.#d)}async fetch(e,t=!1){let s="string"==typeof e?[e]:e;if(t){let e=s.filter(e=>void 0===this.#d[e]);e.length>0&&this.#e.socket.send({cmd:"SetNotify",keys:e})}let i={};if((s=s.filter(e=>{let t=structuredClone(this.#d[e]),s=void 0!==t;return s&&(i[e]=t),!s})).length>0){let e=await this.#m(s);i={...i,...e}}return t&&(this.#d={...this.#d,...i}),"string"==typeof e?i[e]:i}async notify(e,t){return e.forEach(e=>{this.#u[e]??=[],this.#u[e].push(t)}),this.fetch(e,!0)}prepare(e,t){if(e.startsWith("_read_"))throw TypeError("Cannot manipulate read only keys.");return new k(this.#e,e,t)}async fetchItemNameGroups(e){return await this.fetch([`_read_item_name_groups_${e}`],!0)}async fetchLocationNameGroups(e){return await this.fetch([`_read_location_name_groups_${e}`],!0)}async #m(e){let t=u(),[s]=await this.#e.socket.send({cmd:"Get",keys:e,uuid:t}).wait("retrieved",e=>e.uuid===t);return s.keys}}class w{#p={};addEventListener(e,t,s=!1){this.#p[e]??=[],this.#p[e].push([t,s])}removeEventListener(e,t){let s=this.#p[e];s&&s.length>0&&(this.#p[e]=s.filter(([e])=>e!==t))}dispatchEvent(e,t){for(let[s,i]of this.#p[e]??[])s(...t),i&&this.removeEventListener(e,s)}}class v{#p=new w;on(e,t){return this.#p.addEventListener(e,t),this}off(e,t){return this.#p.removeEventListener(e,t),this}async wait(e,t=()=>!0){return new Promise(s=>{let i=(...n)=>{t(...n)&&(this.#p.removeEventListener(e,i),s(n))};this.#p.addEventListener(e,i)})}emit(e,t){this.#p.dispatchEvent(e,t)}}class b extends v{#e;#g=Number.MIN_SAFE_INTEGER;constructor(e){super(),this.#e=e,this.#e.socket.on("bounced",e=>{if(e.tags?.includes("DeathLink")&&e.data.time&&e.data.source){let t=e.data;t.time!==this.#g&&(this.#g=t.time,this.emit("deathReceived",[t.source,1e3*t.time,t.cause]))}})}get enabled(){return this.#e.arguments.tags.includes("DeathLink")}enableDeathLink(){this.#e.arguments.tags.includes("DeathLink")||this.#e.updateTags([...this.#e.arguments.tags,"DeathLink"])}disableDeathLink(){this.#e.arguments.tags.includes("DeathLink")&&this.#e.updateTags(this.#e.arguments.tags.filter(e=>"DeathLink"!==e))}sendDeathLink(e,t){if(!this.#e.authenticated)throw new h("Cannot send death links before connecting and authenticating.");if(!this.enabled)return;this.#g=Math.ceil(Date.now()/1e3);let s={source:e,cause:t,time:this.#g};this.#e.bounce({tags:["DeathLink"]},s)}}class _{#e;#f;#t;constructor(e,t){this.#e=e,this.#f=t,this.#t=new p(this.#e,{item:t.item,location:t.location,player:t.finding_player,flags:t.item_flags},this.#e.players.findPlayer(t.finding_player),this.#e.players.findPlayer(t.receiving_player))}get item(){return this.#t}get found(){return this.#f.found}get entrance(){return this.#f.entrance||"Vanilla"}}class L extends v{#e;#k=[];#y=[];constructor(e){super(),this.#e=e,this.#e.socket.on("receivedItems",e=>{let t=e.index,s=e.items.length,i=[...e.items];for(;i.length>0;){let e=i.shift();this.#k[t++]=new p(this.#e,e,this.#e.players.findPlayer(e.player),this.#e.players.self)}this.emit("itemsReceived",[this.#k.slice(e.index,e.index+s),e.index])}).on("connected",()=>{this.#y=[],this.#k=[],this.#e.storage.notify([`_read_hints_${this.#e.players.self.team}_${this.#e.players.self.slot}`],this.#w.bind(this)).then(e=>{let t=e[`_read_hints_${this.#e.players.self.team}_${this.#e.players.self.slot}`];this.#y=t.map(e=>new _(this.#e,e)),this.emit("hintsInitialized",[this.#y])}).catch(e=>{throw e})})}get received(){return[...this.#k]}get hints(){return[...this.#y]}get count(){return this.#k.length}#w(e,t){for(let e=0;e<t.length;e++)void 0===this.#y[e]?(this.#y[e]=new _(this.#e,t[e]),this.emit("hintReceived",[this.#y[e]])):this.#y[e].found!==t[e].found&&(this.#y[e]=new _(this.#e,t[e]),this.emit("hintFound",[this.#y[e]]))}}class P{client;part;constructor(e,t){this.client=e,this.part=t}toString(){return this.text}}class C extends P{part;type="item";item;constructor(e,t,s,i){super(e,t);let n=e.players.findPlayer(t.player,i.team);this.part=t,this.item=new p(e,s,n,i)}get text(){return this.item.name}}class S extends P{#v;part;type="location";id;constructor(e,t){super(e,t);let s=e.players.findPlayer(t.player),i=e.package.findPackage(s.game);this.part=t,"location_name"===t.type?(this.#v=t.text,this.id=i.locationTable[t.text]):(this.id=parseInt(t.text),this.#v=e.package.lookupLocationName(s.game,this.id,!0))}get text(){return this.#v}}class x extends P{part;type="color";color;constructor(e,t){super(e,t),this.part=t,this.color=t.color}get text(){return this.part.text}}class D extends P{part;type;constructor(e,t){super(e,t),this.part=t,"entrance_name"===this.part.type?this.type="entrance":this.type="text"}get text(){return this.part.text}}class E extends P{part;type="player";player;constructor(e,t){if(super(e,t),this.part=t,"player_id"===t.type)this.player=e.players.findPlayer(parseInt(t.text));else{let s=e.players.teams[e.players.self.team].find(e=>e.name===t.text);if(!s)throw Error(`Cannot find player under name: ${t.text}`);this.player=s}}get text(){return this.player.alias}}class I extends v{#e;#b=[];get log(){return[...this.#b]}constructor(e){super(),this.#e=e,this.#e.socket.on("printJSON",this.#_.bind(this))}async say(e){if(!this.#e.authenticated)throw new h("Cannot send chat messages without being authenticated.");let t={cmd:"Say",text:e=e.trim()};this.#e.socket.send(t),await this.wait("chat",t=>t===e)}#_(e){let t=[];for(let s of e.data)switch(s.type){case"item_id":case"item_name":{let i;i="ItemCheat"===e.type?this.#e.players.findPlayer(e.receiving,e.team):this.#e.players.findPlayer(e.receiving),t.push(new C(this.#e,s,e.item,i));break}case"location_id":case"location_name":t.push(new S(this.#e,s));break;case"color":t.push(new x(this.#e,s));break;case"player_id":case"player_name":t.push(new E(this.#e,s));break;default:t.push(new D(this.#e,s))}let s=t.map(e=>e.text).join();switch(this.#e.options.maximumMessages>=1&&(this.log.push({text:s,nodes:t}),this.log.splice(0,this.log.length-this.#e.options.maximumMessages)),e.type){case"ItemSend":{let i=this.#e.players.findPlayer(e.item.player),n=this.#e.players.findPlayer(e.receiving),a=new p(this.#e,e.item,i,n);this.emit("itemSent",[s,a,t]);break}case"ItemCheat":{let i=this.#e.players.findPlayer(e.item.player,e.team),n=this.#e.players.findPlayer(e.receiving,e.team),a=new p(this.#e,e.item,i,n);this.emit("itemCheated",[s,a,t]);break}case"Hint":{let i=this.#e.players.findPlayer(e.item.player),n=this.#e.players.findPlayer(e.receiving),a=new p(this.#e,e.item,i,n);this.emit("itemHinted",[s,a,e.found,t]);break}case"Join":{let i=this.#e.players.findPlayer(e.slot,e.team);this.emit("connected",[s,i,e.tags,t]);break}case"Part":{let i=this.#e.players.findPlayer(e.slot,e.team);this.emit("disconnected",[s,i,t]);break}case"Chat":{let s=this.#e.players.findPlayer(e.slot,e.team);this.emit("chat",[e.message,s,t]);break}case"ServerChat":this.emit("serverChat",[e.message,t]);break;case"TagsChanged":{let i=this.#e.players.findPlayer(e.slot,e.team);this.emit("tagsUpdated",[s,i,e.tags,t]);break}case"Tutorial":this.emit("tutorial",[s,t]);break;case"CommandResult":this.emit("userCommand",[s,t]);break;case"AdminCommandResult":this.emit("adminCommand",[s,t]);break;case"Goal":{let i=this.#e.players.findPlayer(e.slot,e.team);this.emit("goaled",[s,i,t]);break}case"Release":{let i=this.#e.players.findPlayer(e.slot,e.team);this.emit("released",[s,i,t]);break}case"Collect":{let i=this.#e.players.findPlayer(e.slot,e.team);this.emit("collected",[s,i,t]);break}case"Countdown":this.emit("countdown",[s,e.countdown,t])}this.emit("message",[s,t])}}class ${#e;#L;constructor(e,t){this.#e=e,this.#L=t}toString(){return this.alias}get name(){return this.#L.name}get alias(){return this.#L.alias}get game(){return 0===this.slot?"Archipelago":this.#P.game}get type(){return 0===this.slot?o.spectator:this.#P.type}get team(){return this.#L.team}get slot(){return this.#L.slot}get members(){return this.type!==o.group?[]:this.#e.players.teams[this.team].filter(e=>this.#P.group_members.includes(e.slot))}get groups(){return 0===this.slot?[]:this.#e.players.teams[this.team].filter(e=>0!==e.slot&&this.#e.players.slots[e.slot].group_members.includes(this.slot))}async fetchStatus(){return this.type===o.group?s.goal:await this.#e.storage.fetch(`_read_client_status_${this.team}_${this.slot}`)??0}async fetchSlotData(){return await this.#e.storage.fetch(`_read_slot_data_${this.slot}`)}async fetchHints(){return(await this.#e.storage.fetch(`_read_hints_${this.team}_${this.slot}`)).map(e=>new _(this.#e,e))}get #P(){return this.#e.players.slots[this.slot]}}class T extends v{#e;#C=[];#S={};#x=0;#D=0;constructor(e){super(),this.#e=e,this.#e.socket.on("connected",e=>{for(let t of(this.#S=Object.freeze(e.slot_info),this.#C=[],this.#x=e.slot,this.#D=e.team,e.players))this.#C[t.team]??=[{team:t.team,slot:0,name:"Archipelago",alias:"Archipelago"}],this.#C[t.team][t.slot]=t}).on("roomUpdate",e=>{if(e.players){for(let t of e.players)if(this.#C[t.team][t.slot].alias!==t.alias){let e=this.#C[t.team][t.slot].alias;this.#C[t.team][t.slot]=t,this.emit("aliasUpdated",[new $(this.#e,t),e,t.alias])}}})}get self(){if(0===this.#x)throw Error("Cannot lookup own player object when client has never connected to a server.");return new $(this.#e,this.#C[this.#D][this.#x])}get slots(){return this.#S}get teams(){let e=[];for(let t=0;t<this.#C.length;t++){e[t]=[];for(let s=0;s<this.#C[t].length;s++)e[t].push(new $(this.#e,this.#C[t][s]))}return e}findPlayer(e,t){if(void 0===t&&(t=this.#e.players.self.team),this.#C[t])return new $(this.#e,this.#C[t][e])}}class j extends v{#e;#E={major:-1,minor:-1,build:-1};#I={major:-1,minor:-1,build:-1};#o=[];#$=[];#T="";#j=!1;#M=0;#U=0;#R=0;#A={release:0,collect:0,remaining:0};#N=[];#O=[];#W=!1;get serverVersion(){return{...this.#E}}get generatorVersion(){return{...this.#I}}get games(){return[...this.#o]}get tags(){return[...this.#$]}get seedName(){return this.#T}get password(){return this.#j}get permissions(){return{...this.#A}}get hintPoints(){return this.#M}get hintCost(){return this.hintCostPercentage>0?Math.max(1,Math.floor(this.hintCostPercentage*this.allLocations.length*.01)):0}get hintCostPercentage(){return this.#U}get locationCheckPoints(){return this.#R}get missingLocations(){return[...this.#N].sort()}get checkedLocations(){return[...this.#O].sort()}get allLocations(){return[...this.#N,...this.#O].sort()}get race(){return this.#W}constructor(e){super(),this.#e=e,this.#e.socket.on("roomInfo",e=>{this.#E={major:e.version.major,minor:e.version.minor,build:e.version.build},this.#I={major:e.generator_version.major,minor:e.generator_version.minor,build:e.generator_version.build},this.#$=e.tags,this.#o=e.games,this.#T=e.seed_name,this.#j=e.password,this.#A=e.permissions,this.#U=e.hint_cost,this.#R=e.location_check_points}).on("connected",e=>{this.#N=e.missing_locations,this.#O=e.checked_locations,this.emit("locationsChecked",[this.checkedLocations]),this.#M=e.hint_points,this.emit("hintPointsUpdated",[0,e.hint_points])}).on("roomUpdate",e=>{if(void 0!==e.hint_cost){let[t,s]=[this.hintCost,this.hintCostPercentage];this.#U=e.hint_cost,this.emit("hintCostUpdated",[t,this.hintCost,s,this.hintCostPercentage])}if(void 0!==e.hint_points){let t=this.#M;this.#M=e.hint_points,this.emit("hintPointsUpdated",[t,this.hintPoints])}if(void 0!==e.location_check_points){let t=this.#R;this.#R=e.location_check_points,this.emit("locationCheckPointsUpdated",[t,this.locationCheckPoints])}if(void 0!==e.password&&(this.#j=e.password,this.emit("passwordUpdated",[this.password])),void 0!==e.permissions){let t=this.#A;this.#A=e.permissions,this.emit("permissionsUpdated",[t,this.permissions])}void 0!==e.checked_locations&&(this.#O=[...this.#O,...e.checked_locations],this.#N=this.missingLocations.filter(t=>!e.checked_locations?.includes(t)),this.emit("locationsChecked",[e.checked_locations]))})}}class M extends v{#z=null;#V=!1;constructor(){super()}get connected(){return this.#V}get url(){return this.#z?.url??""}send(...e){if(this.#z)return this.#z.send(JSON.stringify(e)),this.emit("sentPackets",[e]),this;throw new r("Unable to send packets to the server; not connected to a server.")}async connect(e){if(this.disconnect(),"string"==typeof e){if(!/^([a-zA-Z]+:)\/\/[A-Za-z0-9_.~\-:]+/i.test(e))try{return await this.connect(new URL(`wss://${e}`))}catch{return await this.connect(new URL(`ws://${e}`))}e=new URL(e)}if(e.port=e.port||"38281","wss:"!==e.protocol&&"ws:"!==e.protocol)throw TypeError("Unexpected protocol. Archipelago only supports the ws:// and wss:// protocols.");try{return new Promise((t,s)=>{let i=this.#q();if(null===i)throw new r("Unable to find a suitable WebSocket API in the current runtime.");this.#z=new i(e),this.#z.onmessage=this.#F.bind(this),this.#z.onclose=()=>{this.disconnect(),s(new r("Failed to connect to Archipelago server."))},this.#z.onerror=()=>{this.disconnect(),s(new r("Failed to connect to Archipelago server."))},this.#z.onopen=()=>{this.wait("roomInfo").then(([e])=>{if(this.#V=!0,this.#z){this.#z.onclose=this.disconnect.bind(this),this.#z.onerror=this.disconnect.bind(this),t(e);return}this.disconnect(),s(new r("Failed to connect to Archipelago server."))}).catch(e=>{throw e})}})}catch(e){throw this.disconnect(),e}}disconnect(){this.connected&&(this.#V=!1,this.#z?.close(),this.#z=null,this.emit("disconnected",[]))}#F(e){for(let t of JSON.parse(e.data)){switch(t.cmd){case"ConnectionRefused":this.emit("connectionRefused",[t]);break;case"Bounced":this.emit("bounced",[t,t.data]);break;case"Connected":this.emit("connected",[t]);break;case"DataPackage":this.emit("dataPackage",[t]);break;case"InvalidPacket":this.emit("invalidPacket",[t]);break;case"LocationInfo":this.emit("locationInfo",[t]);break;case"PrintJSON":this.emit("printJSON",[t]);break;case"ReceivedItems":this.emit("receivedItems",[t]);break;case"Retrieved":this.emit("retrieved",[t]);break;case"RoomInfo":this.emit("roomInfo",[t]);break;case"RoomUpdate":this.emit("roomUpdate",[t]);break;case"SetReply":this.emit("setReply",[t])}this.emit("receivedPacket",[t])}}#q(){let t=null;return"undefined"!=typeof window?t=window.WebSocket||window.MozWebSocket:void 0!==e?t=e.WebSocket||e.MozWebSocket:"undefined"!=typeof self?t=self.WebSocket||self.MozWebSocket:"undefined"!=typeof WebSocket?t=WebSocket:"undefined"!=typeof MozWebSocket&&(t=MozWebSocket),t}}class U{#G=!1;#H=m;#v="";#J="";socket=new M;package=new f(this);storage=new y(this);room=new j(this);players=new T(this);items=new L(this);messages=new I(this);deathLink=new b(this);options;get authenticated(){return this.socket.connected&&this.#G}get name(){return this.#v}get game(){return this.#J}get arguments(){return{...this.#H}}constructor(e){e?this.options={...d,...e}:this.options={...d},this.socket.on("disconnected",()=>{this.#G=!1}).on("sentPackets",e=>{for(let t of e)"ConnectUpdate"===t.cmd&&(this.#H.tags=t.tags,this.#H.items=t.items_handling)})}async login(e,t,s="",i){if(""===t)throw new c("Provided slot name cannot be blank.","name",t);i?this.#H={...m,...i}:this.#H={...m};let n=new Set(this.arguments.tags);s||n.has("HintGame")||n.has("Tracker")||n.has("TextOnly")||n.add("TextOnly"),this.#H.tags=Array.from(n);let a={cmd:"Connect",name:t,game:s,password:this.arguments.password,slot_data:this.arguments.slotData,items_handling:this.arguments.items,uuid:this.arguments.uuid,tags:this.arguments.tags,version:{...this.arguments.version,class:"Version"}};return await this.socket.connect(e),this.options.autoFetchDataPackage&&await this.package.fetchPackage(),new Promise((e,t)=>{let s=setTimeout(()=>t(new r("Server failed to respond in time.")),this.options.timeout),i=t=>{this.#G=!0,this.#J=t.slot_info[t.slot].game,this.#v=t.slot_info[t.slot].name,this.socket.off("connected",i).off("connectionRefused",n),clearTimeout(s),e(t.slot_data)},n=e=>{this.socket.off("connected",i).off("connectionRefused",n),clearTimeout(s),t(new l(`Connection was refused by the server. Reason(s): [${e.errors?.join(", ")}`,e.errors??[]))};this.socket.on("connected",i.bind(this)).on("connectionRefused",n.bind(this)).send(a)})}updateStatus(e){if(!this.authenticated)throw new h("Cannot update status while not connected and authenticated.");this.socket.send({cmd:"StatusUpdate",status:e})}goal(){this.updateStatus(s.goal)}updateTags(e){if(!this.authenticated)throw new h("Cannot update tags while not connected and authenticated.");this.socket.send({cmd:"ConnectUpdate",tags:e,items_handling:this.arguments.items})}updateItemsHandling(e){if(!this.authenticated)throw new h("Cannot update tags while not connected and authenticated.");this.socket.send({cmd:"ConnectUpdate",tags:this.arguments.tags,items_handling:e})}check(...e){if(!this.authenticated)throw new h("Cannot check locations while not connected and authenticated.");e=e.filter(e=>this.room.missingLocations.includes(e)),this.socket.send({cmd:"LocationChecks",locations:e})}async scout(e,t=0){if(!this.authenticated)throw new h("Cannot scout locations while not connected and authenticated.");e=e.filter(e=>this.room.allLocations.includes(e));let[s]=await this.socket.send({cmd:"LocationScouts",create_as_hint:t,locations:e}).wait("locationInfo",t=>t.locations.map(e=>e.location).toSorted().join(",")===e.toSorted().join(","));return s.locations.map(e=>new p(this,e,this.players.self,this.players.findPlayer(e.player)))}bounce(e,t){if(!this.authenticated)throw new h("Cannot send bounces while not connected and authenticated.");this.socket.send({cmd:"Bounce",data:t,games:e.games??[],slots:e.slots??[],tags:e.tags??[]})}}let R=new U;window.client=R;let A=document.querySelector("#connection-details"),N=getP8Gpio(),O={Springboards:[0,1],"Double Jump":[1,4],Dive:[2,7],Key:[3,10],"Starting Medal":[4,0],"Springboards Medal":[5,2],"Lava Medal":[6,9],"Cage Medal":[7,5],"Ice Medal":[8,12],victory:[9,13],"Enter Crossprings":[10,3],"Enter Upper Ice":[11,6],"Enter Lava":[12,8],"Enter Lower Ice":[13,11]},W={springboards:[0,3],"double jump":[1,0],dive:[2,1],key:[3,2],"starting medal":[4,4],"springboards medal":[5,5],"lava medal":[6,6],"cage medal":[7,7],"ice medal":[8,8]},z=[],V={},q=0,F={},G=0;function H(e){let t=37;for(let s=0;s<e.length;s++)N[t]=e[s].charCodeAt(0),t++}R.messages.on("connected",async(e,t,s,i)=>{console.log("Connected to server: ",t),q=t.slot,Object.entries(R.players.slots).forEach(([e,t])=>{let s=parseInt(e),i=R.players.findPlayer(s);F[s]={slot:s,name:t.name,game:t.game,alias:i.alias}});let a=1;0!==(V=await t.fetchSlotData().then(e=>e)).DeathLink&&(a+=2,R.socket.send({cmd:"ConnectUpdate",items_handling:n.all,tags:["DeathLink"]}),G=V.DeathLink_Amnesty),V.MedalHunt&&(a+=4),V.ExtraCheckpoint&&(a+=8),V.ExtraChecks&&(a+=16),N[20]=a,R.socket.send({cmd:"Sync"})}),R.items.on("itemsReceived",async(e,t)=>{if(console.log("Received items: ",e),0===t)for(let e=10;e<20;e++)N[e]=0;for(let t=0;t<e.length;t++){let s=e[t];for(let e in 0x49ddd8e75==s.id&&(s.sender.slot==q?H("found counterfeit medal :("):H(`got counterfeit medal from ${""!==s.sender.alias?s.sender.alias:s.sender.name} :(`.toLowerCase())),W)if(0x49ddd8e6c+W[e][1]===s.id){let t=Math.floor(W[e][0]/8)+10,i=2**(W[e][0]%8);N[t]&i?console.log(`${e} has already been received`):(N[t]|=i,s.sender.slot===q?H(`found ${e}`.toLowerCase()):H(`got ${e} from ${""!==s.sender.alias?s.sender.alias:s.sender.name}`.toLowerCase()))}}}),R.socket.on("bounced",(e,t)=>{if(console.log("Bounced ",e),e.tags.includes("DeathLink")&&0!==V.DeathLink){if(N[25]=1|N[25],G+=1,e.data.source&&e.data.source!==q){let t=e.data.source,s=Object.values(F).filter(e=>e.name==t)[0];H(`deathlinked by ${""!==s.alias?s.alias:s.name}`.toLowerCase())}else H("deathlinked")}}),R.socket.on("locationInfo",e=>{console.log("Location Info: ",e),e.locations.forEach(e=>{if(e.player!==q){let t=new p(R,e,R.players.self,R.players.findPlayer(e.player)).name;H(`sent ${t} to ${F[e.player].alias?F[e.player].alias:F[e.player].name}`.toLowerCase())}})}),A.addEventListener("submit",async e=>{e.preventDefault();let t=document.querySelector("#hostname").value,s=document.querySelector("#port").value,i=document.querySelector("#password").value,a=document.querySelector("#slot-name").value;console.log(t),console.log(s),console.log(a);let o=document.querySelector(".status-wrapper"),r=document.querySelector(".status-connected"),c=document.querySelector(".status-failed"),l=document.querySelector(".status-connecting");o.classList.remove("d-none"),r.classList.add("d-none"),c.classList.add("d-none"),l.classList.remove("d-none"),await R.login(t.startsWith("ws")?`${t}:${s}`:`wss://${t}:${s}`,a,"MetroCUBEvania",{password:i,items:n.all,version:{build:0,major:5,minor:0}}).then(()=>{console.log("Connected to the server"),l.classList.add("d-none"),r.classList.remove("d-none");let e=document.querySelector(".toggle-login-form"),t=document.querySelector(".login-form");e.addEventListener("click",()=>{t.classList.toggle("d-none",!t.classList.contains("d-none"))}),t.classList.add("d-none"),e.classList.remove("d-none")}).catch(e=>{console.error("Failed to connect:",e),l.classList.add("d-none"),c.classList.remove("d-none")})}),N.subscribe(async function(e){if(0!==V.DeathLink&&(2&N[25])!=0){console.log("Death"),N[25]=N[25]-2,G-=1;for(let e=0;e<1;e++)console.log("test)");0===G&&(G=V.DeathLink_Amnesty,R.socket.send({cmd:"Bounce",tags:["DeathLink"],data:{source:q}}),V.DeathLink_Amnesty>1&&H("sent deathlink"))}for(let e in O)(N[Math.floor(O[e][0]/8)]&2**(O[e][0]%8))!=0&&("victory"===e?R.goal():(console.log(`Checking location id: ${0x49ddd8e6c+O[e][1]}`),R.check(0x49ddd8e6c+O[e][1]),z.includes(0x49ddd8e6c+O[e][1])||await R.scout([0x49ddd8e6c+O[e][1]],0),z.push(0x49ddd8e6c+O[e][1])))})})();
//# sourceMappingURL=client.js.map
